from django.urls import include, path, re_path
from django.views.generic.base import RedirectView

from pretix.control.views import (
    auth, checkin, dashboards, event, geo, global_settings, item, main, oauth,
    orderimport, orders, organizer, pdf, search, shredder, subevents,
    typeahead, user, users, vouchers, waitinglist,
)

urlpatterns = [
    path('logout', auth.logout, name='auth.logout'),
    path('login', auth.login, name='auth.login'),
    path('login/2fa', auth.Login2FAView.as_view(), name='auth.login.2fa'),
    path('register', auth.register, name='auth.register'),
    re_path(r'^invite/(?P<token>[a-zA-Z0-9]+)$', auth.invite, name='auth.invite'),
    path('forgot', auth.Forgot.as_view(), name='auth.forgot'),
    path('forgot/recover', auth.Recover.as_view(), name='auth.forgot.recover'),
    path('', dashboards.user_index, name='index'),
    re_path(r'^widgets.json$', dashboards.user_index_widgets_lazy, name='index.widgets'),
    path('global/settings/', global_settings.GlobalSettingsView.as_view(), name='global.settings'),
    path('global/update/', global_settings.UpdateCheckView.as_view(), name='global.update'),
    path('global/message/', global_settings.MessageView.as_view(), name='global.message'),
    path('logdetail/', global_settings.LogDetailView.as_view(), name='global.logdetail'),
    path('logdetail/payment/', global_settings.PaymentDetailView.as_view(), name='global.paymentdetail'),
    path('logdetail/refund/', global_settings.RefundDetailView.as_view(), name='global.refunddetail'),
    path('geocode/', geo.GeoCodeView.as_view(), name='global.geocode'),
    path('reauth/', user.ReauthView.as_view(), name='user.reauth'),
    path('sudo/', user.StartStaffSession.as_view(), name='user.sudo'),
    path('sudo/stop/', user.StopStaffSession.as_view(), name='user.sudo.stop'),
    path('sudo/<int:id>/', user.EditStaffSession.as_view(), name='user.sudo.edit'),
    path('sudo/sessions/', user.StaffSessionList.as_view(), name='user.sudo.list'),
    path('users/', users.UserListView.as_view(), name='users'),
    path('users/select2', typeahead.users_select2, name='users.select2'),
    path('users/add', users.UserCreateView.as_view(), name='users.add'),
    re_path(r'^users/impersonate/stop', users.UserImpersonateStopView.as_view(), name='users.impersonate.stop'),
    path('users/<int:id>/', users.UserEditView.as_view(), name='users.edit'),
    path('users/<int:id>/reset', users.UserResetView.as_view(), name='users.reset'),
    re_path(r'^users/(?P<id>\d+)/impersonate', users.UserImpersonateView.as_view(), name='users.impersonate'),
    re_path(r'^users/(?P<id>\d+)/anonymize', users.UserAnonymizeView.as_view(), name='users.anonymize'),
    re_path(r'^pdf/editor/webfonts.css', pdf.FontsCSSView.as_view(), name='pdf.css'),
    re_path(r'^settings/?$', user.UserSettings.as_view(), name='user.settings'),
    path('settings/history/', user.UserHistoryView.as_view(), name='user.settings.history'),
    path('settings/notifications/', user.UserNotificationsEditView.as_view(), name='user.settings.notifications'),
    path('settings/notifications/off/<int:id>/<str:token>/', user.UserNotificationsDisableView.as_view(),
        name='user.settings.notifications.off'),
    path('settings/oauth/authorized/', oauth.AuthorizationListView.as_view(),
        name='user.settings.oauth.list'),
    path('settings/oauth/authorized/<int:pk>/revoke', oauth.AuthorizationRevokeView.as_view(),
        name='user.settings.oauth.revoke'),
    path('settings/oauth/apps/', oauth.OAuthApplicationListView.as_view(),
        name='user.settings.oauth.apps'),
    path('settings/oauth/apps/add', oauth.OAuthApplicationRegistrationView.as_view(),
        name='user.settings.oauth.apps.register'),
    path('settings/oauth/apps/<int:pk>/', oauth.OAuthApplicationUpdateView.as_view(),
        name='user.settings.oauth.app'),
    path('settings/oauth/apps/<int:pk>/disable', oauth.OAuthApplicationDeleteView.as_view(),
        name='user.settings.oauth.app.disable'),
    path('settings/oauth/apps/<int:pk>/roll', oauth.OAuthApplicationRollView.as_view(),
        name='user.settings.oauth.app.roll'),
    path('settings/2fa/', user.User2FAMainView.as_view(), name='user.settings.2fa'),
    path('settings/2fa/add', user.User2FADeviceAddView.as_view(), name='user.settings.2fa.add'),
    re_path(r'^settings/2fa/enable', user.User2FAEnableView.as_view(), name='user.settings.2fa.enable'),
    re_path(r'^settings/2fa/disable', user.User2FADisableView.as_view(), name='user.settings.2fa.disable'),
    re_path(r'^settings/2fa/regenemergency', user.User2FARegenerateEmergencyView.as_view(),
        name='user.settings.2fa.regenemergency'),
    re_path(r'^settings/2fa/totp/(?P<device>[0-9]+)/confirm', user.User2FADeviceConfirmTOTPView.as_view(),
        name='user.settings.2fa.confirm.totp'),
    re_path(r'^settings/2fa/webauthn/(?P<device>[0-9]+)/confirm', user.User2FADeviceConfirmWebAuthnView.as_view(),
        name='user.settings.2fa.confirm.webauthn'),
    re_path(r'^settings/2fa/(?P<devicetype>[^/]+)/(?P<device>[0-9]+)/delete', user.User2FADeviceDeleteView.as_view(),
        name='user.settings.2fa.delete'),
    path('organizers/', organizer.OrganizerList.as_view(), name='organizers'),
    path('organizers/add', organizer.OrganizerCreate.as_view(), name='organizers.add'),
    path('organizers/select2', typeahead.organizer_select2, name='organizers.select2'),
    path('organizer/<str:organizer>/', organizer.OrganizerDetail.as_view(), name='organizer'),
    path('organizer/<str:organizer>/edit', organizer.OrganizerUpdate.as_view(), name='organizer.edit'),
    path('organizer/<str:organizer>/delete', organizer.OrganizerDelete.as_view(), name='organizer.delete'),
    path('organizer/<str:organizer>/settings/display', organizer.OrganizerDisplaySettings.as_view(),
        name='organizer.display'),
    path('organizer/<str:organizer>/properties', organizer.EventMetaPropertyListView.as_view(), name='organizer.properties'),
    path('organizer/<str:organizer>/property/add', organizer.EventMetaPropertyCreateView.as_view(),
        name='organizer.property.add'),
    path('organizer/<str:organizer>/property/<str:property>/edit', organizer.EventMetaPropertyUpdateView.as_view(),
        name='organizer.property.edit'),
    path('organizer/<str:organizer>/property/<str:property>/delete', organizer.EventMetaPropertyDeleteView.as_view(),
        name='organizer.property.delete'),
    path('organizer/<str:organizer>/giftcards', organizer.GiftCardListView.as_view(), name='organizer.giftcards'),
    path('organizer/<str:organizer>/giftcard/add', organizer.GiftCardCreateView.as_view(), name='organizer.giftcard.add'),
    path('organizer/<str:organizer>/giftcard/<str:giftcard>/', organizer.GiftCardDetailView.as_view(), name='organizer.giftcard'),
    path('organizer/<str:organizer>/giftcard/<str:giftcard>/edit', organizer.GiftCardUpdateView.as_view(),
        name='organizer.giftcard.edit'),
    path('organizer/<str:organizer>/webhooks', organizer.WebHookListView.as_view(), name='organizer.webhooks'),
    path('organizer/<str:organizer>/webhook/add', organizer.WebHookCreateView.as_view(),
        name='organizer.webhook.add'),
    path('organizer/<str:organizer>/webhook/<str:webhook>/edit', organizer.WebHookUpdateView.as_view(),
        name='organizer.webhook.edit'),
    path('organizer/<str:organizer>/webhook/<str:webhook>/logs', organizer.WebHookLogsView.as_view(),
        name='organizer.webhook.logs'),
    path('organizer/<str:organizer>/devices', organizer.DeviceListView.as_view(), name='organizer.devices'),
    path('organizer/<str:organizer>/device/add', organizer.DeviceCreateView.as_view(),
        name='organizer.device.add'),
    path('organizer/<str:organizer>/device/<str:device>/edit', organizer.DeviceUpdateView.as_view(),
        name='organizer.device.edit'),
    path('organizer/<str:organizer>/device/<str:device>/connect', organizer.DeviceConnectView.as_view(),
        name='organizer.device.connect'),
    path('organizer/<str:organizer>/device/<str:device>/revoke', organizer.DeviceRevokeView.as_view(),
        name='organizer.device.revoke'),
    path('organizer/<str:organizer>/device/<str:device>/logs', organizer.DeviceLogView.as_view(),
        name='organizer.device.logs'),
    path('organizer/<str:organizer>/gates', organizer.GateListView.as_view(), name='organizer.gates'),
    path('organizer/<str:organizer>/gate/add', organizer.GateCreateView.as_view(), name='organizer.gate.add'),
    path('organizer/<str:organizer>/gate/<str:gate>/edit', organizer.GateUpdateView.as_view(),
        name='organizer.gate.edit'),
    path('organizer/<str:organizer>/gate/<str:gate>/delete', organizer.GateDeleteView.as_view(),
        name='organizer.gate.delete'),
    path('organizer/<str:organizer>/teams', organizer.TeamListView.as_view(), name='organizer.teams'),
    path('organizer/<str:organizer>/team/add', organizer.TeamCreateView.as_view(), name='organizer.team.add'),
    path('organizer/<str:organizer>/team/<str:team>/', organizer.TeamMemberView.as_view(),
        name='organizer.team'),
    path('organizer/<str:organizer>/team/<str:team>/edit', organizer.TeamUpdateView.as_view(),
        name='organizer.team.edit'),
    path('organizer/<str:organizer>/team/<str:team>/delete', organizer.TeamDeleteView.as_view(),
        name='organizer.team.delete'),
    re_path(r'^organizer/(?P<organizer>[^/]+)/slugrng', main.SlugRNG.as_view(), name='events.add.slugrng'),
    re_path(r'^organizer/(?P<organizer>[^/]+)/logs', organizer.LogView.as_view(), name='organizer.log'),
    path('organizer/<str:organizer>/export/', organizer.ExportView.as_view(), name='organizer.export'),
    path('organizer/<str:organizer>/export/do', organizer.ExportDoView.as_view(), name='organizer.export.do'),
    path('nav/typeahead/', typeahead.nav_context_list, name='nav.typeahead'),
    path('events/', main.EventList.as_view(), name='events'),
    path('events/add', main.EventWizard.as_view(), name='events.add'),
    path('events/typeahead/', typeahead.event_list, name='events.typeahead'),
    path('events/typeahead/meta/', typeahead.meta_values, name='events.meta.typeahead'),
    path('search/orders/', search.OrderSearch.as_view(), name='search.orders'),
    path('event/<str:organizer>/<str:event>/', include([
        path('', dashboards.event_index, name='event.index'),
        re_path(r'^widgets.json$', dashboards.event_index_widgets_lazy, name='event.index.widgets'),
        path('live/', event.EventLive.as_view(), name='event.live'),
        path('logs/', event.EventLog.as_view(), name='event.log'),
        path('delete/', event.EventDelete.as_view(), name='event.delete'),
        path('requiredactions/', event.EventActions.as_view(), name='event.requiredactions'),
        path('requiredactions/<int:id>/discard', event.EventActionDiscard.as_view(),
            name='event.requiredaction.discard'),
        path('comment/', event.EventComment.as_view(),
            name='event.comment'),
        path('quickstart/', event.QuickSetupView.as_view(), name='event.quick'),
        path('settings/', event.EventUpdate.as_view(), name='event.settings'),
        path('settings/plugins', event.EventPlugins.as_view(), name='event.settings.plugins'),
        path('settings/payment/<str:provider>', event.PaymentProviderSettings.as_view(),
            name='event.settings.payment.provider'),
        path('settings/payment', event.PaymentSettings.as_view(), name='event.settings.payment'),
        path('settings/tickets', event.TicketSettings.as_view(), name='event.settings.tickets'),
        path('settings/tickets/preview/<str:output>', event.TicketSettingsPreview.as_view(),
            name='event.settings.tickets.preview'),
        path('settings/email', event.MailSettings.as_view(), name='event.settings.mail'),
        path('settings/email/preview', event.MailSettingsPreview.as_view(), name='event.settings.mail.preview'),
        path('settings/email/layoutpreview', event.MailSettingsRendererPreview.as_view(),
            name='event.settings.mail.preview.layout'),
        re_path(r'^settings/cancel', event.CancelSettings.as_view(), name='event.settings.cancel'),
        path('settings/invoice', event.InvoiceSettings.as_view(), name='event.settings.invoice'),
        path('settings/invoice/preview', event.InvoicePreview.as_view(), name='event.settings.invoice.preview'),
        re_path(r'^settings/display', event.DisplaySettings.as_view(), name='event.settings.display'),
        path('settings/tax/', event.TaxList.as_view(), name='event.settings.tax'),
        path('settings/tax/<int:rule>/', event.TaxUpdate.as_view(), name='event.settings.tax.edit'),
        path('settings/tax/add', event.TaxCreate.as_view(), name='event.settings.tax.add'),
        path('settings/tax/<int:rule>/delete', event.TaxDelete.as_view(), name='event.settings.tax.delete'),
        path('settings/widget', event.WidgetSettings.as_view(), name='event.settings.widget'),
        re_path(r'^pdf/editor/webfonts.css', pdf.FontsCSSView.as_view(), name='pdf.css'),
        re_path(r'^pdf/editor/(?P<filename>[^/]+).pdf$', pdf.PdfView.as_view(), name='pdf.background'),
        path('subevents/', subevents.SubEventList.as_view(), name='event.subevents'),
        path('subevents/select2', typeahead.subevent_select2, name='event.subevents.select2'),
        path('subevents/<int:subevent>/', subevents.SubEventUpdate.as_view(), name='event.subevent'),
        path('subevents/<int:subevent>/delete', subevents.SubEventDelete.as_view(),
            name='event.subevent.delete'),
        path('subevents/add', subevents.SubEventCreate.as_view(), name='event.subevents.add'),
        path('subevents/bulk_add', subevents.SubEventBulkCreate.as_view(), name='event.subevents.bulk'),
        path('subevents/bulk_action', subevents.SubEventBulkAction.as_view(), name='event.subevents.bulkaction'),
        path('subevents/bulk_edit', subevents.SubEventBulkEdit.as_view(), name='event.subevents.bulkedit'),
        path('items/', item.ItemList.as_view(), name='event.items'),
        path('items/add', item.ItemCreate.as_view(), name='event.items.add'),
        path('items/<int:item>/', item.ItemUpdateGeneral.as_view(), name='event.item'),
        path('items/<int:item>/up', item.item_move_up, name='event.items.up'),
        path('items/<int:item>/down', item.item_move_down, name='event.items.down'),
        path('items/<int:item>/delete', item.ItemDelete.as_view(), name='event.items.delete'),
        path('items/typeahead/meta/', typeahead.item_meta_values, name='event.items.meta.typeahead'),
        path('items/select2', typeahead.items_select2, name='event.items.select2'),
        path('items/select2/variation', typeahead.variations_select2, name='event.items.variations.select2'),
        path('categories/', item.CategoryList.as_view(), name='event.items.categories'),
        path('categories/select2', typeahead.category_select2, name='event.items.categories.select2'),
        path('categories/<int:category>/delete', item.CategoryDelete.as_view(),
            name='event.items.categories.delete'),
        path('categories/<int:category>/up', item.category_move_up, name='event.items.categories.up'),
        path('categories/<int:category>/down', item.category_move_down,
            name='event.items.categories.down'),
        path('categories/<int:category>/', item.CategoryUpdate.as_view(),
            name='event.items.categories.edit'),
        path('categories/add', item.CategoryCreate.as_view(), name='event.items.categories.add'),
        path('questions/', item.QuestionList.as_view(), name='event.items.questions'),
        path('questions/reorder', item.reorder_questions, name='event.items.questions.reorder'),
        path('questions/<int:question>/delete', item.QuestionDelete.as_view(),
            name='event.items.questions.delete'),
        path('questions/<int:question>/', item.QuestionView.as_view(),
            name='event.items.questions.show'),
        path('questions/<int:question>/change', item.QuestionUpdate.as_view(),
            name='event.items.questions.edit'),
        path('questions/add', item.QuestionCreate.as_view(), name='event.items.questions.add'),
        path('quotas/', item.QuotaList.as_view(), name='event.items.quotas'),
        path('quotas/<int:quota>/', item.QuotaView.as_view(), name='event.items.quotas.show'),
        path('quotas/select', typeahead.quotas_select2, name='event.items.quotas.select2'),
        path('quotas/<int:quota>/change', item.QuotaUpdate.as_view(), name='event.items.quotas.edit'),
        path('quotas/<int:quota>/delete', item.QuotaDelete.as_view(),
            name='event.items.quotas.delete'),
        path('quotas/add', item.QuotaCreate.as_view(), name='event.items.quotas.add'),
        path('vouchers/', vouchers.VoucherList.as_view(), name='event.vouchers'),
        path('vouchers/tags/', vouchers.VoucherTags.as_view(), name='event.vouchers.tags'),
        path('vouchers/rng', vouchers.VoucherRNG.as_view(), name='event.vouchers.rng'),
        path('vouchers/item_select', typeahead.itemvarquota_select2, name='event.vouchers.itemselect2'),
        path('vouchers/<int:voucher>/', vouchers.VoucherUpdate.as_view(), name='event.voucher'),
        path('vouchers/<int:voucher>/delete', vouchers.VoucherDelete.as_view(),
            name='event.voucher.delete'),
        path('vouchers/add', vouchers.VoucherCreate.as_view(), name='event.vouchers.add'),
        path('vouchers/go', vouchers.VoucherGo.as_view(), name='event.vouchers.go'),
        path('vouchers/bulk_add', vouchers.VoucherBulkCreate.as_view(), name='event.vouchers.bulk'),
        path('vouchers/bulk_action', vouchers.VoucherBulkAction.as_view(), name='event.vouchers.bulkaction'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/transition$', orders.OrderTransition.as_view(),
            name='event.order.transition'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/resend$', orders.OrderResendLink.as_view(),
            name='event.order.resendlink'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/(?P<position>\d+)/resend$', orders.OrderResendLink.as_view(),
            name='event.order.resendlink'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/invoice$', orders.OrderInvoiceCreate.as_view(),
            name='event.order.geninvoice'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/invoices/(?P<id>\d+)/regenerate$', orders.OrderInvoiceRegenerate.as_view(),
            name='event.order.regeninvoice'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/invoices/(?P<id>\d+)/reissue$', orders.OrderInvoiceReissue.as_view(),
            name='event.order.reissueinvoice'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/download/(?P<position>\d+)/(?P<output>[^/]+)/$',
            orders.OrderDownload.as_view(),
            name='event.order.download.ticket'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/answer/(?P<answer>[^/]+)/$',
            orders.AnswerDownload.as_view(),
            name='event.order.download.answer'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/checkvatid', orders.OrderCheckVATID.as_view(),
            name='event.order.checkvatid'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/extend$', orders.OrderExtend.as_view(),
            name='event.order.extend'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/reactivate$', orders.OrderReactivate.as_view(),
            name='event.order.reactivate'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/contact$', orders.OrderContactChange.as_view(),
            name='event.order.contact'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/locale', orders.OrderLocaleChange.as_view(),
            name='event.order.locale'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/comment$', orders.OrderComment.as_view(),
            name='event.order.comment'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/change$', orders.OrderChange.as_view(),
            name='event.order.change'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/approve', orders.OrderApprove.as_view(),
            name='event.order.approve'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/deny$', orders.OrderDeny.as_view(),
            name='event.order.deny'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/delete$', orders.OrderDelete.as_view(),
            name='event.order.delete'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/info', orders.OrderModifyInformation.as_view(),
            name='event.order.info'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/sendmail$', orders.OrderSendMail.as_view(),
            name='event.order.sendmail'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/(?P<position>[0-9A-Z]+)/sendmail$', orders.OrderPositionSendMail.as_view(),
            name='event.order.position.sendmail'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/mail_history$', orders.OrderEmailHistory.as_view(),
            name='event.order.mail_history'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/payments/(?P<payment>\d+)/cancel$', orders.OrderPaymentCancel.as_view(),
            name='event.order.payments.cancel'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/payments/(?P<payment>\d+)/confirm$', orders.OrderPaymentConfirm.as_view(),
            name='event.order.payments.confirm'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/refund$', orders.OrderRefundView.as_view(),
            name='event.order.refunds.start'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/refunds/(?P<refund>\d+)/cancel$', orders.OrderRefundCancel.as_view(),
            name='event.order.refunds.cancel'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/refunds/(?P<refund>\d+)/process$', orders.OrderRefundProcess.as_view(),
            name='event.order.refunds.process'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/refunds/(?P<refund>\d+)/done$', orders.OrderRefundDone.as_view(),
            name='event.order.refunds.done'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/cancellationrequests/(?P<req>\d+)/delete$',
            orders.OrderCancellationRequestDelete.as_view(),
            name='event.order.cancellationrequests.delete'),
        re_path(r'^orders/(?P<code>[0-9A-Z]+)/$', orders.OrderDetail.as_view(), name='event.order'),
        path('invoice/<str:invoice>', orders.InvoiceDownload.as_view(),
            name='event.invoice.download'),
        path('orders/overview/', orders.OverView.as_view(), name='event.orders.overview'),
        path('orders/import/', orderimport.ImportView.as_view(), name='event.orders.import'),
        path('orders/import/<str:file>/', orderimport.ProcessView.as_view(), name='event.orders.import.process'),
        path('orders/export/', orders.ExportView.as_view(), name='event.orders.export'),
        path('orders/export/do', orders.ExportDoView.as_view(), name='event.orders.export.do'),
        path('orders/refunds/', orders.RefundList.as_view(), name='event.orders.refunds'),
        path('orders/go', orders.OrderGo.as_view(), name='event.orders.go'),
        path('orders/', orders.OrderList.as_view(), name='event.orders'),
        path('orders/search', orders.OrderSearch.as_view(), name='event.orders.search'),
        path('dangerzone/', event.DangerZone.as_view(), name='event.dangerzone'),
        path('cancel/', orders.EventCancel.as_view(), name='event.cancel'),
        path('shredder/', shredder.StartShredView.as_view(), name='event.shredder.start'),
        path('shredder/export', shredder.ShredExportView.as_view(), name='event.shredder.export'),
        path('shredder/download/<str:file>/', shredder.ShredDownloadView.as_view(), name='event.shredder.download'),
        re_path(r'^shredder/shred', shredder.ShredDoView.as_view(), name='event.shredder.shred'),
        path('waitinglist/', waitinglist.WaitingListView.as_view(), name='event.orders.waitinglist'),
        path('waitinglist/auto_assign', waitinglist.AutoAssign.as_view(), name='event.orders.waitinglist.auto'),
        path('waitinglist/<int:entry>/delete', waitinglist.EntryDelete.as_view(),
            name='event.orders.waitinglist.delete'),
        path('checkinlists/', checkin.CheckinListList.as_view(), name='event.orders.checkinlists'),
        path('checkinlists/add', checkin.CheckinListCreate.as_view(), name='event.orders.checkinlists.add'),
        path('checkinlists/select2', typeahead.checkinlist_select2, name='event.orders.checkinlists.select2'),
        path('checkinlists/<int:list>/', checkin.CheckInListShow.as_view(), name='event.orders.checkinlists.show'),
        path('checkinlists/<int:list>/change', checkin.CheckinListUpdate.as_view(),
            name='event.orders.checkinlists.edit'),
        path('checkinlists/<int:list>/delete', checkin.CheckinListDelete.as_view(),
            name='event.orders.checkinlists.delete'),
    ])),
    path('event/<str:organizer>/', RedirectView.as_view(pattern_name='control:organizer'), name='event.organizerredirect'),
]
