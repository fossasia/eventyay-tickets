from django.http import HttpResponse
from django.urls import include, path
from django.urls import re_path as url

from eventyay.control.views import (
    admin,
    dashboards,
    main,
    organizer,
    organizer_views,
    typeahead,
)

urlpatterns = [
    url(r'^$', dashboards.user_index, name='index'),
    url(r'^organizers/$', organizer_views.organizer_view.OrganizerList.as_view(), name='organizers'),
    url(r'^organizers/add$', organizer_views.organizer_view.OrganizerCreate.as_view(), name='organizers.add'),
    url(r'^organizers/select2$', typeahead.organizer_select2, name='organizers.select2'),
    url(
        r'^organizer/(?P<organizer>[^/]+)/$',
        organizer_views.organizer_view.OrganizerDetail.as_view(),
        name='organizer',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/edit$',
        organizer_views.organizer_view.OrganizerUpdate.as_view(),
        name='organizer.edit',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/delete$',
        organizer_views.organizer_view.OrganizerDelete.as_view(),
        name='organizer.delete',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/settings/display$',
        organizer_views.organizer_view.OrganizerDisplaySettings.as_view(),
        name='organizer.display',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/settings/billing$',
        organizer_views.organizer_view.BillingSettings.as_view(),
        name='organizer.settings.billing',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/setup_intent$',
        organizer_views.organizer_view.setup_intent,
        name='organizer.setup_intent',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/save_payment_information$',
        organizer_views.organizer_view.save_payment_information,
        name='organizer.save_payment_information',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/properties$',
        organizer.EventMetaPropertyListView.as_view(),
        name='organizer.properties',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/property/add$',
        organizer.EventMetaPropertyCreateView.as_view(),
        name='organizer.property.add',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/property/(?P<property>[^/]+)/edit$',
        organizer.EventMetaPropertyUpdateView.as_view(),
        name='organizer.property.edit',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/property/(?P<property>[^/]+)/delete$',
        organizer.EventMetaPropertyDeleteView.as_view(),
        name='organizer.property.delete',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/giftcards$',
        organizer_views.gift_card_view.GiftCardListView.as_view(),
        name='organizer.giftcards',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/giftcard/add$',
        organizer_views.gift_card_view.GiftCardCreateView.as_view(),
        name='organizer.giftcard.add',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/giftcard/(?P<giftcard>[^/]+)/$',
        organizer_views.gift_card_view.GiftCardDetailView.as_view(),
        name='organizer.giftcard',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/giftcard/(?P<giftcard>[^/]+)/edit$',
        organizer_views.gift_card_view.GiftCardUpdateView.as_view(),
        name='organizer.giftcard.edit',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/webhooks$',
        organizer_views.web_hook_view.WebHookListView.as_view(),
        name='organizer.webhooks',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/webhook/add$',
        organizer_views.web_hook_view.WebHookCreateView.as_view(),
        name='organizer.webhook.add',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/webhook/(?P<webhook>[^/]+)/edit$',
        organizer_views.web_hook_view.WebHookUpdateView.as_view(),
        name='organizer.webhook.edit',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/webhook/(?P<webhook>[^/]+)/logs$',
        organizer_views.web_hook_view.WebHookLogsView.as_view(),
        name='organizer.webhook.logs',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/devices$',
        organizer_views.device_view.DeviceListView.as_view(),
        name='organizer.devices',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/device/add$',
        organizer_views.device_view.DeviceCreateView.as_view(),
        name='organizer.device.add',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/device/(?P<device>[^/]+)/edit$',
        organizer_views.device_view.DeviceUpdateView.as_view(),
        name='organizer.device.edit',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/device/(?P<device>[^/]+)/connect$',
        organizer_views.device_view.DeviceConnectView.as_view(),
        name='organizer.device.connect',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/device/(?P<device>[^/]+)/revoke$',
        organizer_views.device_view.DeviceRevokeView.as_view(),
        name='organizer.device.revoke',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/device/(?P<device>[^/]+)/logs$',
        organizer_views.device_view.DeviceLogView.as_view(),
        name='organizer.device.logs',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/gates$',
        organizer_views.gate_view.GateListView.as_view(),
        name='organizer.gates',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/gate/add$',
        organizer_views.gate_view.GateCreateView.as_view(),
        name='organizer.gate.add',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/gate/(?P<gate>[^/]+)/edit$',
        organizer_views.gate_view.GateUpdateView.as_view(),
        name='organizer.gate.edit',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/gate/(?P<gate>[^/]+)/delete$',
        organizer_views.gate_view.GateDeleteView.as_view(),
        name='organizer.gate.delete',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/teams$',
        organizer_views.team_view.TeamListView.as_view(),
        name='organizer.teams',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/team/add$',
        organizer_views.team_view.TeamCreateView.as_view(),
        name='organizer.team.add',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/team/(?P<team>[^/]+)/$',
        organizer_views.team_view.TeamMemberView.as_view(),
        name='organizer.team',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/team/(?P<team>[^/]+)/edit$',
        organizer_views.team_view.TeamUpdateView.as_view(),
        name='organizer.team.edit',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/team/(?P<team>[^/]+)/delete$',
        organizer_views.team_view.TeamDeleteView.as_view(),
        name='organizer.team.delete',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/slugrng',
        main.SlugRNG.as_view(),
        name='events.add.slugrng',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/logs',
        organizer.LogView.as_view(),
        name='organizer.log',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/export/$',
        organizer.ExportView.as_view(),
        name='organizer.export',
    ),
    url(
        r'^organizer/(?P<organizer>[^/]+)/export/do$',
        organizer.ExportDoView.as_view(),
        name='organizer.export.do',
    ),
    url(r'^nav/typeahead/$', typeahead.nav_context_list, name='nav.typeahead'),
    url(
        r'^admin/',
        include(
            [
                url(r'^$', admin.AdminDashboard.as_view(), name='admin.dashboard'),
                url(r'^organizers/$', admin.OrganizerList.as_view(), name='admin.organizers'),
                url(r'^events/$', admin.AdminEventList.as_view(), name='admin.events'),
                url(r'^task_management', admin.TaskList.as_view(), name='admin.task_management'),
            ]
        ),
    ),
]
