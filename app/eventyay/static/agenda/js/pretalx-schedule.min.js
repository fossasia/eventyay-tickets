/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function ts(e) {
  const t = /* @__PURE__ */ Object.create(null);
  for (const n of e.split(",")) t[n] = 1;
  return (n) => n in t;
}
const Ie = {}, Br = [], Jt = () => {
}, dh = () => !1, qi = (e) => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && // uppercase letter
(e.charCodeAt(2) > 122 || e.charCodeAt(2) < 97), Yo = (e) => e.startsWith("onUpdate:"), qe = Object.assign, Ko = (e, t) => {
  const n = e.indexOf(t);
  n > -1 && e.splice(n, 1);
}, hh = Object.prototype.hasOwnProperty, Be = (e, t) => hh.call(e, t), ce = Array.isArray, Vr = (e) => ii(e) === "[object Map]", wr = (e) => ii(e) === "[object Set]", Ha = (e) => ii(e) === "[object Date]", ph = (e) => ii(e) === "[object RegExp]", ve = (e) => typeof e == "function", Ye = (e) => typeof e == "string", dn = (e) => typeof e == "symbol", Ue = (e) => e !== null && typeof e == "object", Jo = (e) => (Ue(e) || ve(e)) && ve(e.then) && ve(e.catch), vc = Object.prototype.toString, ii = (e) => vc.call(e), mh = (e) => ii(e).slice(8, -1), ns = (e) => ii(e) === "[object Object]", Xo = (e) => Ye(e) && e !== "NaN" && e[0] !== "-" && "" + parseInt(e, 10) === e, Hr = /* @__PURE__ */ ts(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
), rs = (e) => {
  const t = /* @__PURE__ */ Object.create(null);
  return (n) => t[n] || (t[n] = e(n));
}, bh = /-(\w)/g, xt = rs(
  (e) => e.replace(bh, (t, n) => n ? n.toUpperCase() : "")
), gh = /\B([A-Z])/g, Bt = rs(
  (e) => e.replace(gh, "-$1").toLowerCase()
), Wi = rs((e) => e.charAt(0).toUpperCase() + e.slice(1)), xi = rs(
  (e) => e ? `on${Wi(e)}` : ""
), Ft = (e, t) => !Object.is(e, t), Ur = (e, ...t) => {
  for (let n = 0; n < e.length; n++)
    e[n](...t);
}, kc = (e, t, n, r = !1) => {
  Object.defineProperty(e, t, {
    configurable: !0,
    enumerable: !1,
    writable: r,
    value: n
  });
}, Fu = (e) => {
  const t = parseFloat(e);
  return isNaN(t) ? e : t;
}, Mu = (e) => {
  const t = Ye(e) ? Number(e) : NaN;
  return isNaN(t) ? e : t;
};
let Ua;
const is = () => Ua || (Ua = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {}), yh = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol", _h = /* @__PURE__ */ ts(yh);
function yt(e) {
  if (ce(e)) {
    const t = {};
    for (let n = 0; n < e.length; n++) {
      const r = e[n], i = Ye(r) ? wh(r) : yt(r);
      if (i)
        for (const u in i)
          t[u] = i[u];
    }
    return t;
  } else if (Ye(e) || Ue(e))
    return e;
}
const xh = /;(?![^(]*\))/g, vh = /:([^]+)/, kh = /\/\*[^]*?\*\//g;
function wh(e) {
  const t = {};
  return e.replace(kh, "").split(xh).forEach((n) => {
    if (n) {
      const r = n.split(vh);
      r.length > 1 && (t[r[0].trim()] = r[1].trim());
    }
  }), t;
}
function It(e) {
  let t = "";
  if (Ye(e))
    t = e;
  else if (ce(e))
    for (let n = 0; n < e.length; n++) {
      const r = It(e[n]);
      r && (t += r + " ");
    }
  else if (Ue(e))
    for (const n in e)
      e[n] && (t += n + " ");
  return t.trim();
}
function Eh(e) {
  if (!e) return null;
  let { class: t, style: n } = e;
  return t && !Ye(t) && (e.class = It(t)), n && (e.style = yt(n)), e;
}
const Ch = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly", Sh = /* @__PURE__ */ ts(Ch);
function wc(e) {
  return !!e || e === "";
}
function Th(e, t) {
  if (e.length !== t.length) return !1;
  let n = !0;
  for (let r = 0; n && r < e.length; r++)
    n = ir(e[r], t[r]);
  return n;
}
function ir(e, t) {
  if (e === t) return !0;
  let n = Ha(e), r = Ha(t);
  if (n || r)
    return n && r ? e.getTime() === t.getTime() : !1;
  if (n = dn(e), r = dn(t), n || r)
    return e === t;
  if (n = ce(e), r = ce(t), n || r)
    return n && r ? Th(e, t) : !1;
  if (n = Ue(e), r = Ue(t), n || r) {
    if (!n || !r)
      return !1;
    const i = Object.keys(e).length, u = Object.keys(t).length;
    if (i !== u)
      return !1;
    for (const s in e) {
      const o = e.hasOwnProperty(s), a = t.hasOwnProperty(s);
      if (o && !a || !o && a || !ir(e[s], t[s]))
        return !1;
    }
  }
  return String(e) === String(t);
}
function us(e, t) {
  return e.findIndex((n) => ir(n, t));
}
const Ec = (e) => !!(e && e.__v_isRef === !0), Ae = (e) => Ye(e) ? e : e == null ? "" : ce(e) || Ue(e) && (e.toString === vc || !ve(e.toString)) ? Ec(e) ? Ae(e.value) : JSON.stringify(e, Cc, 2) : String(e), Cc = (e, t) => Ec(t) ? Cc(e, t.value) : Vr(t) ? {
  [`Map(${t.size})`]: [...t.entries()].reduce(
    (n, [r, i], u) => (n[qs(r, u) + " =>"] = i, n),
    {}
  )
} : wr(t) ? {
  [`Set(${t.size})`]: [...t.values()].map((n) => qs(n))
} : dn(t) ? qs(t) : Ue(t) && !ce(t) && !ns(t) ? String(t) : t, qs = (e, t = "") => {
  var n;
  return (
    // Symbol.description in es2019+ so we need to cast here to pass
    // the lib: es2016 check
    dn(e) ? `Symbol(${(n = e.description) != null ? n : t})` : e
  );
};
/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
let At;
class Qo {
  constructor(t = !1) {
    this.detached = t, this._active = !0, this.effects = [], this.cleanups = [], this._isPaused = !1, this.parent = At, !t && At && (this.index = (At.scopes || (At.scopes = [])).push(
      this
    ) - 1);
  }
  get active() {
    return this._active;
  }
  pause() {
    if (this._active) {
      this._isPaused = !0;
      let t, n;
      if (this.scopes)
        for (t = 0, n = this.scopes.length; t < n; t++)
          this.scopes[t].pause();
      for (t = 0, n = this.effects.length; t < n; t++)
        this.effects[t].pause();
    }
  }
  /**
   * Resumes the effect scope, including all child scopes and effects.
   */
  resume() {
    if (this._active && this._isPaused) {
      this._isPaused = !1;
      let t, n;
      if (this.scopes)
        for (t = 0, n = this.scopes.length; t < n; t++)
          this.scopes[t].resume();
      for (t = 0, n = this.effects.length; t < n; t++)
        this.effects[t].resume();
    }
  }
  run(t) {
    if (this._active) {
      const n = At;
      try {
        return At = this, t();
      } finally {
        At = n;
      }
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    At = this;
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    At = this.parent;
  }
  stop(t) {
    if (this._active) {
      this._active = !1;
      let n, r;
      for (n = 0, r = this.effects.length; n < r; n++)
        this.effects[n].stop();
      for (this.effects.length = 0, n = 0, r = this.cleanups.length; n < r; n++)
        this.cleanups[n]();
      if (this.cleanups.length = 0, this.scopes) {
        for (n = 0, r = this.scopes.length; n < r; n++)
          this.scopes[n].stop(!0);
        this.scopes.length = 0;
      }
      if (!this.detached && this.parent && !t) {
        const i = this.parent.scopes.pop();
        i && i !== this && (this.parent.scopes[this.index] = i, i.index = this.index);
      }
      this.parent = void 0;
    }
  }
}
function Oh(e) {
  return new Qo(e);
}
function Sc() {
  return At;
}
function Dh(e, t = !1) {
  At && At.cleanups.push(e);
}
let Ze;
const Ws = /* @__PURE__ */ new WeakSet();
class Ai {
  constructor(t) {
    this.fn = t, this.deps = void 0, this.depsTail = void 0, this.flags = 5, this.next = void 0, this.cleanup = void 0, this.scheduler = void 0, At && At.active && At.effects.push(this);
  }
  pause() {
    this.flags |= 64;
  }
  resume() {
    this.flags & 64 && (this.flags &= -65, Ws.has(this) && (Ws.delete(this), this.trigger()));
  }
  /**
   * @internal
   */
  notify() {
    this.flags & 2 && !(this.flags & 32) || this.flags & 8 || Oc(this);
  }
  run() {
    if (!(this.flags & 1))
      return this.fn();
    this.flags |= 2, qa(this), Dc(this);
    const t = Ze, n = fn;
    Ze = this, fn = !0;
    try {
      return this.fn();
    } finally {
      Ac(this), Ze = t, fn = n, this.flags &= -3;
    }
  }
  stop() {
    if (this.flags & 1) {
      for (let t = this.deps; t; t = t.nextDep)
        na(t);
      this.deps = this.depsTail = void 0, qa(this), this.onStop && this.onStop(), this.flags &= -2;
    }
  }
  trigger() {
    this.flags & 64 ? Ws.add(this) : this.scheduler ? this.scheduler() : this.runIfDirty();
  }
  /**
   * @internal
   */
  runIfDirty() {
    _o(this) && this.run();
  }
  get dirty() {
    return _o(this);
  }
}
let Tc = 0, vi, ki;
function Oc(e, t = !1) {
  if (e.flags |= 8, t) {
    e.next = ki, ki = e;
    return;
  }
  e.next = vi, vi = e;
}
function ea() {
  Tc++;
}
function ta() {
  if (--Tc > 0)
    return;
  if (ki) {
    let t = ki;
    for (ki = void 0; t; ) {
      const n = t.next;
      t.next = void 0, t.flags &= -9, t = n;
    }
  }
  let e;
  for (; vi; ) {
    let t = vi;
    for (vi = void 0; t; ) {
      const n = t.next;
      if (t.next = void 0, t.flags &= -9, t.flags & 1)
        try {
          t.trigger();
        } catch (r) {
          e || (e = r);
        }
      t = n;
    }
  }
  if (e) throw e;
}
function Dc(e) {
  for (let t = e.deps; t; t = t.nextDep)
    t.version = -1, t.prevActiveLink = t.dep.activeLink, t.dep.activeLink = t;
}
function Ac(e) {
  let t, n = e.depsTail, r = n;
  for (; r; ) {
    const i = r.prevDep;
    r.version === -1 ? (r === n && (n = i), na(r), Ah(r)) : t = r, r.dep.activeLink = r.prevActiveLink, r.prevActiveLink = void 0, r = i;
  }
  e.deps = t, e.depsTail = n;
}
function _o(e) {
  for (let t = e.deps; t; t = t.nextDep)
    if (t.dep.version !== t.version || t.dep.computed && (Fc(t.dep.computed) || t.dep.version !== t.version))
      return !0;
  return !!e._dirty;
}
function Fc(e) {
  if (e.flags & 4 && !(e.flags & 16) || (e.flags &= -17, e.globalVersion === Fi))
    return;
  e.globalVersion = Fi;
  const t = e.dep;
  if (e.flags |= 2, t.version > 0 && !e.isSSR && e.deps && !_o(e)) {
    e.flags &= -3;
    return;
  }
  const n = Ze, r = fn;
  Ze = e, fn = !0;
  try {
    Dc(e);
    const i = e.fn(e._value);
    (t.version === 0 || Ft(i, e._value)) && (e._value = i, t.version++);
  } catch (i) {
    throw t.version++, i;
  } finally {
    Ze = n, fn = r, Ac(e), e.flags &= -3;
  }
}
function na(e, t = !1) {
  const { dep: n, prevSub: r, nextSub: i } = e;
  if (r && (r.nextSub = i, e.prevSub = void 0), i && (i.prevSub = r, e.nextSub = void 0), n.subs === e && (n.subs = r, !r && n.computed)) {
    n.computed.flags &= -5;
    for (let u = n.computed.deps; u; u = u.nextDep)
      na(u, !0);
  }
  !t && !--n.sc && n.map && n.map.delete(n.key);
}
function Ah(e) {
  const { prevDep: t, nextDep: n } = e;
  t && (t.nextDep = n, e.prevDep = void 0), n && (n.prevDep = t, e.nextDep = void 0);
}
function Fh(e, t) {
  e.effect instanceof Ai && (e = e.effect.fn);
  const n = new Ai(e);
  t && qe(n, t);
  try {
    n.run();
  } catch (i) {
    throw n.stop(), i;
  }
  const r = n.run.bind(n);
  return r.effect = n, r;
}
function Mh(e) {
  e.effect.stop();
}
let fn = !0;
const Mc = [];
function lr() {
  Mc.push(fn), fn = !1;
}
function cr() {
  const e = Mc.pop();
  fn = e === void 0 ? !0 : e;
}
function qa(e) {
  const { cleanup: t } = e;
  if (e.cleanup = void 0, t) {
    const n = Ze;
    Ze = void 0;
    try {
      t();
    } finally {
      Ze = n;
    }
  }
}
let Fi = 0;
class Nh {
  constructor(t, n) {
    this.sub = t, this.dep = n, this.version = n.version, this.nextDep = this.prevDep = this.nextSub = this.prevSub = this.prevActiveLink = void 0;
  }
}
class ss {
  constructor(t) {
    this.computed = t, this.version = 0, this.activeLink = void 0, this.subs = void 0, this.map = void 0, this.key = void 0, this.sc = 0;
  }
  track(t) {
    if (!Ze || !fn || Ze === this.computed)
      return;
    let n = this.activeLink;
    if (n === void 0 || n.sub !== Ze)
      n = this.activeLink = new Nh(Ze, this), Ze.deps ? (n.prevDep = Ze.depsTail, Ze.depsTail.nextDep = n, Ze.depsTail = n) : Ze.deps = Ze.depsTail = n, Nc(n);
    else if (n.version === -1 && (n.version = this.version, n.nextDep)) {
      const r = n.nextDep;
      r.prevDep = n.prevDep, n.prevDep && (n.prevDep.nextDep = r), n.prevDep = Ze.depsTail, n.nextDep = void 0, Ze.depsTail.nextDep = n, Ze.depsTail = n, Ze.deps === n && (Ze.deps = r);
    }
    return n;
  }
  trigger(t) {
    this.version++, Fi++, this.notify(t);
  }
  notify(t) {
    ea();
    try {
      for (let n = this.subs; n; n = n.prevSub)
        n.sub.notify() && n.sub.dep.notify();
    } finally {
      ta();
    }
  }
}
function Nc(e) {
  if (e.dep.sc++, e.sub.flags & 4) {
    const t = e.dep.computed;
    if (t && !e.dep.subs) {
      t.flags |= 20;
      for (let r = t.deps; r; r = r.nextDep)
        Nc(r);
    }
    const n = e.dep.subs;
    n !== e && (e.prevSub = n, n && (n.nextSub = e)), e.dep.subs = e;
  }
}
const Nu = /* @__PURE__ */ new WeakMap(), gr = Symbol(
  ""
), xo = Symbol(
  ""
), Mi = Symbol(
  ""
);
function kt(e, t, n) {
  if (fn && Ze) {
    let r = Nu.get(e);
    r || Nu.set(e, r = /* @__PURE__ */ new Map());
    let i = r.get(n);
    i || (r.set(n, i = new ss()), i.map = r, i.key = n), i.track();
  }
}
function An(e, t, n, r, i, u) {
  const s = Nu.get(e);
  if (!s) {
    Fi++;
    return;
  }
  const o = (a) => {
    a && a.trigger();
  };
  if (ea(), t === "clear")
    s.forEach(o);
  else {
    const a = ce(e), c = a && Xo(n);
    if (a && n === "length") {
      const l = Number(r);
      s.forEach((f, m) => {
        (m === "length" || m === Mi || !dn(m) && m >= l) && o(f);
      });
    } else
      switch ((n !== void 0 || s.has(void 0)) && o(s.get(n)), c && o(s.get(Mi)), t) {
        case "add":
          a ? c && o(s.get("length")) : (o(s.get(gr)), Vr(e) && o(s.get(xo)));
          break;
        case "delete":
          a || (o(s.get(gr)), Vr(e) && o(s.get(xo)));
          break;
        case "set":
          Vr(e) && o(s.get(gr));
          break;
      }
  }
  ta();
}
function Ih(e, t) {
  const n = Nu.get(e);
  return n && n.get(t);
}
function Dr(e) {
  const t = ze(e);
  return t === e ? t : (kt(t, "iterate", Mi), Ut(e) ? t : t.map(wt));
}
function os(e) {
  return kt(e = ze(e), "iterate", Mi), e;
}
const Lh = {
  __proto__: null,
  [Symbol.iterator]() {
    return $s(this, Symbol.iterator, wt);
  },
  concat(...e) {
    return Dr(this).concat(
      ...e.map((t) => ce(t) ? Dr(t) : t)
    );
  },
  entries() {
    return $s(this, "entries", (e) => (e[1] = wt(e[1]), e));
  },
  every(e, t) {
    return On(this, "every", e, t, void 0, arguments);
  },
  filter(e, t) {
    return On(this, "filter", e, t, (n) => n.map(wt), arguments);
  },
  find(e, t) {
    return On(this, "find", e, t, wt, arguments);
  },
  findIndex(e, t) {
    return On(this, "findIndex", e, t, void 0, arguments);
  },
  findLast(e, t) {
    return On(this, "findLast", e, t, wt, arguments);
  },
  findLastIndex(e, t) {
    return On(this, "findLastIndex", e, t, void 0, arguments);
  },
  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement
  forEach(e, t) {
    return On(this, "forEach", e, t, void 0, arguments);
  },
  includes(...e) {
    return Zs(this, "includes", e);
  },
  indexOf(...e) {
    return Zs(this, "indexOf", e);
  },
  join(e) {
    return Dr(this).join(e);
  },
  // keys() iterator only reads `length`, no optimisation required
  lastIndexOf(...e) {
    return Zs(this, "lastIndexOf", e);
  },
  map(e, t) {
    return On(this, "map", e, t, void 0, arguments);
  },
  pop() {
    return di(this, "pop");
  },
  push(...e) {
    return di(this, "push", e);
  },
  reduce(e, ...t) {
    return Wa(this, "reduce", e, t);
  },
  reduceRight(e, ...t) {
    return Wa(this, "reduceRight", e, t);
  },
  shift() {
    return di(this, "shift");
  },
  // slice could use ARRAY_ITERATE but also seems to beg for range tracking
  some(e, t) {
    return On(this, "some", e, t, void 0, arguments);
  },
  splice(...e) {
    return di(this, "splice", e);
  },
  toReversed() {
    return Dr(this).toReversed();
  },
  toSorted(e) {
    return Dr(this).toSorted(e);
  },
  toSpliced(...e) {
    return Dr(this).toSpliced(...e);
  },
  unshift(...e) {
    return di(this, "unshift", e);
  },
  values() {
    return $s(this, "values", wt);
  }
};
function $s(e, t, n) {
  const r = os(e), i = r[t]();
  return r !== e && !Ut(e) && (i._next = i.next, i.next = () => {
    const u = i._next();
    return u.value && (u.value = n(u.value)), u;
  }), i;
}
const zh = Array.prototype;
function On(e, t, n, r, i, u) {
  const s = os(e), o = s !== e && !Ut(e), a = s[t];
  if (a !== zh[t]) {
    const f = a.apply(e, u);
    return o ? wt(f) : f;
  }
  let c = n;
  s !== e && (o ? c = function(f, m) {
    return n.call(this, wt(f), m, e);
  } : n.length > 2 && (c = function(f, m) {
    return n.call(this, f, m, e);
  }));
  const l = a.call(s, c, r);
  return o && i ? i(l) : l;
}
function Wa(e, t, n, r) {
  const i = os(e);
  let u = n;
  return i !== e && (Ut(e) ? n.length > 3 && (u = function(s, o, a) {
    return n.call(this, s, o, a, e);
  }) : u = function(s, o, a) {
    return n.call(this, s, wt(o), a, e);
  }), i[t](u, ...r);
}
function Zs(e, t, n) {
  const r = ze(e);
  kt(r, "iterate", Mi);
  const i = r[t](...n);
  return (i === -1 || i === !1) && fs(n[0]) ? (n[0] = ze(n[0]), r[t](...n)) : i;
}
function di(e, t, n = []) {
  lr(), ea();
  const r = ze(e)[t].apply(e, n);
  return ta(), cr(), r;
}
const Ph = /* @__PURE__ */ ts("__proto__,__v_isRef,__isVue"), Ic = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((e) => e !== "arguments" && e !== "caller").map((e) => Symbol[e]).filter(dn)
);
function Rh(e) {
  dn(e) || (e = String(e));
  const t = ze(this);
  return kt(t, "has", e), t.hasOwnProperty(e);
}
class Lc {
  constructor(t = !1, n = !1) {
    this._isReadonly = t, this._isShallow = n;
  }
  get(t, n, r) {
    if (n === "__v_skip") return t.__v_skip;
    const i = this._isReadonly, u = this._isShallow;
    if (n === "__v_isReactive")
      return !i;
    if (n === "__v_isReadonly")
      return i;
    if (n === "__v_isShallow")
      return u;
    if (n === "__v_raw")
      return r === (i ? u ? Vc : Bc : u ? jc : Rc).get(t) || // receiver is not the reactive proxy, but has the same prototype
      // this means the receiver is a user proxy of the reactive proxy
      Object.getPrototypeOf(t) === Object.getPrototypeOf(r) ? t : void 0;
    const s = ce(t);
    if (!i) {
      let a;
      if (s && (a = Lh[n]))
        return a;
      if (n === "hasOwnProperty")
        return Rh;
    }
    const o = Reflect.get(
      t,
      n,
      // if this is a proxy wrapping a ref, return methods using the raw ref
      // as receiver so that we don't have to call `toRaw` on the ref in all
      // its class methods
      ht(t) ? t : r
    );
    return (dn(n) ? Ic.has(n) : Ph(n)) || (i || kt(t, "get", n), u) ? o : ht(o) ? s && Xo(n) ? o : o.value : Ue(o) ? i ? ra(o) : ls(o) : o;
  }
}
class zc extends Lc {
  constructor(t = !1) {
    super(!1, t);
  }
  set(t, n, r, i) {
    let u = t[n];
    if (!this._isShallow) {
      const a = ur(u);
      if (!Ut(r) && !ur(r) && (u = ze(u), r = ze(r)), !ce(t) && ht(u) && !ht(r))
        return a ? !1 : (u.value = r, !0);
    }
    const s = ce(t) && Xo(n) ? Number(n) < t.length : Be(t, n), o = Reflect.set(
      t,
      n,
      r,
      ht(t) ? t : i
    );
    return t === ze(i) && (s ? Ft(r, u) && An(t, "set", n, r) : An(t, "add", n, r)), o;
  }
  deleteProperty(t, n) {
    const r = Be(t, n);
    t[n];
    const i = Reflect.deleteProperty(t, n);
    return i && r && An(t, "delete", n, void 0), i;
  }
  has(t, n) {
    const r = Reflect.has(t, n);
    return (!dn(n) || !Ic.has(n)) && kt(t, "has", n), r;
  }
  ownKeys(t) {
    return kt(
      t,
      "iterate",
      ce(t) ? "length" : gr
    ), Reflect.ownKeys(t);
  }
}
class Pc extends Lc {
  constructor(t = !1) {
    super(!0, t);
  }
  set(t, n) {
    return !0;
  }
  deleteProperty(t, n) {
    return !0;
  }
}
const jh = /* @__PURE__ */ new zc(), Bh = /* @__PURE__ */ new Pc(), Vh = /* @__PURE__ */ new zc(!0), Hh = /* @__PURE__ */ new Pc(!0), vo = (e) => e, iu = (e) => Reflect.getPrototypeOf(e);
function Uh(e, t, n) {
  return function(...r) {
    const i = this.__v_raw, u = ze(i), s = Vr(u), o = e === "entries" || e === Symbol.iterator && s, a = e === "keys" && s, c = i[e](...r), l = n ? vo : t ? ko : wt;
    return !t && kt(
      u,
      "iterate",
      a ? xo : gr
    ), {
      // iterator protocol
      next() {
        const { value: f, done: m } = c.next();
        return m ? { value: f, done: m } : {
          value: o ? [l(f[0]), l(f[1])] : l(f),
          done: m
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function uu(e) {
  return function(...t) {
    return e === "delete" ? !1 : e === "clear" ? void 0 : this;
  };
}
function qh(e, t) {
  const n = {
    get(i) {
      const u = this.__v_raw, s = ze(u), o = ze(i);
      e || (Ft(i, o) && kt(s, "get", i), kt(s, "get", o));
      const { has: a } = iu(s), c = t ? vo : e ? ko : wt;
      if (a.call(s, i))
        return c(u.get(i));
      if (a.call(s, o))
        return c(u.get(o));
      u !== s && u.get(i);
    },
    get size() {
      const i = this.__v_raw;
      return !e && kt(ze(i), "iterate", gr), Reflect.get(i, "size", i);
    },
    has(i) {
      const u = this.__v_raw, s = ze(u), o = ze(i);
      return e || (Ft(i, o) && kt(s, "has", i), kt(s, "has", o)), i === o ? u.has(i) : u.has(i) || u.has(o);
    },
    forEach(i, u) {
      const s = this, o = s.__v_raw, a = ze(o), c = t ? vo : e ? ko : wt;
      return !e && kt(a, "iterate", gr), o.forEach((l, f) => i.call(u, c(l), c(f), s));
    }
  };
  return qe(
    n,
    e ? {
      add: uu("add"),
      set: uu("set"),
      delete: uu("delete"),
      clear: uu("clear")
    } : {
      add(i) {
        !t && !Ut(i) && !ur(i) && (i = ze(i));
        const u = ze(this);
        return iu(u).has.call(u, i) || (u.add(i), An(u, "add", i, i)), this;
      },
      set(i, u) {
        !t && !Ut(u) && !ur(u) && (u = ze(u));
        const s = ze(this), { has: o, get: a } = iu(s);
        let c = o.call(s, i);
        c || (i = ze(i), c = o.call(s, i));
        const l = a.call(s, i);
        return s.set(i, u), c ? Ft(u, l) && An(s, "set", i, u) : An(s, "add", i, u), this;
      },
      delete(i) {
        const u = ze(this), { has: s, get: o } = iu(u);
        let a = s.call(u, i);
        a || (i = ze(i), a = s.call(u, i)), o && o.call(u, i);
        const c = u.delete(i);
        return a && An(u, "delete", i, void 0), c;
      },
      clear() {
        const i = ze(this), u = i.size !== 0, s = i.clear();
        return u && An(
          i,
          "clear",
          void 0,
          void 0
        ), s;
      }
    }
  ), [
    "keys",
    "values",
    "entries",
    Symbol.iterator
  ].forEach((i) => {
    n[i] = Uh(i, e, t);
  }), n;
}
function as(e, t) {
  const n = qh(e, t);
  return (r, i, u) => i === "__v_isReactive" ? !e : i === "__v_isReadonly" ? e : i === "__v_raw" ? r : Reflect.get(
    Be(n, i) && i in r ? n : r,
    i,
    u
  );
}
const Wh = {
  get: /* @__PURE__ */ as(!1, !1)
}, $h = {
  get: /* @__PURE__ */ as(!1, !0)
}, Zh = {
  get: /* @__PURE__ */ as(!0, !1)
}, Gh = {
  get: /* @__PURE__ */ as(!0, !0)
}, Rc = /* @__PURE__ */ new WeakMap(), jc = /* @__PURE__ */ new WeakMap(), Bc = /* @__PURE__ */ new WeakMap(), Vc = /* @__PURE__ */ new WeakMap();
function Yh(e) {
  switch (e) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function Kh(e) {
  return e.__v_skip || !Object.isExtensible(e) ? 0 : Yh(mh(e));
}
function ls(e) {
  return ur(e) ? e : cs(
    e,
    !1,
    jh,
    Wh,
    Rc
  );
}
function Hc(e) {
  return cs(
    e,
    !1,
    Vh,
    $h,
    jc
  );
}
function ra(e) {
  return cs(
    e,
    !0,
    Bh,
    Zh,
    Bc
  );
}
function Jh(e) {
  return cs(
    e,
    !0,
    Hh,
    Gh,
    Vc
  );
}
function cs(e, t, n, r, i) {
  if (!Ue(e) || e.__v_raw && !(t && e.__v_isReactive))
    return e;
  const u = i.get(e);
  if (u)
    return u;
  const s = Kh(e);
  if (s === 0)
    return e;
  const o = new Proxy(
    e,
    s === 2 ? r : n
  );
  return i.set(e, o), o;
}
function er(e) {
  return ur(e) ? er(e.__v_raw) : !!(e && e.__v_isReactive);
}
function ur(e) {
  return !!(e && e.__v_isReadonly);
}
function Ut(e) {
  return !!(e && e.__v_isShallow);
}
function fs(e) {
  return e ? !!e.__v_raw : !1;
}
function ze(e) {
  const t = e && e.__v_raw;
  return t ? ze(t) : e;
}
function Uc(e) {
  return !Be(e, "__v_skip") && Object.isExtensible(e) && kc(e, "__v_skip", !0), e;
}
const wt = (e) => Ue(e) ? ls(e) : e, ko = (e) => Ue(e) ? ra(e) : e;
function ht(e) {
  return e ? e.__v_isRef === !0 : !1;
}
function wi(e) {
  return Wc(e, !1);
}
function qc(e) {
  return Wc(e, !0);
}
function Wc(e, t) {
  return ht(e) ? e : new Xh(e, t);
}
class Xh {
  constructor(t, n) {
    this.dep = new ss(), this.__v_isRef = !0, this.__v_isShallow = !1, this._rawValue = n ? t : ze(t), this._value = n ? t : wt(t), this.__v_isShallow = n;
  }
  get value() {
    return this.dep.track(), this._value;
  }
  set value(t) {
    const n = this._rawValue, r = this.__v_isShallow || Ut(t) || ur(t);
    t = r ? t : ze(t), Ft(t, n) && (this._rawValue = t, this._value = r ? t : wt(t), this.dep.trigger());
  }
}
function Qh(e) {
  e.dep && e.dep.trigger();
}
function ds(e) {
  return ht(e) ? e.value : e;
}
function ep(e) {
  return ve(e) ? e() : ds(e);
}
const tp = {
  get: (e, t, n) => t === "__v_raw" ? e : ds(Reflect.get(e, t, n)),
  set: (e, t, n, r) => {
    const i = e[t];
    return ht(i) && !ht(n) ? (i.value = n, !0) : Reflect.set(e, t, n, r);
  }
};
function ia(e) {
  return er(e) ? e : new Proxy(e, tp);
}
class np {
  constructor(t) {
    this.__v_isRef = !0, this._value = void 0;
    const n = this.dep = new ss(), { get: r, set: i } = t(n.track.bind(n), n.trigger.bind(n));
    this._get = r, this._set = i;
  }
  get value() {
    return this._value = this._get();
  }
  set value(t) {
    this._set(t);
  }
}
function $c(e) {
  return new np(e);
}
function rp(e) {
  const t = ce(e) ? new Array(e.length) : {};
  for (const n in e)
    t[n] = Zc(e, n);
  return t;
}
class ip {
  constructor(t, n, r) {
    this._object = t, this._key = n, this._defaultValue = r, this.__v_isRef = !0, this._value = void 0;
  }
  get value() {
    const t = this._object[this._key];
    return this._value = t === void 0 ? this._defaultValue : t;
  }
  set value(t) {
    this._object[this._key] = t;
  }
  get dep() {
    return Ih(ze(this._object), this._key);
  }
}
class up {
  constructor(t) {
    this._getter = t, this.__v_isRef = !0, this.__v_isReadonly = !0, this._value = void 0;
  }
  get value() {
    return this._value = this._getter();
  }
}
function sp(e, t, n) {
  return ht(e) ? e : ve(e) ? new up(e) : Ue(e) && arguments.length > 1 ? Zc(e, t, n) : wi(e);
}
function Zc(e, t, n) {
  const r = e[t];
  return ht(r) ? r : new ip(e, t, n);
}
class op {
  constructor(t, n, r) {
    this.fn = t, this.setter = n, this._value = void 0, this.dep = new ss(this), this.__v_isRef = !0, this.deps = void 0, this.depsTail = void 0, this.flags = 16, this.globalVersion = Fi - 1, this.next = void 0, this.effect = this, this.__v_isReadonly = !n, this.isSSR = r;
  }
  /**
   * @internal
   */
  notify() {
    if (this.flags |= 16, !(this.flags & 8) && // avoid infinite self recursion
    Ze !== this)
      return Oc(this, !0), !0;
  }
  get value() {
    const t = this.dep.track();
    return Fc(this), t && (t.version = this.dep.version), this._value;
  }
  set value(t) {
    this.setter && this.setter(t);
  }
}
function ap(e, t, n = !1) {
  let r, i;
  return ve(e) ? r = e : (r = e.get, i = e.set), new op(r, i, n);
}
const lp = {
  GET: "get",
  HAS: "has",
  ITERATE: "iterate"
}, cp = {
  SET: "set",
  ADD: "add",
  DELETE: "delete",
  CLEAR: "clear"
}, su = {}, Iu = /* @__PURE__ */ new WeakMap();
let Wn;
function fp() {
  return Wn;
}
function Gc(e, t = !1, n = Wn) {
  if (n) {
    let r = Iu.get(n);
    r || Iu.set(n, r = []), r.push(e);
  }
}
function dp(e, t, n = Ie) {
  const { immediate: r, deep: i, once: u, scheduler: s, augmentJob: o, call: a } = n, c = (_) => i ? _ : Ut(_) || i === !1 || i === 0 ? Fn(_, 1) : Fn(_);
  let l, f, m, p, h = !1, E = !1;
  if (ht(e) ? (f = () => e.value, h = Ut(e)) : er(e) ? (f = () => c(e), h = !0) : ce(e) ? (E = !0, h = e.some((_) => er(_) || Ut(_)), f = () => e.map((_) => {
    if (ht(_))
      return _.value;
    if (er(_))
      return c(_);
    if (ve(_))
      return a ? a(_, 2) : _();
  })) : ve(e) ? t ? f = a ? () => a(e, 2) : e : f = () => {
    if (m) {
      lr();
      try {
        m();
      } finally {
        cr();
      }
    }
    const _ = Wn;
    Wn = l;
    try {
      return a ? a(e, 3, [p]) : e(p);
    } finally {
      Wn = _;
    }
  } : f = Jt, t && i) {
    const _ = f, S = i === !0 ? 1 / 0 : i;
    f = () => Fn(_(), S);
  }
  const C = Sc(), L = () => {
    l.stop(), C && C.active && Ko(C.effects, l);
  };
  if (u && t) {
    const _ = t;
    t = (...S) => {
      _(...S), L();
    };
  }
  let T = E ? new Array(e.length).fill(su) : su;
  const b = (_) => {
    if (!(!(l.flags & 1) || !l.dirty && !_))
      if (t) {
        const S = l.run();
        if (i || h || (E ? S.some((F, W) => Ft(F, T[W])) : Ft(S, T))) {
          m && m();
          const F = Wn;
          Wn = l;
          try {
            const W = [
              S,
              // pass undefined as the old value when it's changed for the first time
              T === su ? void 0 : E && T[0] === su ? [] : T,
              p
            ];
            a ? a(t, 3, W) : (
              // @ts-expect-error
              t(...W)
            ), T = S;
          } finally {
            Wn = F;
          }
        }
      } else
        l.run();
  };
  return o && o(b), l = new Ai(f), l.scheduler = s ? () => s(b, !1) : b, p = (_) => Gc(_, !1, l), m = l.onStop = () => {
    const _ = Iu.get(l);
    if (_) {
      if (a)
        a(_, 4);
      else
        for (const S of _) S();
      Iu.delete(l);
    }
  }, t ? r ? b(!0) : T = l.run() : s ? s(b.bind(null, !0), !0) : l.run(), L.pause = l.pause.bind(l), L.resume = l.resume.bind(l), L.stop = L, L;
}
function Fn(e, t = 1 / 0, n) {
  if (t <= 0 || !Ue(e) || e.__v_skip || (n = n || /* @__PURE__ */ new Set(), n.has(e)))
    return e;
  if (n.add(e), t--, ht(e))
    Fn(e.value, t, n);
  else if (ce(e))
    for (let r = 0; r < e.length; r++)
      Fn(e[r], t, n);
  else if (wr(e) || Vr(e))
    e.forEach((r) => {
      Fn(r, t, n);
    });
  else if (ns(e)) {
    for (const r in e)
      Fn(e[r], t, n);
    for (const r of Object.getOwnPropertySymbols(e))
      Object.prototype.propertyIsEnumerable.call(e, r) && Fn(e[r], t, n);
  }
  return e;
}
/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const Yc = [];
function hp(e) {
  Yc.push(e);
}
function pp() {
  Yc.pop();
}
function mp(e, t) {
}
const bp = {
  SETUP_FUNCTION: 0,
  0: "SETUP_FUNCTION",
  RENDER_FUNCTION: 1,
  1: "RENDER_FUNCTION",
  NATIVE_EVENT_HANDLER: 5,
  5: "NATIVE_EVENT_HANDLER",
  COMPONENT_EVENT_HANDLER: 6,
  6: "COMPONENT_EVENT_HANDLER",
  VNODE_HOOK: 7,
  7: "VNODE_HOOK",
  DIRECTIVE_HOOK: 8,
  8: "DIRECTIVE_HOOK",
  TRANSITION_HOOK: 9,
  9: "TRANSITION_HOOK",
  APP_ERROR_HANDLER: 10,
  10: "APP_ERROR_HANDLER",
  APP_WARN_HANDLER: 11,
  11: "APP_WARN_HANDLER",
  FUNCTION_REF: 12,
  12: "FUNCTION_REF",
  ASYNC_COMPONENT_LOADER: 13,
  13: "ASYNC_COMPONENT_LOADER",
  SCHEDULER: 14,
  14: "SCHEDULER",
  COMPONENT_UPDATE: 15,
  15: "COMPONENT_UPDATE",
  APP_UNMOUNT_CLEANUP: 16,
  16: "APP_UNMOUNT_CLEANUP"
}, gp = {
  sp: "serverPrefetch hook",
  bc: "beforeCreate hook",
  c: "created hook",
  bm: "beforeMount hook",
  m: "mounted hook",
  bu: "beforeUpdate hook",
  u: "updated",
  bum: "beforeUnmount hook",
  um: "unmounted hook",
  a: "activated hook",
  da: "deactivated hook",
  ec: "errorCaptured hook",
  rtc: "renderTracked hook",
  rtg: "renderTriggered hook",
  0: "setup function",
  1: "render function",
  2: "watcher getter",
  3: "watcher callback",
  4: "watcher cleanup function",
  5: "native event handler",
  6: "component event handler",
  7: "vnode hook",
  8: "directive hook",
  9: "transition hook",
  10: "app errorHandler",
  11: "app warnHandler",
  12: "ref function",
  13: "async component loader",
  14: "scheduler flush",
  15: "component update",
  16: "app unmount cleanup function"
};
function ui(e, t, n, r) {
  try {
    return r ? e(...r) : e();
  } catch (i) {
    Er(i, t, n);
  }
}
function Qt(e, t, n, r) {
  if (ve(e)) {
    const i = ui(e, t, n, r);
    return i && Jo(i) && i.catch((u) => {
      Er(u, t, n);
    }), i;
  }
  if (ce(e)) {
    const i = [];
    for (let u = 0; u < e.length; u++)
      i.push(Qt(e[u], t, n, r));
    return i;
  }
}
function Er(e, t, n, r = !0) {
  const i = t ? t.vnode : null, { errorHandler: u, throwUnhandledErrorInProduction: s } = t && t.appContext.config || Ie;
  if (t) {
    let o = t.parent;
    const a = t.proxy, c = `https://vuejs.org/error-reference/#runtime-${n}`;
    for (; o; ) {
      const l = o.ec;
      if (l) {
        for (let f = 0; f < l.length; f++)
          if (l[f](e, a, c) === !1)
            return;
      }
      o = o.parent;
    }
    if (u) {
      lr(), ui(u, null, 10, [
        e,
        a,
        c
      ]), cr();
      return;
    }
  }
  yp(e, n, i, r, s);
}
function yp(e, t, n, r = !0, i = !1) {
  if (i)
    throw e;
  console.error(e);
}
const Mt = [];
let xn = -1;
const qr = [];
let $n = null, Lr = 0;
const Kc = /* @__PURE__ */ Promise.resolve();
let Lu = null;
function hs(e) {
  const t = Lu || Kc;
  return e ? t.then(this ? e.bind(this) : e) : t;
}
function _p(e) {
  let t = xn + 1, n = Mt.length;
  for (; t < n; ) {
    const r = t + n >>> 1, i = Mt[r], u = Ii(i);
    u < e || u === e && i.flags & 2 ? t = r + 1 : n = r;
  }
  return t;
}
function ua(e) {
  if (!(e.flags & 1)) {
    const t = Ii(e), n = Mt[Mt.length - 1];
    !n || // fast path when the job id is larger than the tail
    !(e.flags & 2) && t >= Ii(n) ? Mt.push(e) : Mt.splice(_p(t), 0, e), e.flags |= 1, Jc();
  }
}
function Jc() {
  Lu || (Lu = Kc.then(Xc));
}
function Ni(e) {
  ce(e) ? qr.push(...e) : $n && e.id === -1 ? $n.splice(Lr + 1, 0, e) : e.flags & 1 || (qr.push(e), e.flags |= 1), Jc();
}
function $a(e, t, n = xn + 1) {
  for (; n < Mt.length; n++) {
    const r = Mt[n];
    if (r && r.flags & 2) {
      if (e && r.id !== e.uid)
        continue;
      Mt.splice(n, 1), n--, r.flags & 4 && (r.flags &= -2), r(), r.flags & 4 || (r.flags &= -2);
    }
  }
}
function zu(e) {
  if (qr.length) {
    const t = [...new Set(qr)].sort(
      (n, r) => Ii(n) - Ii(r)
    );
    if (qr.length = 0, $n) {
      $n.push(...t);
      return;
    }
    for ($n = t, Lr = 0; Lr < $n.length; Lr++) {
      const n = $n[Lr];
      n.flags & 4 && (n.flags &= -2), n.flags & 8 || n(), n.flags &= -2;
    }
    $n = null, Lr = 0;
  }
}
const Ii = (e) => e.id == null ? e.flags & 2 ? -1 : 1 / 0 : e.id;
function Xc(e) {
  try {
    for (xn = 0; xn < Mt.length; xn++) {
      const t = Mt[xn];
      t && !(t.flags & 8) && (t.flags & 4 && (t.flags &= -2), ui(
        t,
        t.i,
        t.i ? 15 : 14
      ), t.flags & 4 || (t.flags &= -2));
    }
  } finally {
    for (; xn < Mt.length; xn++) {
      const t = Mt[xn];
      t && (t.flags &= -2);
    }
    xn = -1, Mt.length = 0, zu(), Lu = null, (Mt.length || qr.length) && Xc();
  }
}
let zr, ou = [];
function Qc(e, t) {
  var n, r;
  zr = e, zr ? (zr.enabled = !0, ou.forEach(({ event: i, args: u }) => zr.emit(i, ...u)), ou = []) : /* handle late devtools injection - only do this if we are in an actual */ /* browser environment to avoid the timer handle stalling test runner exit */ /* (#4815) */ typeof window < "u" && // some envs mock window but not fully
  window.HTMLElement && // also exclude jsdom
  // eslint-disable-next-line no-restricted-syntax
  !((r = (n = window.navigator) == null ? void 0 : n.userAgent) != null && r.includes("jsdom")) ? ((t.__VUE_DEVTOOLS_HOOK_REPLAY__ = t.__VUE_DEVTOOLS_HOOK_REPLAY__ || []).push((u) => {
    Qc(u, t);
  }), setTimeout(() => {
    zr || (t.__VUE_DEVTOOLS_HOOK_REPLAY__ = null, ou = []);
  }, 3e3)) : ou = [];
}
let dt = null, ps = null;
function Li(e) {
  const t = dt;
  return dt = e, ps = e && e.type.__scopeId || null, t;
}
function xp(e) {
  ps = e;
}
function vp() {
  ps = null;
}
const kp = (e) => sr;
function sr(e, t = dt, n) {
  if (!t || e._n)
    return e;
  const r = (...i) => {
    r._d && Ao(-1);
    const u = Li(t);
    let s;
    try {
      s = e(...i);
    } finally {
      Li(u), r._d && Ao(1);
    }
    return s;
  };
  return r._n = !0, r._c = !0, r._d = !0, r;
}
function ef(e, t) {
  if (dt === null)
    return e;
  const n = Yi(dt), r = e.dirs || (e.dirs = []);
  for (let i = 0; i < t.length; i++) {
    let [u, s, o, a = Ie] = t[i];
    u && (ve(u) && (u = {
      mounted: u,
      updated: u
    }), u.deep && Fn(s), r.push({
      dir: u,
      instance: n,
      value: s,
      oldValue: void 0,
      arg: o,
      modifiers: a
    }));
  }
  return e;
}
function vn(e, t, n, r) {
  const i = e.dirs, u = t && t.dirs;
  for (let s = 0; s < i.length; s++) {
    const o = i[s];
    u && (o.oldValue = u[s].value);
    let a = o.dir[r];
    a && (lr(), Qt(a, n, 8, [
      e.el,
      o,
      e,
      t
    ]), cr());
  }
}
const tf = Symbol("_vte"), nf = (e) => e.__isTeleport, Ei = (e) => e && (e.disabled || e.disabled === ""), Za = (e) => e && (e.defer || e.defer === ""), Ga = (e) => typeof SVGElement < "u" && e instanceof SVGElement, Ya = (e) => typeof MathMLElement == "function" && e instanceof MathMLElement, wo = (e, t) => {
  const n = e && e.to;
  return Ye(n) ? t ? t(n) : null : n;
}, rf = {
  name: "Teleport",
  __isTeleport: !0,
  process(e, t, n, r, i, u, s, o, a, c) {
    const {
      mc: l,
      pc: f,
      pbc: m,
      o: { insert: p, querySelector: h, createText: E, createComment: C }
    } = c, L = Ei(t.props);
    let { shapeFlag: T, children: b, dynamicChildren: _ } = t;
    if (e == null) {
      const S = t.el = E(""), F = t.anchor = E("");
      p(S, n, r), p(F, n, r);
      const W = (R, j) => {
        T & 16 && (i && i.isCE && (i.ce._teleportTarget = R), l(
          b,
          R,
          j,
          i,
          u,
          s,
          o,
          a
        ));
      }, Q = () => {
        const R = t.target = wo(t.props, h), j = uf(R, t, E, p);
        R && (s !== "svg" && Ga(R) ? s = "svg" : s !== "mathml" && Ya(R) && (s = "mathml"), L || (W(R, j), wu(t, !1)));
      };
      L && (W(n, F), wu(t, !0)), Za(t.props) ? lt(() => {
        Q(), t.el.__isMounted = !0;
      }, u) : Q();
    } else {
      if (Za(t.props) && !e.el.__isMounted) {
        lt(() => {
          rf.process(
            e,
            t,
            n,
            r,
            i,
            u,
            s,
            o,
            a,
            c
          ), delete e.el.__isMounted;
        }, u);
        return;
      }
      t.el = e.el, t.targetStart = e.targetStart;
      const S = t.anchor = e.anchor, F = t.target = e.target, W = t.targetAnchor = e.targetAnchor, Q = Ei(e.props), R = Q ? n : F, j = Q ? S : W;
      if (s === "svg" || Ga(F) ? s = "svg" : (s === "mathml" || Ya(F)) && (s = "mathml"), _ ? (m(
        e.dynamicChildren,
        _,
        R,
        i,
        u,
        s,
        o
      ), ba(e, t, !0)) : a || f(
        e,
        t,
        R,
        j,
        i,
        u,
        s,
        o,
        !1
      ), L)
        Q ? t.props && e.props && t.props.to !== e.props.to && (t.props.to = e.props.to) : au(
          t,
          n,
          S,
          c,
          1
        );
      else if ((t.props && t.props.to) !== (e.props && e.props.to)) {
        const ae = t.target = wo(
          t.props,
          h
        );
        ae && au(
          t,
          ae,
          null,
          c,
          0
        );
      } else Q && au(
        t,
        F,
        W,
        c,
        1
      );
      wu(t, L);
    }
  },
  remove(e, t, n, { um: r, o: { remove: i } }, u) {
    const {
      shapeFlag: s,
      children: o,
      anchor: a,
      targetStart: c,
      targetAnchor: l,
      target: f,
      props: m
    } = e;
    if (f && (i(c), i(l)), u && i(a), s & 16) {
      const p = u || !Ei(m);
      for (let h = 0; h < o.length; h++) {
        const E = o[h];
        r(
          E,
          t,
          n,
          p,
          !!E.dynamicChildren
        );
      }
    }
  },
  move: au,
  hydrate: wp
};
function au(e, t, n, { o: { insert: r }, m: i }, u = 2) {
  u === 0 && r(e.targetAnchor, t, n);
  const { el: s, anchor: o, shapeFlag: a, children: c, props: l } = e, f = u === 2;
  if (f && r(s, t, n), (!f || Ei(l)) && a & 16)
    for (let m = 0; m < c.length; m++)
      i(
        c[m],
        t,
        n,
        2
      );
  f && r(o, t, n);
}
function wp(e, t, n, r, i, u, {
  o: { nextSibling: s, parentNode: o, querySelector: a, insert: c, createText: l }
}, f) {
  const m = t.target = wo(
    t.props,
    a
  );
  if (m) {
    const p = Ei(t.props), h = m._lpa || m.firstChild;
    if (t.shapeFlag & 16)
      if (p)
        t.anchor = f(
          s(e),
          t,
          o(e),
          n,
          r,
          i,
          u
        ), t.targetStart = h, t.targetAnchor = h && s(h);
      else {
        t.anchor = s(e);
        let E = h;
        for (; E; ) {
          if (E && E.nodeType === 8) {
            if (E.data === "teleport start anchor")
              t.targetStart = E;
            else if (E.data === "teleport anchor") {
              t.targetAnchor = E, m._lpa = t.targetAnchor && s(t.targetAnchor);
              break;
            }
          }
          E = s(E);
        }
        t.targetAnchor || uf(m, t, l, c), f(
          h && s(h),
          t,
          m,
          n,
          r,
          i,
          u
        );
      }
    wu(t, p);
  }
  return t.anchor && s(t.anchor);
}
const Ep = rf;
function wu(e, t) {
  const n = e.ctx;
  if (n && n.ut) {
    let r, i;
    for (t ? (r = e.el, i = e.anchor) : (r = e.targetStart, i = e.targetAnchor); r && r !== i; )
      r.nodeType === 1 && r.setAttribute("data-v-owner", n.uid), r = r.nextSibling;
    n.ut();
  }
}
function uf(e, t, n, r) {
  const i = t.targetStart = n(""), u = t.targetAnchor = n("");
  return i[tf] = u, e && (r(i, e), r(u, e)), u;
}
const Zn = Symbol("_leaveCb"), lu = Symbol("_enterCb");
function sa() {
  const e = {
    isMounted: !1,
    isLeaving: !1,
    isUnmounting: !1,
    leavingVNodes: /* @__PURE__ */ new Map()
  };
  return Zi(() => {
    e.isMounted = !0;
  }), ys(() => {
    e.isUnmounting = !0;
  }), e;
}
const Zt = [Function, Array], oa = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  // enter
  onBeforeEnter: Zt,
  onEnter: Zt,
  onAfterEnter: Zt,
  onEnterCancelled: Zt,
  // leave
  onBeforeLeave: Zt,
  onLeave: Zt,
  onAfterLeave: Zt,
  onLeaveCancelled: Zt,
  // appear
  onBeforeAppear: Zt,
  onAppear: Zt,
  onAfterAppear: Zt,
  onAppearCancelled: Zt
}, sf = (e) => {
  const t = e.subTree;
  return t.component ? sf(t.component) : t;
}, Cp = {
  name: "BaseTransition",
  props: oa,
  setup(e, { slots: t }) {
    const n = en(), r = sa();
    return () => {
      const i = t.default && ms(t.default(), !0);
      if (!i || !i.length)
        return;
      const u = of(i), s = ze(e), { mode: o } = s;
      if (r.isLeaving)
        return Gs(u);
      const a = Ka(u);
      if (!a)
        return Gs(u);
      let c = Kr(
        a,
        s,
        r,
        n,
        // #11061, ensure enterHooks is fresh after clone
        (f) => c = f
      );
      a.type !== it && Nn(a, c);
      let l = n.subTree && Ka(n.subTree);
      if (l && l.type !== it && !ln(a, l) && sf(n).type !== it) {
        let f = Kr(
          l,
          s,
          r,
          n
        );
        if (Nn(l, f), o === "out-in" && a.type !== it)
          return r.isLeaving = !0, f.afterLeave = () => {
            r.isLeaving = !1, n.job.flags & 8 || n.update(), delete f.afterLeave, l = void 0;
          }, Gs(u);
        o === "in-out" && a.type !== it ? f.delayLeave = (m, p, h) => {
          const E = lf(
            r,
            l
          );
          E[String(l.key)] = l, m[Zn] = () => {
            p(), m[Zn] = void 0, delete c.delayedLeave, l = void 0;
          }, c.delayedLeave = () => {
            h(), delete c.delayedLeave, l = void 0;
          };
        } : l = void 0;
      } else l && (l = void 0);
      return u;
    };
  }
};
function of(e) {
  let t = e[0];
  if (e.length > 1) {
    for (const n of e)
      if (n.type !== it) {
        t = n;
        break;
      }
  }
  return t;
}
const af = Cp;
function lf(e, t) {
  const { leavingVNodes: n } = e;
  let r = n.get(t.type);
  return r || (r = /* @__PURE__ */ Object.create(null), n.set(t.type, r)), r;
}
function Kr(e, t, n, r, i) {
  const {
    appear: u,
    mode: s,
    persisted: o = !1,
    onBeforeEnter: a,
    onEnter: c,
    onAfterEnter: l,
    onEnterCancelled: f,
    onBeforeLeave: m,
    onLeave: p,
    onAfterLeave: h,
    onLeaveCancelled: E,
    onBeforeAppear: C,
    onAppear: L,
    onAfterAppear: T,
    onAppearCancelled: b
  } = t, _ = String(e.key), S = lf(n, e), F = (R, j) => {
    R && Qt(
      R,
      r,
      9,
      j
    );
  }, W = (R, j) => {
    const ae = j[1];
    F(R, j), ce(R) ? R.every((Y) => Y.length <= 1) && ae() : R.length <= 1 && ae();
  }, Q = {
    mode: s,
    persisted: o,
    beforeEnter(R) {
      let j = a;
      if (!n.isMounted)
        if (u)
          j = C || a;
        else
          return;
      R[Zn] && R[Zn](
        !0
        /* cancelled */
      );
      const ae = S[_];
      ae && ln(e, ae) && ae.el[Zn] && ae.el[Zn](), F(j, [R]);
    },
    enter(R) {
      let j = c, ae = l, Y = f;
      if (!n.isMounted)
        if (u)
          j = L || c, ae = T || l, Y = b || f;
        else
          return;
      let he = !1;
      const we = R[lu] = (be) => {
        he || (he = !0, be ? F(Y, [R]) : F(ae, [R]), Q.delayedLeave && Q.delayedLeave(), R[lu] = void 0);
      };
      j ? W(j, [R, we]) : we();
    },
    leave(R, j) {
      const ae = String(e.key);
      if (R[lu] && R[lu](
        !0
        /* cancelled */
      ), n.isUnmounting)
        return j();
      F(m, [R]);
      let Y = !1;
      const he = R[Zn] = (we) => {
        Y || (Y = !0, j(), we ? F(E, [R]) : F(h, [R]), R[Zn] = void 0, S[ae] === e && delete S[ae]);
      };
      S[ae] = e, p ? W(p, [R, he]) : he();
    },
    clone(R) {
      const j = Kr(
        R,
        t,
        n,
        r,
        i
      );
      return i && i(j), j;
    }
  };
  return Q;
}
function Gs(e) {
  if ($i(e))
    return e = Cn(e), e.children = null, e;
}
function Ka(e) {
  if (!$i(e))
    return nf(e.type) && e.children ? of(e.children) : e;
  const { shapeFlag: t, children: n } = e;
  if (n) {
    if (t & 16)
      return n[0];
    if (t & 32 && ve(n.default))
      return n.default();
  }
}
function Nn(e, t) {
  e.shapeFlag & 6 && e.component ? (e.transition = t, Nn(e.component.subTree, t)) : e.shapeFlag & 128 ? (e.ssContent.transition = t.clone(e.ssContent), e.ssFallback.transition = t.clone(e.ssFallback)) : e.transition = t;
}
function ms(e, t = !1, n) {
  let r = [], i = 0;
  for (let u = 0; u < e.length; u++) {
    let s = e[u];
    const o = n == null ? s.key : String(n) + String(s.key != null ? s.key : u);
    s.type === Se ? (s.patchFlag & 128 && i++, r = r.concat(
      ms(s.children, t, o)
    )) : (t || s.type !== it) && r.push(o != null ? Cn(s, { key: o }) : s);
  }
  if (i > 1)
    for (let u = 0; u < r.length; u++)
      r[u].patchFlag = -2;
  return r;
}
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function aa(e, t) {
  return ve(e) ? (
    // #8236: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    qe({ name: e.name }, t, { setup: e })
  ) : e;
}
function Sp() {
  const e = en();
  return e ? (e.appContext.config.idPrefix || "v") + "-" + e.ids[0] + e.ids[1]++ : "";
}
function la(e) {
  e.ids = [e.ids[0] + e.ids[2]++ + "-", 0, 0];
}
function Tp(e) {
  const t = en(), n = qc(null);
  if (t) {
    const i = t.refs === Ie ? t.refs = {} : t.refs;
    Object.defineProperty(i, e, {
      enumerable: !0,
      get: () => n.value,
      set: (u) => n.value = u
    });
  }
  return n;
}
function zi(e, t, n, r, i = !1) {
  if (ce(e)) {
    e.forEach(
      (h, E) => zi(
        h,
        t && (ce(t) ? t[E] : t),
        n,
        r,
        i
      )
    );
    return;
  }
  if (tr(r) && !i) {
    r.shapeFlag & 512 && r.type.__asyncResolved && r.component.subTree.component && zi(e, t, n, r.component.subTree);
    return;
  }
  const u = r.shapeFlag & 4 ? Yi(r.component) : r.el, s = i ? null : u, { i: o, r: a } = e, c = t && t.r, l = o.refs === Ie ? o.refs = {} : o.refs, f = o.setupState, m = ze(f), p = f === Ie ? () => !1 : (h) => Be(m, h);
  if (c != null && c !== a && (Ye(c) ? (l[c] = null, p(c) && (f[c] = null)) : ht(c) && (c.value = null)), ve(a))
    ui(a, o, 12, [s, l]);
  else {
    const h = Ye(a), E = ht(a);
    if (h || E) {
      const C = () => {
        if (e.f) {
          const L = h ? p(a) ? f[a] : l[a] : a.value;
          i ? ce(L) && Ko(L, u) : ce(L) ? L.includes(u) || L.push(u) : h ? (l[a] = [u], p(a) && (f[a] = l[a])) : (a.value = [u], e.k && (l[e.k] = a.value));
        } else h ? (l[a] = s, p(a) && (f[a] = s)) : E && (a.value = s, e.k && (l[e.k] = s));
      };
      s ? (C.id = -1, lt(C, n)) : C();
    }
  }
}
let Ja = !1;
const Ar = () => {
  Ja || (console.error("Hydration completed but contains mismatches."), Ja = !0);
}, Op = (e) => e.namespaceURI.includes("svg") && e.tagName !== "foreignObject", Dp = (e) => e.namespaceURI.includes("MathML"), cu = (e) => {
  if (e.nodeType === 1) {
    if (Op(e)) return "svg";
    if (Dp(e)) return "mathml";
  }
}, Rr = (e) => e.nodeType === 8;
function Ap(e) {
  const {
    mt: t,
    p: n,
    o: {
      patchProp: r,
      createText: i,
      nextSibling: u,
      parentNode: s,
      remove: o,
      insert: a,
      createComment: c
    }
  } = e, l = (b, _) => {
    if (!_.hasChildNodes()) {
      n(null, b, _), zu(), _._vnode = b;
      return;
    }
    f(_.firstChild, b, null, null, null), zu(), _._vnode = b;
  }, f = (b, _, S, F, W, Q = !1) => {
    Q = Q || !!_.dynamicChildren;
    const R = Rr(b) && b.data === "[", j = () => E(
      b,
      _,
      S,
      F,
      W,
      R
    ), { type: ae, ref: Y, shapeFlag: he, patchFlag: we } = _;
    let be = b.nodeType;
    _.el = b, we === -2 && (Q = !1, _.dynamicChildren = null);
    let ie = null;
    switch (ae) {
      case nr:
        be !== 3 ? _.children === "" ? (a(_.el = i(""), s(b), b), ie = b) : ie = j() : (b.data !== _.children && (Ar(), b.data = _.children), ie = u(b));
        break;
      case it:
        T(b) ? (ie = u(b), L(
          _.el = b.content.firstChild,
          b,
          S
        )) : be !== 8 || R ? ie = j() : ie = u(b);
        break;
      case _r:
        if (R && (b = u(b), be = b.nodeType), be === 1 || be === 3) {
          ie = b;
          const Ee = !_.children.length;
          for (let A = 0; A < _.staticCount; A++)
            Ee && (_.children += ie.nodeType === 1 ? ie.outerHTML : ie.data), A === _.staticCount - 1 && (_.anchor = ie), ie = u(ie);
          return R ? u(ie) : ie;
        } else
          j();
        break;
      case Se:
        R ? ie = h(
          b,
          _,
          S,
          F,
          W,
          Q
        ) : ie = j();
        break;
      default:
        if (he & 1)
          (be !== 1 || _.type.toLowerCase() !== b.tagName.toLowerCase()) && !T(b) ? ie = j() : ie = m(
            b,
            _,
            S,
            F,
            W,
            Q
          );
        else if (he & 6) {
          _.slotScopeIds = W;
          const Ee = s(b);
          if (R ? ie = C(b) : Rr(b) && b.data === "teleport start" ? ie = C(b, b.data, "teleport end") : ie = u(b), t(
            _,
            Ee,
            null,
            S,
            F,
            cu(Ee),
            Q
          ), tr(_) && !_.type.__asyncResolved) {
            let A;
            R ? (A = Re(Se), A.anchor = ie ? ie.previousSibling : Ee.lastChild) : A = b.nodeType === 3 ? En("") : Re("div"), A.el = b, _.component.subTree = A;
          }
        } else he & 64 ? be !== 8 ? ie = j() : ie = _.type.hydrate(
          b,
          _,
          S,
          F,
          W,
          Q,
          e,
          p
        ) : he & 128 && (ie = _.type.hydrate(
          b,
          _,
          S,
          F,
          cu(s(b)),
          W,
          Q,
          e,
          f
        ));
    }
    return Y != null && zi(Y, null, F, _), ie;
  }, m = (b, _, S, F, W, Q) => {
    Q = Q || !!_.dynamicChildren;
    const { type: R, props: j, patchFlag: ae, shapeFlag: Y, dirs: he, transition: we } = _, be = R === "input" || R === "option";
    if (be || ae !== -1) {
      he && vn(_, null, S, "created");
      let ie = !1;
      if (T(b)) {
        ie = zf(
          null,
          // no need check parentSuspense in hydration
          we
        ) && S && S.vnode.props && S.vnode.props.appear;
        const A = b.content.firstChild;
        ie && we.beforeEnter(A), L(A, b, S), _.el = b = A;
      }
      if (Y & 16 && // skip if element has innerHTML / textContent
      !(j && (j.innerHTML || j.textContent))) {
        let A = p(
          b.firstChild,
          _,
          b,
          S,
          F,
          W,
          Q
        );
        for (; A; ) {
          fu(
            b,
            1
            /* CHILDREN */
          ) || Ar();
          const B = A;
          A = A.nextSibling, o(B);
        }
      } else if (Y & 8) {
        let A = _.children;
        A[0] === `
` && (b.tagName === "PRE" || b.tagName === "TEXTAREA") && (A = A.slice(1)), b.textContent !== A && (fu(
          b,
          0
          /* TEXT */
        ) || Ar(), b.textContent = _.children);
      }
      if (j) {
        if (be || !Q || ae & 48) {
          const A = b.tagName.includes("-");
          for (const B in j)
            (be && (B.endsWith("value") || B === "indeterminate") || qi(B) && !Hr(B) || // force hydrate v-bind with .prop modifiers
            B[0] === "." || A) && r(b, B, null, j[B], void 0, S);
        } else if (j.onClick)
          r(
            b,
            "onClick",
            null,
            j.onClick,
            void 0,
            S
          );
        else if (ae & 4 && er(j.style))
          for (const A in j.style) j.style[A];
      }
      let Ee;
      (Ee = j && j.onVnodeBeforeMount) && Rt(Ee, S, _), he && vn(_, null, S, "beforeMount"), ((Ee = j && j.onVnodeMounted) || he || ie) && Wf(() => {
        Ee && Rt(Ee, S, _), ie && we.enter(b), he && vn(_, null, S, "mounted");
      }, F);
    }
    return b.nextSibling;
  }, p = (b, _, S, F, W, Q, R) => {
    R = R || !!_.dynamicChildren;
    const j = _.children, ae = j.length;
    for (let Y = 0; Y < ae; Y++) {
      const he = R ? j[Y] : j[Y] = jt(j[Y]), we = he.type === nr;
      b ? (we && !R && Y + 1 < ae && jt(j[Y + 1]).type === nr && (a(
        i(
          b.data.slice(he.children.length)
        ),
        S,
        u(b)
      ), b.data = he.children), b = f(
        b,
        he,
        F,
        W,
        Q,
        R
      )) : we && !he.children ? a(he.el = i(""), S) : (fu(
        S,
        1
        /* CHILDREN */
      ) || Ar(), n(
        null,
        he,
        S,
        null,
        F,
        W,
        cu(S),
        Q
      ));
    }
    return b;
  }, h = (b, _, S, F, W, Q) => {
    const { slotScopeIds: R } = _;
    R && (W = W ? W.concat(R) : R);
    const j = s(b), ae = p(
      u(b),
      _,
      j,
      S,
      F,
      W,
      Q
    );
    return ae && Rr(ae) && ae.data === "]" ? u(_.anchor = ae) : (Ar(), a(_.anchor = c("]"), j, ae), ae);
  }, E = (b, _, S, F, W, Q) => {
    if (fu(
      b.parentElement,
      1
      /* CHILDREN */
    ) || Ar(), _.el = null, Q) {
      const ae = C(b);
      for (; ; ) {
        const Y = u(b);
        if (Y && Y !== ae)
          o(Y);
        else
          break;
      }
    }
    const R = u(b), j = s(b);
    return o(b), n(
      null,
      _,
      j,
      R,
      S,
      F,
      cu(j),
      W
    ), S && (S.vnode.el = _.el, vs(S, _.el)), R;
  }, C = (b, _ = "[", S = "]") => {
    let F = 0;
    for (; b; )
      if (b = u(b), b && Rr(b) && (b.data === _ && F++, b.data === S)) {
        if (F === 0)
          return u(b);
        F--;
      }
    return b;
  }, L = (b, _, S) => {
    const F = _.parentNode;
    F && F.replaceChild(b, _);
    let W = S;
    for (; W; )
      W.vnode.el === _ && (W.vnode.el = W.subTree.el = b), W = W.parent;
  }, T = (b) => b.nodeType === 1 && b.tagName === "TEMPLATE";
  return [l, f];
}
const Xa = "data-allow-mismatch", Fp = {
  0: "text",
  1: "children",
  2: "class",
  3: "style",
  4: "attribute"
};
function fu(e, t) {
  if (t === 0 || t === 1)
    for (; e && !e.hasAttribute(Xa); )
      e = e.parentElement;
  const n = e && e.getAttribute(Xa);
  if (n == null)
    return !1;
  if (n === "")
    return !0;
  {
    const r = n.split(",");
    return t === 0 && r.includes("children") ? !0 : n.split(",").includes(Fp[t]);
  }
}
const Mp = is().requestIdleCallback || ((e) => setTimeout(e, 1)), Np = is().cancelIdleCallback || ((e) => clearTimeout(e)), Ip = (e = 1e4) => (t) => {
  const n = Mp(t, { timeout: e });
  return () => Np(n);
};
function Lp(e) {
  const { top: t, left: n, bottom: r, right: i } = e.getBoundingClientRect(), { innerHeight: u, innerWidth: s } = window;
  return (t > 0 && t < u || r > 0 && r < u) && (n > 0 && n < s || i > 0 && i < s);
}
const zp = (e) => (t, n) => {
  const r = new IntersectionObserver((i) => {
    for (const u of i)
      if (u.isIntersecting) {
        r.disconnect(), t();
        break;
      }
  }, e);
  return n((i) => {
    if (i instanceof Element) {
      if (Lp(i))
        return t(), r.disconnect(), !1;
      r.observe(i);
    }
  }), () => r.disconnect();
}, Pp = (e) => (t) => {
  if (e) {
    const n = matchMedia(e);
    if (n.matches)
      t();
    else
      return n.addEventListener("change", t, { once: !0 }), () => n.removeEventListener("change", t);
  }
}, Rp = (e = []) => (t, n) => {
  Ye(e) && (e = [e]);
  let r = !1;
  const i = (s) => {
    r || (r = !0, u(), t(), s.target.dispatchEvent(new s.constructor(s.type, s)));
  }, u = () => {
    n((s) => {
      for (const o of e)
        s.removeEventListener(o, i);
    });
  };
  return n((s) => {
    for (const o of e)
      s.addEventListener(o, i, { once: !0 });
  }), u;
};
function jp(e, t) {
  if (Rr(e) && e.data === "[") {
    let n = 1, r = e.nextSibling;
    for (; r; ) {
      if (r.nodeType === 1) {
        if (t(r) === !1)
          break;
      } else if (Rr(r))
        if (r.data === "]") {
          if (--n === 0) break;
        } else r.data === "[" && n++;
      r = r.nextSibling;
    }
  } else
    t(e);
}
const tr = (e) => !!e.type.__asyncLoader;
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function Bp(e) {
  ve(e) && (e = { loader: e });
  const {
    loader: t,
    loadingComponent: n,
    errorComponent: r,
    delay: i = 200,
    hydrate: u,
    timeout: s,
    // undefined = never times out
    suspensible: o = !0,
    onError: a
  } = e;
  let c = null, l, f = 0;
  const m = () => (f++, c = null, p()), p = () => {
    let h;
    return c || (h = c = t().catch((E) => {
      if (E = E instanceof Error ? E : new Error(String(E)), a)
        return new Promise((C, L) => {
          a(E, () => C(m()), () => L(E), f + 1);
        });
      throw E;
    }).then((E) => h !== c && c ? c : (E && (E.__esModule || E[Symbol.toStringTag] === "Module") && (E = E.default), l = E, E)));
  };
  return /* @__PURE__ */ aa({
    name: "AsyncComponentWrapper",
    __asyncLoader: p,
    __asyncHydrate(h, E, C) {
      const L = u ? () => {
        const T = u(
          C,
          (b) => jp(h, b)
        );
        T && (E.bum || (E.bum = [])).push(T);
      } : C;
      l ? L() : p().then(() => !E.isUnmounted && L());
    },
    get __asyncResolved() {
      return l;
    },
    setup() {
      const h = ft;
      if (la(h), l)
        return () => Ys(l, h);
      const E = (b) => {
        c = null, Er(
          b,
          h,
          13,
          !r
        );
      };
      if (o && h.suspense || Jr)
        return p().then((b) => () => Ys(b, h)).catch((b) => (E(b), () => r ? Re(r, {
          error: b
        }) : null));
      const C = wi(!1), L = wi(), T = wi(!!i);
      return i && setTimeout(() => {
        T.value = !1;
      }, i), s != null && setTimeout(() => {
        if (!C.value && !L.value) {
          const b = new Error(
            `Async component timed out after ${s}ms.`
          );
          E(b), L.value = b;
        }
      }, s), p().then(() => {
        C.value = !0, h.parent && $i(h.parent.vnode) && h.parent.update();
      }).catch((b) => {
        E(b), L.value = b;
      }), () => {
        if (C.value && l)
          return Ys(l, h);
        if (L.value && r)
          return Re(r, {
            error: L.value
          });
        if (n && !T.value)
          return Re(n);
      };
    }
  });
}
function Ys(e, t) {
  const { ref: n, props: r, children: i, ce: u } = t.vnode, s = Re(e, r, i);
  return s.ref = n, s.ce = u, delete t.vnode.ce, s;
}
const $i = (e) => e.type.__isKeepAlive, Vp = {
  name: "KeepAlive",
  // Marker for special handling inside the renderer. We are not using a ===
  // check directly on KeepAlive in the renderer, because importing it directly
  // would prevent it from being tree-shaken.
  __isKeepAlive: !0,
  props: {
    include: [String, RegExp, Array],
    exclude: [String, RegExp, Array],
    max: [String, Number]
  },
  setup(e, { slots: t }) {
    const n = en(), r = n.ctx;
    if (!r.renderer)
      return () => {
        const T = t.default && t.default();
        return T && T.length === 1 ? T[0] : T;
      };
    const i = /* @__PURE__ */ new Map(), u = /* @__PURE__ */ new Set();
    let s = null;
    const o = n.suspense, {
      renderer: {
        p: a,
        m: c,
        um: l,
        o: { createElement: f }
      }
    } = r, m = f("div");
    r.activate = (T, b, _, S, F) => {
      const W = T.component;
      c(T, b, _, 0, o), a(
        W.vnode,
        T,
        b,
        _,
        W,
        o,
        S,
        T.slotScopeIds,
        F
      ), lt(() => {
        W.isDeactivated = !1, W.a && Ur(W.a);
        const Q = T.props && T.props.onVnodeMounted;
        Q && Rt(Q, W.parent, T);
      }, o);
    }, r.deactivate = (T) => {
      const b = T.component;
      Ru(b.m), Ru(b.a), c(T, m, null, 1, o), lt(() => {
        b.da && Ur(b.da);
        const _ = T.props && T.props.onVnodeUnmounted;
        _ && Rt(_, b.parent, T), b.isDeactivated = !0;
      }, o);
    };
    function p(T) {
      Ks(T), l(T, n, o, !0);
    }
    function h(T) {
      i.forEach((b, _) => {
        const S = Lo(b.type);
        S && !T(S) && E(_);
      });
    }
    function E(T) {
      const b = i.get(T);
      b && (!s || !ln(b, s)) ? p(b) : s && Ks(s), i.delete(T), u.delete(T);
    }
    Wr(
      () => [e.include, e.exclude],
      ([T, b]) => {
        T && h((_) => bi(T, _)), b && h((_) => !bi(b, _));
      },
      // prune post-render after `current` has been updated
      { flush: "post", deep: !0 }
    );
    let C = null;
    const L = () => {
      C != null && (ju(n.subTree.type) ? lt(() => {
        i.set(C, du(n.subTree));
      }, n.subTree.suspense) : i.set(C, du(n.subTree)));
    };
    return Zi(L), gs(L), ys(() => {
      i.forEach((T) => {
        const { subTree: b, suspense: _ } = n, S = du(b);
        if (T.type === S.type && T.key === S.key) {
          Ks(S);
          const F = S.component.da;
          F && lt(F, _);
          return;
        }
        p(T);
      });
    }), () => {
      if (C = null, !t.default)
        return s = null;
      const T = t.default(), b = T[0];
      if (T.length > 1)
        return s = null, T;
      if (!In(b) || !(b.shapeFlag & 4) && !(b.shapeFlag & 128))
        return s = null, b;
      let _ = du(b);
      if (_.type === it)
        return s = null, _;
      const S = _.type, F = Lo(
        tr(_) ? _.type.__asyncResolved || {} : S
      ), { include: W, exclude: Q, max: R } = e;
      if (W && (!F || !bi(W, F)) || Q && F && bi(Q, F))
        return _.shapeFlag &= -257, s = _, b;
      const j = _.key == null ? S : _.key, ae = i.get(j);
      return _.el && (_ = Cn(_), b.shapeFlag & 128 && (b.ssContent = _)), C = j, ae ? (_.el = ae.el, _.component = ae.component, _.transition && Nn(_, _.transition), _.shapeFlag |= 512, u.delete(j), u.add(j)) : (u.add(j), R && u.size > parseInt(R, 10) && E(u.values().next().value)), _.shapeFlag |= 256, s = _, ju(b.type) ? b : _;
    };
  }
}, Hp = Vp;
function bi(e, t) {
  return ce(e) ? e.some((n) => bi(n, t)) : Ye(e) ? e.split(",").includes(t) : ph(e) ? (e.lastIndex = 0, e.test(t)) : !1;
}
function cf(e, t) {
  df(e, "a", t);
}
function ff(e, t) {
  df(e, "da", t);
}
function df(e, t, n = ft) {
  const r = e.__wdc || (e.__wdc = () => {
    let i = n;
    for (; i; ) {
      if (i.isDeactivated)
        return;
      i = i.parent;
    }
    return e();
  });
  if (bs(t, r, n), n) {
    let i = n.parent;
    for (; i && i.parent; )
      $i(i.parent.vnode) && Up(r, t, n, i), i = i.parent;
  }
}
function Up(e, t, n, r) {
  const i = bs(
    t,
    e,
    r,
    !0
    /* prepend */
  );
  _s(() => {
    Ko(r[t], i);
  }, n);
}
function Ks(e) {
  e.shapeFlag &= -257, e.shapeFlag &= -513;
}
function du(e) {
  return e.shapeFlag & 128 ? e.ssContent : e;
}
function bs(e, t, n = ft, r = !1) {
  if (n) {
    const i = n[e] || (n[e] = []), u = t.__weh || (t.__weh = (...s) => {
      lr();
      const o = vr(n), a = Qt(t, n, e, s);
      return o(), cr(), a;
    });
    return r ? i.unshift(u) : i.push(u), u;
  }
}
const zn = (e) => (t, n = ft) => {
  (!Jr || e === "sp") && bs(e, (...r) => t(...r), n);
}, hf = zn("bm"), Zi = zn("m"), ca = zn(
  "bu"
), gs = zn("u"), ys = zn(
  "bum"
), _s = zn("um"), pf = zn(
  "sp"
), mf = zn("rtg"), bf = zn("rtc");
function gf(e, t = ft) {
  bs("ec", e, t);
}
const fa = "components", qp = "directives";
function et(e, t) {
  return da(fa, e, !0, t) || e;
}
const yf = Symbol.for("v-ndc");
function Wp(e) {
  return Ye(e) ? da(fa, e, !1) || e : e || yf;
}
function _f(e) {
  return da(qp, e);
}
function da(e, t, n = !0, r = !1) {
  const i = dt || ft;
  if (i) {
    const u = i.type;
    if (e === fa) {
      const o = Lo(
        u,
        !1
      );
      if (o && (o === t || o === xt(t) || o === Wi(xt(t))))
        return u;
    }
    const s = (
      // local registration
      // check instance[type] first which is resolved for options API
      Qa(i[e] || u[e], t) || // global registration
      Qa(i.appContext[e], t)
    );
    return !s && r ? u : s;
  }
}
function Qa(e, t) {
  return e && (e[t] || e[xt(t)] || e[Wi(xt(t))]);
}
function _t(e, t, n, r) {
  let i;
  const u = n && n[r], s = ce(e);
  if (s || Ye(e)) {
    const o = s && er(e);
    let a = !1;
    o && (a = !Ut(e), e = os(e)), i = new Array(e.length);
    for (let c = 0, l = e.length; c < l; c++)
      i[c] = t(
        a ? wt(e[c]) : e[c],
        c,
        void 0,
        u && u[c]
      );
  } else if (typeof e == "number") {
    i = new Array(e);
    for (let o = 0; o < e; o++)
      i[o] = t(o + 1, o, void 0, u && u[o]);
  } else if (Ue(e))
    if (e[Symbol.iterator])
      i = Array.from(
        e,
        (o, a) => t(o, a, void 0, u && u[a])
      );
    else {
      const o = Object.keys(e);
      i = new Array(o.length);
      for (let a = 0, c = o.length; a < c; a++) {
        const l = o[a];
        i[a] = t(e[l], l, a, u && u[a]);
      }
    }
  else
    i = [];
  return n && (n[r] = i), i;
}
function $p(e, t) {
  for (let n = 0; n < t.length; n++) {
    const r = t[n];
    if (ce(r))
      for (let i = 0; i < r.length; i++)
        e[r[i].name] = r[i].fn;
    else r && (e[r.name] = r.key ? (...i) => {
      const u = r.fn(...i);
      return u && (u.key = r.key), u;
    } : r.fn);
  }
  return e;
}
function Zp(e, t, n = {}, r, i) {
  if (dt.ce || dt.parent && tr(dt.parent) && dt.parent.ce)
    return t !== "default" && (n.name = t), N(), ct(
      Se,
      null,
      [Re("slot", n, r && r())],
      64
    );
  let u = e[t];
  u && u._c && (u._d = !1), N();
  const s = u && ha(u(n)), o = n.key || // slot content array of a dynamic conditional slot may have a branch
  // key attached in the `createSlots` helper, respect that
  s && s.key, a = ct(
    Se,
    {
      key: (o && !dn(o) ? o : `_${t}`) + // #7256 force differentiate fallback content from actual content
      (!s && r ? "_fb" : "")
    },
    s || (r ? r() : []),
    s && e._ === 1 ? 64 : -2
  );
  return !i && a.scopeId && (a.slotScopeIds = [a.scopeId + "-s"]), u && u._c && (u._d = !0), a;
}
function ha(e) {
  return e.some((t) => In(t) ? !(t.type === it || t.type === Se && !ha(t.children)) : !0) ? e : null;
}
function Gp(e, t) {
  const n = {};
  for (const r in e)
    n[t && /[A-Z]/.test(r) ? `on:${r}` : xi(r)] = e[r];
  return n;
}
const Eo = (e) => e ? Xf(e) ? Yi(e) : Eo(e.parent) : null, Ci = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ qe(/* @__PURE__ */ Object.create(null), {
    $: (e) => e,
    $el: (e) => e.vnode.el,
    $data: (e) => e.data,
    $props: (e) => e.props,
    $attrs: (e) => e.attrs,
    $slots: (e) => e.slots,
    $refs: (e) => e.refs,
    $parent: (e) => Eo(e.parent),
    $root: (e) => Eo(e.root),
    $host: (e) => e.ce,
    $emit: (e) => e.emit,
    $options: (e) => pa(e),
    $forceUpdate: (e) => e.f || (e.f = () => {
      ua(e.update);
    }),
    $nextTick: (e) => e.n || (e.n = hs.bind(e.proxy)),
    $watch: (e) => S1.bind(e)
  })
), Js = (e, t) => e !== Ie && !e.__isScriptSetup && Be(e, t), Co = {
  get({ _: e }, t) {
    if (t === "__v_skip")
      return !0;
    const { ctx: n, setupState: r, data: i, props: u, accessCache: s, type: o, appContext: a } = e;
    let c;
    if (t[0] !== "$") {
      const p = s[t];
      if (p !== void 0)
        switch (p) {
          case 1:
            return r[t];
          case 2:
            return i[t];
          case 4:
            return n[t];
          case 3:
            return u[t];
        }
      else {
        if (Js(r, t))
          return s[t] = 1, r[t];
        if (i !== Ie && Be(i, t))
          return s[t] = 2, i[t];
        if (
          // only cache other properties when instance has declared (thus stable)
          // props
          (c = e.propsOptions[0]) && Be(c, t)
        )
          return s[t] = 3, u[t];
        if (n !== Ie && Be(n, t))
          return s[t] = 4, n[t];
        So && (s[t] = 0);
      }
    }
    const l = Ci[t];
    let f, m;
    if (l)
      return t === "$attrs" && kt(e.attrs, "get", ""), l(e);
    if (
      // css module (injected by vue-loader)
      (f = o.__cssModules) && (f = f[t])
    )
      return f;
    if (n !== Ie && Be(n, t))
      return s[t] = 4, n[t];
    if (
      // global properties
      m = a.config.globalProperties, Be(m, t)
    )
      return m[t];
  },
  set({ _: e }, t, n) {
    const { data: r, setupState: i, ctx: u } = e;
    return Js(i, t) ? (i[t] = n, !0) : r !== Ie && Be(r, t) ? (r[t] = n, !0) : Be(e.props, t) || t[0] === "$" && t.slice(1) in e ? !1 : (u[t] = n, !0);
  },
  has({
    _: { data: e, setupState: t, accessCache: n, ctx: r, appContext: i, propsOptions: u }
  }, s) {
    let o;
    return !!n[s] || e !== Ie && Be(e, s) || Js(t, s) || (o = u[0]) && Be(o, s) || Be(r, s) || Be(Ci, s) || Be(i.config.globalProperties, s);
  },
  defineProperty(e, t, n) {
    return n.get != null ? e._.accessCache[t] = 0 : Be(n, "value") && this.set(e, t, n.value, null), Reflect.defineProperty(e, t, n);
  }
}, Yp = /* @__PURE__ */ qe({}, Co, {
  get(e, t) {
    if (t !== Symbol.unscopables)
      return Co.get(e, t, e);
  },
  has(e, t) {
    return t[0] !== "_" && !_h(t);
  }
});
function Kp() {
  return null;
}
function Jp() {
  return null;
}
function Xp(e) {
}
function Qp(e) {
}
function e1() {
  return null;
}
function t1() {
}
function n1(e, t) {
  return null;
}
function r1() {
  return xf().slots;
}
function i1() {
  return xf().attrs;
}
function xf() {
  const e = en();
  return e.setupContext || (e.setupContext = t0(e));
}
function Pi(e) {
  return ce(e) ? e.reduce(
    (t, n) => (t[n] = null, t),
    {}
  ) : e;
}
function u1(e, t) {
  const n = Pi(e);
  for (const r in t) {
    if (r.startsWith("__skip")) continue;
    let i = n[r];
    i ? ce(i) || ve(i) ? i = n[r] = { type: i, default: t[r] } : i.default = t[r] : i === null && (i = n[r] = { default: t[r] }), i && t[`__skip_${r}`] && (i.skipFactory = !0);
  }
  return n;
}
function s1(e, t) {
  return !e || !t ? e || t : ce(e) && ce(t) ? e.concat(t) : qe({}, Pi(e), Pi(t));
}
function o1(e, t) {
  const n = {};
  for (const r in e)
    t.includes(r) || Object.defineProperty(n, r, {
      enumerable: !0,
      get: () => e[r]
    });
  return n;
}
function a1(e) {
  const t = en();
  let n = e();
  return Mo(), Jo(n) && (n = n.catch((r) => {
    throw vr(t), r;
  })), [n, () => vr(t)];
}
let So = !0;
function l1(e) {
  const t = pa(e), n = e.proxy, r = e.ctx;
  So = !1, t.beforeCreate && el(t.beforeCreate, e, "bc");
  const {
    // state
    data: i,
    computed: u,
    methods: s,
    watch: o,
    provide: a,
    inject: c,
    // lifecycle
    created: l,
    beforeMount: f,
    mounted: m,
    beforeUpdate: p,
    updated: h,
    activated: E,
    deactivated: C,
    beforeDestroy: L,
    beforeUnmount: T,
    destroyed: b,
    unmounted: _,
    render: S,
    renderTracked: F,
    renderTriggered: W,
    errorCaptured: Q,
    serverPrefetch: R,
    // public API
    expose: j,
    inheritAttrs: ae,
    // assets
    components: Y,
    directives: he,
    filters: we
  } = t;
  if (c && c1(c, r, null), s)
    for (const Ee in s) {
      const A = s[Ee];
      ve(A) && (r[Ee] = A.bind(n));
    }
  if (i) {
    const Ee = i.call(n, n);
    Ue(Ee) && (e.data = ls(Ee));
  }
  if (So = !0, u)
    for (const Ee in u) {
      const A = u[Ee], B = ve(A) ? A.bind(n, n) : ve(A.get) ? A.get.bind(n, n) : Jt, te = !ve(A) && ve(A.set) ? A.set.bind(n) : Jt, le = Hu({
        get: B,
        set: te
      });
      Object.defineProperty(r, Ee, {
        enumerable: !0,
        configurable: !0,
        get: () => le.value,
        set: (ge) => le.value = ge
      });
    }
  if (o)
    for (const Ee in o)
      vf(o[Ee], r, n, Ee);
  if (a) {
    const Ee = ve(a) ? a.call(n) : a;
    Reflect.ownKeys(Ee).forEach((A) => {
      wf(A, Ee[A]);
    });
  }
  l && el(l, e, "c");
  function ie(Ee, A) {
    ce(A) ? A.forEach((B) => Ee(B.bind(n))) : A && Ee(A.bind(n));
  }
  if (ie(hf, f), ie(Zi, m), ie(ca, p), ie(gs, h), ie(cf, E), ie(ff, C), ie(gf, Q), ie(bf, F), ie(mf, W), ie(ys, T), ie(_s, _), ie(pf, R), ce(j))
    if (j.length) {
      const Ee = e.exposed || (e.exposed = {});
      j.forEach((A) => {
        Object.defineProperty(Ee, A, {
          get: () => n[A],
          set: (B) => n[A] = B
        });
      });
    } else e.exposed || (e.exposed = {});
  S && e.render === Jt && (e.render = S), ae != null && (e.inheritAttrs = ae), Y && (e.components = Y), he && (e.directives = he), R && la(e);
}
function c1(e, t, n = Jt) {
  ce(e) && (e = To(e));
  for (const r in e) {
    const i = e[r];
    let u;
    Ue(i) ? "default" in i ? u = Si(
      i.from || r,
      i.default,
      !0
    ) : u = Si(i.from || r) : u = Si(i), ht(u) ? Object.defineProperty(t, r, {
      enumerable: !0,
      configurable: !0,
      get: () => u.value,
      set: (s) => u.value = s
    }) : t[r] = u;
  }
}
function el(e, t, n) {
  Qt(
    ce(e) ? e.map((r) => r.bind(t.proxy)) : e.bind(t.proxy),
    t,
    n
  );
}
function vf(e, t, n, r) {
  let i = r.includes(".") ? Vf(n, r) : () => n[r];
  if (Ye(e)) {
    const u = t[e];
    ve(u) && Wr(i, u);
  } else if (ve(e))
    Wr(i, e.bind(n));
  else if (Ue(e))
    if (ce(e))
      e.forEach((u) => vf(u, t, n, r));
    else {
      const u = ve(e.handler) ? e.handler.bind(n) : t[e.handler];
      ve(u) && Wr(i, u, e);
    }
}
function pa(e) {
  const t = e.type, { mixins: n, extends: r } = t, {
    mixins: i,
    optionsCache: u,
    config: { optionMergeStrategies: s }
  } = e.appContext, o = u.get(t);
  let a;
  return o ? a = o : !i.length && !n && !r ? a = t : (a = {}, i.length && i.forEach(
    (c) => Pu(a, c, s, !0)
  ), Pu(a, t, s)), Ue(t) && u.set(t, a), a;
}
function Pu(e, t, n, r = !1) {
  const { mixins: i, extends: u } = t;
  u && Pu(e, u, n, !0), i && i.forEach(
    (s) => Pu(e, s, n, !0)
  );
  for (const s in t)
    if (!(r && s === "expose")) {
      const o = f1[s] || n && n[s];
      e[s] = o ? o(e[s], t[s]) : t[s];
    }
  return e;
}
const f1 = {
  data: tl,
  props: nl,
  emits: nl,
  // objects
  methods: gi,
  computed: gi,
  // lifecycle
  beforeCreate: Dt,
  created: Dt,
  beforeMount: Dt,
  mounted: Dt,
  beforeUpdate: Dt,
  updated: Dt,
  beforeDestroy: Dt,
  beforeUnmount: Dt,
  destroyed: Dt,
  unmounted: Dt,
  activated: Dt,
  deactivated: Dt,
  errorCaptured: Dt,
  serverPrefetch: Dt,
  // assets
  components: gi,
  directives: gi,
  // watch
  watch: h1,
  // provide / inject
  provide: tl,
  inject: d1
};
function tl(e, t) {
  return t ? e ? function() {
    return qe(
      ve(e) ? e.call(this, this) : e,
      ve(t) ? t.call(this, this) : t
    );
  } : t : e;
}
function d1(e, t) {
  return gi(To(e), To(t));
}
function To(e) {
  if (ce(e)) {
    const t = {};
    for (let n = 0; n < e.length; n++)
      t[e[n]] = e[n];
    return t;
  }
  return e;
}
function Dt(e, t) {
  return e ? [...new Set([].concat(e, t))] : t;
}
function gi(e, t) {
  return e ? qe(/* @__PURE__ */ Object.create(null), e, t) : t;
}
function nl(e, t) {
  return e ? ce(e) && ce(t) ? [.../* @__PURE__ */ new Set([...e, ...t])] : qe(
    /* @__PURE__ */ Object.create(null),
    Pi(e),
    Pi(t ?? {})
  ) : t;
}
function h1(e, t) {
  if (!e) return t;
  if (!t) return e;
  const n = qe(/* @__PURE__ */ Object.create(null), e);
  for (const r in t)
    n[r] = Dt(e[r], t[r]);
  return n;
}
function kf() {
  return {
    app: null,
    config: {
      isNativeTag: dh,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let p1 = 0;
function m1(e, t) {
  return function(r, i = null) {
    ve(r) || (r = qe({}, r)), i != null && !Ue(i) && (i = null);
    const u = kf(), s = /* @__PURE__ */ new WeakSet(), o = [];
    let a = !1;
    const c = u.app = {
      _uid: p1++,
      _component: r,
      _props: i,
      _container: null,
      _context: u,
      _instance: null,
      version: i0,
      get config() {
        return u.config;
      },
      set config(l) {
      },
      use(l, ...f) {
        return s.has(l) || (l && ve(l.install) ? (s.add(l), l.install(c, ...f)) : ve(l) && (s.add(l), l(c, ...f))), c;
      },
      mixin(l) {
        return u.mixins.includes(l) || u.mixins.push(l), c;
      },
      component(l, f) {
        return f ? (u.components[l] = f, c) : u.components[l];
      },
      directive(l, f) {
        return f ? (u.directives[l] = f, c) : u.directives[l];
      },
      mount(l, f, m) {
        if (!a) {
          const p = c._ceVNode || Re(r, i);
          return p.appContext = u, m === !0 ? m = "svg" : m === !1 && (m = void 0), f && t ? t(p, l) : e(p, l, m), a = !0, c._container = l, l.__vue_app__ = c, Yi(p.component);
        }
      },
      onUnmount(l) {
        o.push(l);
      },
      unmount() {
        a && (Qt(
          o,
          c._instance,
          16
        ), e(null, c._container), delete c._container.__vue_app__);
      },
      provide(l, f) {
        return u.provides[l] = f, c;
      },
      runWithContext(l) {
        const f = yr;
        yr = c;
        try {
          return l();
        } finally {
          yr = f;
        }
      }
    };
    return c;
  };
}
let yr = null;
function wf(e, t) {
  if (ft) {
    let n = ft.provides;
    const r = ft.parent && ft.parent.provides;
    r === n && (n = ft.provides = Object.create(r)), n[e] = t;
  }
}
function Si(e, t, n = !1) {
  const r = ft || dt;
  if (r || yr) {
    const i = yr ? yr._context.provides : r ? r.parent == null ? r.vnode.appContext && r.vnode.appContext.provides : r.parent.provides : void 0;
    if (i && e in i)
      return i[e];
    if (arguments.length > 1)
      return n && ve(t) ? t.call(r && r.proxy) : t;
  }
}
function b1() {
  return !!(ft || dt || yr);
}
const Ef = {}, Cf = () => Object.create(Ef), Sf = (e) => Object.getPrototypeOf(e) === Ef;
function g1(e, t, n, r = !1) {
  const i = {}, u = Cf();
  e.propsDefaults = /* @__PURE__ */ Object.create(null), Tf(e, t, i, u);
  for (const s in e.propsOptions[0])
    s in i || (i[s] = void 0);
  n ? e.props = r ? i : Hc(i) : e.type.props ? e.props = i : e.props = u, e.attrs = u;
}
function y1(e, t, n, r) {
  const {
    props: i,
    attrs: u,
    vnode: { patchFlag: s }
  } = e, o = ze(i), [a] = e.propsOptions;
  let c = !1;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    (r || s > 0) && !(s & 16)
  ) {
    if (s & 8) {
      const l = e.vnode.dynamicProps;
      for (let f = 0; f < l.length; f++) {
        let m = l[f];
        if (xs(e.emitsOptions, m))
          continue;
        const p = t[m];
        if (a)
          if (Be(u, m))
            p !== u[m] && (u[m] = p, c = !0);
          else {
            const h = xt(m);
            i[h] = Oo(
              a,
              o,
              h,
              p,
              e,
              !1
            );
          }
        else
          p !== u[m] && (u[m] = p, c = !0);
      }
    }
  } else {
    Tf(e, t, i, u) && (c = !0);
    let l;
    for (const f in o)
      (!t || // for camelCase
      !Be(t, f) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((l = Bt(f)) === f || !Be(t, l))) && (a ? n && // for camelCase
      (n[f] !== void 0 || // for kebab-case
      n[l] !== void 0) && (i[f] = Oo(
        a,
        o,
        f,
        void 0,
        e,
        !0
      )) : delete i[f]);
    if (u !== o)
      for (const f in u)
        (!t || !Be(t, f)) && (delete u[f], c = !0);
  }
  c && An(e.attrs, "set", "");
}
function Tf(e, t, n, r) {
  const [i, u] = e.propsOptions;
  let s = !1, o;
  if (t)
    for (let a in t) {
      if (Hr(a))
        continue;
      const c = t[a];
      let l;
      i && Be(i, l = xt(a)) ? !u || !u.includes(l) ? n[l] = c : (o || (o = {}))[l] = c : xs(e.emitsOptions, a) || (!(a in r) || c !== r[a]) && (r[a] = c, s = !0);
    }
  if (u) {
    const a = ze(n), c = o || Ie;
    for (let l = 0; l < u.length; l++) {
      const f = u[l];
      n[f] = Oo(
        i,
        a,
        f,
        c[f],
        e,
        !Be(c, f)
      );
    }
  }
  return s;
}
function Oo(e, t, n, r, i, u) {
  const s = e[n];
  if (s != null) {
    const o = Be(s, "default");
    if (o && r === void 0) {
      const a = s.default;
      if (s.type !== Function && !s.skipFactory && ve(a)) {
        const { propsDefaults: c } = i;
        if (n in c)
          r = c[n];
        else {
          const l = vr(i);
          r = c[n] = a.call(
            null,
            t
          ), l();
        }
      } else
        r = a;
      i.ce && i.ce._setProp(n, r);
    }
    s[
      0
      /* shouldCast */
    ] && (u && !o ? r = !1 : s[
      1
      /* shouldCastTrue */
    ] && (r === "" || r === Bt(n)) && (r = !0));
  }
  return r;
}
const _1 = /* @__PURE__ */ new WeakMap();
function Of(e, t, n = !1) {
  const r = n ? _1 : t.propsCache, i = r.get(e);
  if (i)
    return i;
  const u = e.props, s = {}, o = [];
  let a = !1;
  if (!ve(e)) {
    const l = (f) => {
      a = !0;
      const [m, p] = Of(f, t, !0);
      qe(s, m), p && o.push(...p);
    };
    !n && t.mixins.length && t.mixins.forEach(l), e.extends && l(e.extends), e.mixins && e.mixins.forEach(l);
  }
  if (!u && !a)
    return Ue(e) && r.set(e, Br), Br;
  if (ce(u))
    for (let l = 0; l < u.length; l++) {
      const f = xt(u[l]);
      rl(f) && (s[f] = Ie);
    }
  else if (u)
    for (const l in u) {
      const f = xt(l);
      if (rl(f)) {
        const m = u[l], p = s[f] = ce(m) || ve(m) ? { type: m } : qe({}, m), h = p.type;
        let E = !1, C = !0;
        if (ce(h))
          for (let L = 0; L < h.length; ++L) {
            const T = h[L], b = ve(T) && T.name;
            if (b === "Boolean") {
              E = !0;
              break;
            } else b === "String" && (C = !1);
          }
        else
          E = ve(h) && h.name === "Boolean";
        p[
          0
          /* shouldCast */
        ] = E, p[
          1
          /* shouldCastTrue */
        ] = C, (E || Be(p, "default")) && o.push(f);
      }
    }
  const c = [s, o];
  return Ue(e) && r.set(e, c), c;
}
function rl(e) {
  return e[0] !== "$" && !Hr(e);
}
const Df = (e) => e[0] === "_" || e === "$stable", ma = (e) => ce(e) ? e.map(jt) : [jt(e)], x1 = (e, t, n) => {
  if (t._n)
    return t;
  const r = sr((...i) => ma(t(...i)), n);
  return r._c = !1, r;
}, Af = (e, t, n) => {
  const r = e._ctx;
  for (const i in e) {
    if (Df(i)) continue;
    const u = e[i];
    if (ve(u))
      t[i] = x1(i, u, r);
    else if (u != null) {
      const s = ma(u);
      t[i] = () => s;
    }
  }
}, Ff = (e, t) => {
  const n = ma(t);
  e.slots.default = () => n;
}, Mf = (e, t, n) => {
  for (const r in t)
    (n || r !== "_") && (e[r] = t[r]);
}, v1 = (e, t, n) => {
  const r = e.slots = Cf();
  if (e.vnode.shapeFlag & 32) {
    const i = t._;
    i ? (Mf(r, t, n), n && kc(r, "_", i, !0)) : Af(t, r);
  } else t && Ff(e, t);
}, k1 = (e, t, n) => {
  const { vnode: r, slots: i } = e;
  let u = !0, s = Ie;
  if (r.shapeFlag & 32) {
    const o = t._;
    o ? n && o === 1 ? u = !1 : Mf(i, t, n) : (u = !t.$stable, Af(t, i)), s = t;
  } else t && (Ff(e, t), s = { default: 1 });
  if (u)
    for (const o in i)
      !Df(o) && s[o] == null && delete i[o];
}, lt = Wf;
function Nf(e) {
  return Lf(e);
}
function If(e) {
  return Lf(e, Ap);
}
function Lf(e, t) {
  const n = is();
  n.__VUE__ = !0;
  const {
    insert: r,
    remove: i,
    patchProp: u,
    createElement: s,
    createText: o,
    createComment: a,
    setText: c,
    setElementText: l,
    parentNode: f,
    nextSibling: m,
    setScopeId: p = Jt,
    insertStaticContent: h
  } = e, E = (g, v, M, $ = null, V = null, Z = null, ne = void 0, ee = null, X = !!v.dynamicChildren) => {
    if (g === v)
      return;
    g && !ln(g, v) && ($ = Lt(g), ge(g, V, Z, !0), g = null), v.patchFlag === -2 && (X = !1, v.dynamicChildren = null);
    const { type: G, ref: ye, shapeFlag: se } = v;
    switch (G) {
      case nr:
        C(g, v, M, $);
        break;
      case it:
        L(g, v, M, $);
        break;
      case _r:
        g == null && T(v, M, $, ne);
        break;
      case Se:
        Y(
          g,
          v,
          M,
          $,
          V,
          Z,
          ne,
          ee,
          X
        );
        break;
      default:
        se & 1 ? S(
          g,
          v,
          M,
          $,
          V,
          Z,
          ne,
          ee,
          X
        ) : se & 6 ? he(
          g,
          v,
          M,
          $,
          V,
          Z,
          ne,
          ee,
          X
        ) : (se & 64 || se & 128) && G.process(
          g,
          v,
          M,
          $,
          V,
          Z,
          ne,
          ee,
          X,
          mn
        );
    }
    ye != null && V && zi(ye, g && g.ref, Z, v || g, !v);
  }, C = (g, v, M, $) => {
    if (g == null)
      r(
        v.el = o(v.children),
        M,
        $
      );
    else {
      const V = v.el = g.el;
      v.children !== g.children && c(V, v.children);
    }
  }, L = (g, v, M, $) => {
    g == null ? r(
      v.el = a(v.children || ""),
      M,
      $
    ) : v.el = g.el;
  }, T = (g, v, M, $) => {
    [g.el, g.anchor] = h(
      g.children,
      v,
      M,
      $,
      g.el,
      g.anchor
    );
  }, b = ({ el: g, anchor: v }, M, $) => {
    let V;
    for (; g && g !== v; )
      V = m(g), r(g, M, $), g = V;
    r(v, M, $);
  }, _ = ({ el: g, anchor: v }) => {
    let M;
    for (; g && g !== v; )
      M = m(g), i(g), g = M;
    i(v);
  }, S = (g, v, M, $, V, Z, ne, ee, X) => {
    v.type === "svg" ? ne = "svg" : v.type === "math" && (ne = "mathml"), g == null ? F(
      v,
      M,
      $,
      V,
      Z,
      ne,
      ee,
      X
    ) : R(
      g,
      v,
      V,
      Z,
      ne,
      ee,
      X
    );
  }, F = (g, v, M, $, V, Z, ne, ee) => {
    let X, G;
    const { props: ye, shapeFlag: se, transition: pe, dirs: ke } = g;
    if (X = g.el = s(
      g.type,
      Z,
      ye && ye.is,
      ye
    ), se & 8 ? l(X, g.children) : se & 16 && Q(
      g.children,
      X,
      null,
      $,
      V,
      Xs(g, Z),
      ne,
      ee
    ), ke && vn(g, null, $, "created"), W(X, g, g.scopeId, ne, $), ye) {
      for (const Ve in ye)
        Ve !== "value" && !Hr(Ve) && u(X, Ve, null, ye[Ve], Z, $);
      "value" in ye && u(X, "value", null, ye.value, Z), (G = ye.onVnodeBeforeMount) && Rt(G, $, g);
    }
    ke && vn(g, null, $, "beforeMount");
    const Fe = zf(V, pe);
    Fe && pe.beforeEnter(X), r(X, v, M), ((G = ye && ye.onVnodeMounted) || Fe || ke) && lt(() => {
      G && Rt(G, $, g), Fe && pe.enter(X), ke && vn(g, null, $, "mounted");
    }, V);
  }, W = (g, v, M, $, V) => {
    if (M && p(g, M), $)
      for (let Z = 0; Z < $.length; Z++)
        p(g, $[Z]);
    if (V) {
      let Z = V.subTree;
      if (v === Z || ju(Z.type) && (Z.ssContent === v || Z.ssFallback === v)) {
        const ne = V.vnode;
        W(
          g,
          ne,
          ne.scopeId,
          ne.slotScopeIds,
          V.parent
        );
      }
    }
  }, Q = (g, v, M, $, V, Z, ne, ee, X = 0) => {
    for (let G = X; G < g.length; G++) {
      const ye = g[G] = ee ? Gn(g[G]) : jt(g[G]);
      E(
        null,
        ye,
        v,
        M,
        $,
        V,
        Z,
        ne,
        ee
      );
    }
  }, R = (g, v, M, $, V, Z, ne) => {
    const ee = v.el = g.el;
    let { patchFlag: X, dynamicChildren: G, dirs: ye } = v;
    X |= g.patchFlag & 16;
    const se = g.props || Ie, pe = v.props || Ie;
    let ke;
    if (M && dr(M, !1), (ke = pe.onVnodeBeforeUpdate) && Rt(ke, M, v, g), ye && vn(v, g, M, "beforeUpdate"), M && dr(M, !0), (se.innerHTML && pe.innerHTML == null || se.textContent && pe.textContent == null) && l(ee, ""), G ? j(
      g.dynamicChildren,
      G,
      ee,
      M,
      $,
      Xs(v, V),
      Z
    ) : ne || A(
      g,
      v,
      ee,
      null,
      M,
      $,
      Xs(v, V),
      Z,
      !1
    ), X > 0) {
      if (X & 16)
        ae(ee, se, pe, M, V);
      else if (X & 2 && se.class !== pe.class && u(ee, "class", null, pe.class, V), X & 4 && u(ee, "style", se.style, pe.style, V), X & 8) {
        const Fe = v.dynamicProps;
        for (let Ve = 0; Ve < Fe.length; Ve++) {
          const Ne = Fe[Ve], st = se[Ne], nt = pe[Ne];
          (nt !== st || Ne === "value") && u(ee, Ne, st, nt, V, M);
        }
      }
      X & 1 && g.children !== v.children && l(ee, v.children);
    } else !ne && G == null && ae(ee, se, pe, M, V);
    ((ke = pe.onVnodeUpdated) || ye) && lt(() => {
      ke && Rt(ke, M, v, g), ye && vn(v, g, M, "updated");
    }, $);
  }, j = (g, v, M, $, V, Z, ne) => {
    for (let ee = 0; ee < v.length; ee++) {
      const X = g[ee], G = v[ee], ye = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        X.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (X.type === Se || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !ln(X, G) || // - In the case of a component, it could contain anything.
        X.shapeFlag & 70) ? f(X.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          M
        )
      );
      E(
        X,
        G,
        ye,
        null,
        $,
        V,
        Z,
        ne,
        !0
      );
    }
  }, ae = (g, v, M, $, V) => {
    if (v !== M) {
      if (v !== Ie)
        for (const Z in v)
          !Hr(Z) && !(Z in M) && u(
            g,
            Z,
            v[Z],
            null,
            V,
            $
          );
      for (const Z in M) {
        if (Hr(Z)) continue;
        const ne = M[Z], ee = v[Z];
        ne !== ee && Z !== "value" && u(g, Z, ee, ne, V, $);
      }
      "value" in M && u(g, "value", v.value, M.value, V);
    }
  }, Y = (g, v, M, $, V, Z, ne, ee, X) => {
    const G = v.el = g ? g.el : o(""), ye = v.anchor = g ? g.anchor : o("");
    let { patchFlag: se, dynamicChildren: pe, slotScopeIds: ke } = v;
    ke && (ee = ee ? ee.concat(ke) : ke), g == null ? (r(G, M, $), r(ye, M, $), Q(
      // #10007
      // such fragment like `<></>` will be compiled into
      // a fragment which doesn't have a children.
      // In this case fallback to an empty array
      v.children || [],
      M,
      ye,
      V,
      Z,
      ne,
      ee,
      X
    )) : se > 0 && se & 64 && pe && // #2715 the previous fragment could've been a BAILed one as a result
    // of renderSlot() with no valid children
    g.dynamicChildren ? (j(
      g.dynamicChildren,
      pe,
      M,
      V,
      Z,
      ne,
      ee
    ), // #2080 if the stable fragment has a key, it's a <template v-for> that may
    //  get moved around. Make sure all root level vnodes inherit el.
    // #2134 or if it's a component root, it may also get moved around
    // as the component is being moved.
    (v.key != null || V && v === V.subTree) && ba(
      g,
      v,
      !0
      /* shallow */
    )) : A(
      g,
      v,
      M,
      ye,
      V,
      Z,
      ne,
      ee,
      X
    );
  }, he = (g, v, M, $, V, Z, ne, ee, X) => {
    v.slotScopeIds = ee, g == null ? v.shapeFlag & 512 ? V.ctx.activate(
      v,
      M,
      $,
      ne,
      X
    ) : we(
      v,
      M,
      $,
      V,
      Z,
      ne,
      X
    ) : be(g, v, X);
  }, we = (g, v, M, $, V, Z, ne) => {
    const ee = g.component = Jf(
      g,
      $,
      V
    );
    if ($i(g) && (ee.ctx.renderer = mn), Qf(ee, !1, ne), ee.asyncDep) {
      if (V && V.registerDep(ee, ie, ne), !g.el) {
        const X = ee.subTree = Re(it);
        L(null, X, v, M);
      }
    } else
      ie(
        ee,
        g,
        v,
        M,
        V,
        Z,
        ne
      );
  }, be = (g, v, M) => {
    const $ = v.component = g.component;
    if (M1(g, v, M))
      if ($.asyncDep && !$.asyncResolved) {
        Ee($, v, M);
        return;
      } else
        $.next = v, $.update();
    else
      v.el = g.el, $.vnode = v;
  }, ie = (g, v, M, $, V, Z, ne) => {
    const ee = () => {
      if (g.isMounted) {
        let { next: se, bu: pe, u: ke, parent: Fe, vnode: Ve } = g;
        {
          const pt = Pf(g);
          if (pt) {
            se && (se.el = Ve.el, Ee(g, se, ne)), pt.asyncDep.then(() => {
              g.isUnmounted || ee();
            });
            return;
          }
        }
        let Ne = se, st;
        dr(g, !1), se ? (se.el = Ve.el, Ee(g, se, ne)) : se = Ve, pe && Ur(pe), (st = se.props && se.props.onVnodeBeforeUpdate) && Rt(st, Fe, se, Ve), dr(g, !0);
        const nt = Eu(g), Tt = g.subTree;
        g.subTree = nt, E(
          Tt,
          nt,
          // parent may have changed if it's in a teleport
          f(Tt.el),
          // anchor may have changed if it's in a fragment
          Lt(Tt),
          g,
          V,
          Z
        ), se.el = nt.el, Ne === null && vs(g, nt.el), ke && lt(ke, V), (st = se.props && se.props.onVnodeUpdated) && lt(
          () => Rt(st, Fe, se, Ve),
          V
        );
      } else {
        let se;
        const { el: pe, props: ke } = v, { bm: Fe, m: Ve, parent: Ne, root: st, type: nt } = g, Tt = tr(v);
        if (dr(g, !1), Fe && Ur(Fe), !Tt && (se = ke && ke.onVnodeBeforeMount) && Rt(se, Ne, v), dr(g, !0), pe && jn) {
          const pt = () => {
            g.subTree = Eu(g), jn(
              pe,
              g.subTree,
              g,
              V,
              null
            );
          };
          Tt && nt.__asyncHydrate ? nt.__asyncHydrate(
            pe,
            g,
            pt
          ) : pt();
        } else {
          st.ce && st.ce._injectChildStyle(nt);
          const pt = g.subTree = Eu(g);
          E(
            null,
            pt,
            M,
            $,
            g,
            V,
            Z
          ), v.el = pt.el;
        }
        if (Ve && lt(Ve, V), !Tt && (se = ke && ke.onVnodeMounted)) {
          const pt = v;
          lt(
            () => Rt(se, Ne, pt),
            V
          );
        }
        (v.shapeFlag & 256 || Ne && tr(Ne.vnode) && Ne.vnode.shapeFlag & 256) && g.a && lt(g.a, V), g.isMounted = !0, v = M = $ = null;
      }
    };
    g.scope.on();
    const X = g.effect = new Ai(ee);
    g.scope.off();
    const G = g.update = X.run.bind(X), ye = g.job = X.runIfDirty.bind(X);
    ye.i = g, ye.id = g.uid, X.scheduler = () => ua(ye), dr(g, !0), G();
  }, Ee = (g, v, M) => {
    v.component = g;
    const $ = g.vnode.props;
    g.vnode = v, g.next = null, y1(g, v.props, $, M), k1(g, v.children, M), lr(), $a(g), cr();
  }, A = (g, v, M, $, V, Z, ne, ee, X = !1) => {
    const G = g && g.children, ye = g ? g.shapeFlag : 0, se = v.children, { patchFlag: pe, shapeFlag: ke } = v;
    if (pe > 0) {
      if (pe & 128) {
        te(
          G,
          se,
          M,
          $,
          V,
          Z,
          ne,
          ee,
          X
        );
        return;
      } else if (pe & 256) {
        B(
          G,
          se,
          M,
          $,
          V,
          Z,
          ne,
          ee,
          X
        );
        return;
      }
    }
    ke & 8 ? (ye & 16 && ut(G, V, Z), se !== G && l(M, se)) : ye & 16 ? ke & 16 ? te(
      G,
      se,
      M,
      $,
      V,
      Z,
      ne,
      ee,
      X
    ) : ut(G, V, Z, !0) : (ye & 8 && l(M, ""), ke & 16 && Q(
      se,
      M,
      $,
      V,
      Z,
      ne,
      ee,
      X
    ));
  }, B = (g, v, M, $, V, Z, ne, ee, X) => {
    g = g || Br, v = v || Br;
    const G = g.length, ye = v.length, se = Math.min(G, ye);
    let pe;
    for (pe = 0; pe < se; pe++) {
      const ke = v[pe] = X ? Gn(v[pe]) : jt(v[pe]);
      E(
        g[pe],
        ke,
        M,
        null,
        V,
        Z,
        ne,
        ee,
        X
      );
    }
    G > ye ? ut(
      g,
      V,
      Z,
      !0,
      !1,
      se
    ) : Q(
      v,
      M,
      $,
      V,
      Z,
      ne,
      ee,
      X,
      se
    );
  }, te = (g, v, M, $, V, Z, ne, ee, X) => {
    let G = 0;
    const ye = v.length;
    let se = g.length - 1, pe = ye - 1;
    for (; G <= se && G <= pe; ) {
      const ke = g[G], Fe = v[G] = X ? Gn(v[G]) : jt(v[G]);
      if (ln(ke, Fe))
        E(
          ke,
          Fe,
          M,
          null,
          V,
          Z,
          ne,
          ee,
          X
        );
      else
        break;
      G++;
    }
    for (; G <= se && G <= pe; ) {
      const ke = g[se], Fe = v[pe] = X ? Gn(v[pe]) : jt(v[pe]);
      if (ln(ke, Fe))
        E(
          ke,
          Fe,
          M,
          null,
          V,
          Z,
          ne,
          ee,
          X
        );
      else
        break;
      se--, pe--;
    }
    if (G > se) {
      if (G <= pe) {
        const ke = pe + 1, Fe = ke < ye ? v[ke].el : $;
        for (; G <= pe; )
          E(
            null,
            v[G] = X ? Gn(v[G]) : jt(v[G]),
            M,
            Fe,
            V,
            Z,
            ne,
            ee,
            X
          ), G++;
      }
    } else if (G > pe)
      for (; G <= se; )
        ge(g[G], V, Z, !0), G++;
    else {
      const ke = G, Fe = G, Ve = /* @__PURE__ */ new Map();
      for (G = Fe; G <= pe; G++) {
        const ot = v[G] = X ? Gn(v[G]) : jt(v[G]);
        ot.key != null && Ve.set(ot.key, G);
      }
      let Ne, st = 0;
      const nt = pe - Fe + 1;
      let Tt = !1, pt = 0;
      const rn = new Array(nt);
      for (G = 0; G < nt; G++) rn[G] = 0;
      for (G = ke; G <= se; G++) {
        const ot = g[G];
        if (st >= nt) {
          ge(ot, V, Z, !0);
          continue;
        }
        let zt;
        if (ot.key != null)
          zt = Ve.get(ot.key);
        else
          for (Ne = Fe; Ne <= pe; Ne++)
            if (rn[Ne - Fe] === 0 && ln(ot, v[Ne])) {
              zt = Ne;
              break;
            }
        zt === void 0 ? ge(ot, V, Z, !0) : (rn[zt - Fe] = G + 1, zt >= pt ? pt = zt : Tt = !0, E(
          ot,
          v[zt],
          M,
          null,
          V,
          Z,
          ne,
          ee,
          X
        ), st++);
      }
      const Bn = Tt ? w1(rn) : Br;
      for (Ne = Bn.length - 1, G = nt - 1; G >= 0; G--) {
        const ot = Fe + G, zt = v[ot], Sr = ot + 1 < ye ? v[ot + 1].el : $;
        rn[G] === 0 ? E(
          null,
          zt,
          M,
          Sr,
          V,
          Z,
          ne,
          ee,
          X
        ) : Tt && (Ne < 0 || G !== Bn[Ne] ? le(zt, M, Sr, 2) : Ne--);
      }
    }
  }, le = (g, v, M, $, V = null) => {
    const { el: Z, type: ne, transition: ee, children: X, shapeFlag: G } = g;
    if (G & 6) {
      le(g.component.subTree, v, M, $);
      return;
    }
    if (G & 128) {
      g.suspense.move(v, M, $);
      return;
    }
    if (G & 64) {
      ne.move(g, v, M, mn);
      return;
    }
    if (ne === Se) {
      r(Z, v, M);
      for (let se = 0; se < X.length; se++)
        le(X[se], v, M, $);
      r(g.anchor, v, M);
      return;
    }
    if (ne === _r) {
      b(g, v, M);
      return;
    }
    if ($ !== 2 && G & 1 && ee)
      if ($ === 0)
        ee.beforeEnter(Z), r(Z, v, M), lt(() => ee.enter(Z), V);
      else {
        const { leave: se, delayLeave: pe, afterLeave: ke } = ee, Fe = () => r(Z, v, M), Ve = () => {
          se(Z, () => {
            Fe(), ke && ke();
          });
        };
        pe ? pe(Z, Fe, Ve) : Ve();
      }
    else
      r(Z, v, M);
  }, ge = (g, v, M, $ = !1, V = !1) => {
    const {
      type: Z,
      props: ne,
      ref: ee,
      children: X,
      dynamicChildren: G,
      shapeFlag: ye,
      patchFlag: se,
      dirs: pe,
      cacheIndex: ke
    } = g;
    if (se === -2 && (V = !1), ee != null && zi(ee, null, M, g, !0), ke != null && (v.renderCache[ke] = void 0), ye & 256) {
      v.ctx.deactivate(g);
      return;
    }
    const Fe = ye & 1 && pe, Ve = !tr(g);
    let Ne;
    if (Ve && (Ne = ne && ne.onVnodeBeforeUnmount) && Rt(Ne, v, g), ye & 6)
      St(g.component, M, $);
    else {
      if (ye & 128) {
        g.suspense.unmount(M, $);
        return;
      }
      Fe && vn(g, null, v, "beforeUnmount"), ye & 64 ? g.type.remove(
        g,
        v,
        M,
        mn,
        $
      ) : G && // #5154
      // when v-once is used inside a block, setBlockTracking(-1) marks the
      // parent block with hasOnce: true
      // so that it doesn't take the fast path during unmount - otherwise
      // components nested in v-once are never unmounted.
      !G.hasOnce && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (Z !== Se || se > 0 && se & 64) ? ut(
        G,
        v,
        M,
        !1,
        !0
      ) : (Z === Se && se & 384 || !V && ye & 16) && ut(X, v, M), $ && We(g);
    }
    (Ve && (Ne = ne && ne.onVnodeUnmounted) || Fe) && lt(() => {
      Ne && Rt(Ne, v, g), Fe && vn(g, null, v, "unmounted");
    }, M);
  }, We = (g) => {
    const { type: v, el: M, anchor: $, transition: V } = g;
    if (v === Se) {
      tt(M, $);
      return;
    }
    if (v === _r) {
      _(g);
      return;
    }
    const Z = () => {
      i(M), V && !V.persisted && V.afterLeave && V.afterLeave();
    };
    if (g.shapeFlag & 1 && V && !V.persisted) {
      const { leave: ne, delayLeave: ee } = V, X = () => ne(M, Z);
      ee ? ee(g.el, Z, X) : X();
    } else
      Z();
  }, tt = (g, v) => {
    let M;
    for (; g !== v; )
      M = m(g), i(g), g = M;
    i(v);
  }, St = (g, v, M) => {
    const { bum: $, scope: V, job: Z, subTree: ne, um: ee, m: X, a: G } = g;
    Ru(X), Ru(G), $ && Ur($), V.stop(), Z && (Z.flags |= 8, ge(ne, g, v, M)), ee && lt(ee, v), lt(() => {
      g.isUnmounted = !0;
    }, v), v && v.pendingBranch && !v.isUnmounted && g.asyncDep && !g.asyncResolved && g.suspenseId === v.pendingId && (v.deps--, v.deps === 0 && v.resolve());
  }, ut = (g, v, M, $ = !1, V = !1, Z = 0) => {
    for (let ne = Z; ne < g.length; ne++)
      ge(g[ne], v, M, $, V);
  }, Lt = (g) => {
    if (g.shapeFlag & 6)
      return Lt(g.component.subTree);
    if (g.shapeFlag & 128)
      return g.suspense.next();
    const v = m(g.anchor || g.el), M = v && v[tf];
    return M ? m(M) : v;
  };
  let tn = !1;
  const nn = (g, v, M) => {
    g == null ? v._vnode && ge(v._vnode, null, null, !0) : E(
      v._vnode || null,
      g,
      v,
      null,
      null,
      null,
      M
    ), v._vnode = g, tn || (tn = !0, $a(), zu(), tn = !1);
  }, mn = {
    p: E,
    um: ge,
    m: le,
    r: We,
    mt: we,
    mc: Q,
    pc: A,
    pbc: j,
    n: Lt,
    o: e
  };
  let Rn, jn;
  return t && ([Rn, jn] = t(
    mn
  )), {
    render: nn,
    hydrate: Rn,
    createApp: m1(nn, Rn)
  };
}
function Xs({ type: e, props: t }, n) {
  return n === "svg" && e === "foreignObject" || n === "mathml" && e === "annotation-xml" && t && t.encoding && t.encoding.includes("html") ? void 0 : n;
}
function dr({ effect: e, job: t }, n) {
  n ? (e.flags |= 32, t.flags |= 4) : (e.flags &= -33, t.flags &= -5);
}
function zf(e, t) {
  return (!e || e && !e.pendingBranch) && t && !t.persisted;
}
function ba(e, t, n = !1) {
  const r = e.children, i = t.children;
  if (ce(r) && ce(i))
    for (let u = 0; u < r.length; u++) {
      const s = r[u];
      let o = i[u];
      o.shapeFlag & 1 && !o.dynamicChildren && ((o.patchFlag <= 0 || o.patchFlag === 32) && (o = i[u] = Gn(i[u]), o.el = s.el), !n && o.patchFlag !== -2 && ba(s, o)), o.type === nr && (o.el = s.el);
    }
}
function w1(e) {
  const t = e.slice(), n = [0];
  let r, i, u, s, o;
  const a = e.length;
  for (r = 0; r < a; r++) {
    const c = e[r];
    if (c !== 0) {
      if (i = n[n.length - 1], e[i] < c) {
        t[r] = i, n.push(r);
        continue;
      }
      for (u = 0, s = n.length - 1; u < s; )
        o = u + s >> 1, e[n[o]] < c ? u = o + 1 : s = o;
      c < e[n[u]] && (u > 0 && (t[r] = n[u - 1]), n[u] = r);
    }
  }
  for (u = n.length, s = n[u - 1]; u-- > 0; )
    n[u] = s, s = t[s];
  return n;
}
function Pf(e) {
  const t = e.subTree.component;
  if (t)
    return t.asyncDep && !t.asyncResolved ? t : Pf(t);
}
function Ru(e) {
  if (e)
    for (let t = 0; t < e.length; t++)
      e[t].flags |= 8;
}
const Rf = Symbol.for("v-scx"), jf = () => Si(Rf);
function E1(e, t) {
  return Gi(e, null, t);
}
function C1(e, t) {
  return Gi(
    e,
    null,
    { flush: "post" }
  );
}
function Bf(e, t) {
  return Gi(
    e,
    null,
    { flush: "sync" }
  );
}
function Wr(e, t, n) {
  return Gi(e, t, n);
}
function Gi(e, t, n = Ie) {
  const { immediate: r, deep: i, flush: u, once: s } = n, o = qe({}, n), a = t && r || !t && u !== "post";
  let c;
  if (Jr) {
    if (u === "sync") {
      const p = jf();
      c = p.__watcherHandles || (p.__watcherHandles = []);
    } else if (!a) {
      const p = () => {
      };
      return p.stop = Jt, p.resume = Jt, p.pause = Jt, p;
    }
  }
  const l = ft;
  o.call = (p, h, E) => Qt(p, l, h, E);
  let f = !1;
  u === "post" ? o.scheduler = (p) => {
    lt(p, l && l.suspense);
  } : u !== "sync" && (f = !0, o.scheduler = (p, h) => {
    h ? p() : ua(p);
  }), o.augmentJob = (p) => {
    t && (p.flags |= 4), f && (p.flags |= 2, l && (p.id = l.uid, p.i = l));
  };
  const m = dp(e, t, o);
  return Jr && (c ? c.push(m) : a && m()), m;
}
function S1(e, t, n) {
  const r = this.proxy, i = Ye(e) ? e.includes(".") ? Vf(r, e) : () => r[e] : e.bind(r, r);
  let u;
  ve(t) ? u = t : (u = t.handler, n = t);
  const s = vr(this), o = Gi(i, u.bind(r), n);
  return s(), o;
}
function Vf(e, t) {
  const n = t.split(".");
  return () => {
    let r = e;
    for (let i = 0; i < n.length && r; i++)
      r = r[n[i]];
    return r;
  };
}
function T1(e, t, n = Ie) {
  const r = en(), i = xt(t), u = Bt(t), s = Hf(e, i), o = $c((a, c) => {
    let l, f = Ie, m;
    return Bf(() => {
      const p = e[i];
      Ft(l, p) && (l = p, c());
    }), {
      get() {
        return a(), n.get ? n.get(l) : l;
      },
      set(p) {
        const h = n.set ? n.set(p) : p;
        if (!Ft(h, l) && !(f !== Ie && Ft(p, f)))
          return;
        const E = r.vnode.props;
        E && // check if parent has passed v-model
        (t in E || i in E || u in E) && (`onUpdate:${t}` in E || `onUpdate:${i}` in E || `onUpdate:${u}` in E) || (l = p, c()), r.emit(`update:${t}`, h), Ft(p, h) && Ft(p, f) && !Ft(h, m) && c(), f = p, m = h;
      }
    };
  });
  return o[Symbol.iterator] = () => {
    let a = 0;
    return {
      next() {
        return a < 2 ? { value: a++ ? s || Ie : o, done: !1 } : { done: !0 };
      }
    };
  }, o;
}
const Hf = (e, t) => t === "modelValue" || t === "model-value" ? e.modelModifiers : e[`${t}Modifiers`] || e[`${xt(t)}Modifiers`] || e[`${Bt(t)}Modifiers`];
function O1(e, t, ...n) {
  if (e.isUnmounted) return;
  const r = e.vnode.props || Ie;
  let i = n;
  const u = t.startsWith("update:"), s = u && Hf(r, t.slice(7));
  s && (s.trim && (i = n.map((l) => Ye(l) ? l.trim() : l)), s.number && (i = n.map(Fu)));
  let o, a = r[o = xi(t)] || // also try camelCase event handler (#2249)
  r[o = xi(xt(t))];
  !a && u && (a = r[o = xi(Bt(t))]), a && Qt(
    a,
    e,
    6,
    i
  );
  const c = r[o + "Once"];
  if (c) {
    if (!e.emitted)
      e.emitted = {};
    else if (e.emitted[o])
      return;
    e.emitted[o] = !0, Qt(
      c,
      e,
      6,
      i
    );
  }
}
function Uf(e, t, n = !1) {
  const r = t.emitsCache, i = r.get(e);
  if (i !== void 0)
    return i;
  const u = e.emits;
  let s = {}, o = !1;
  if (!ve(e)) {
    const a = (c) => {
      const l = Uf(c, t, !0);
      l && (o = !0, qe(s, l));
    };
    !n && t.mixins.length && t.mixins.forEach(a), e.extends && a(e.extends), e.mixins && e.mixins.forEach(a);
  }
  return !u && !o ? (Ue(e) && r.set(e, null), null) : (ce(u) ? u.forEach((a) => s[a] = null) : qe(s, u), Ue(e) && r.set(e, s), s);
}
function xs(e, t) {
  return !e || !qi(t) ? !1 : (t = t.slice(2).replace(/Once$/, ""), Be(e, t[0].toLowerCase() + t.slice(1)) || Be(e, Bt(t)) || Be(e, t));
}
function Eu(e) {
  const {
    type: t,
    vnode: n,
    proxy: r,
    withProxy: i,
    propsOptions: [u],
    slots: s,
    attrs: o,
    emit: a,
    render: c,
    renderCache: l,
    props: f,
    data: m,
    setupState: p,
    ctx: h,
    inheritAttrs: E
  } = e, C = Li(e);
  let L, T;
  try {
    if (n.shapeFlag & 4) {
      const _ = i || r, S = _;
      L = jt(
        c.call(
          S,
          _,
          l,
          f,
          p,
          m,
          h
        )
      ), T = o;
    } else {
      const _ = t;
      L = jt(
        _.length > 1 ? _(
          f,
          { attrs: o, slots: s, emit: a }
        ) : _(
          f,
          null
        )
      ), T = t.props ? o : A1(o);
    }
  } catch (_) {
    Ti.length = 0, Er(_, e, 1), L = Re(it);
  }
  let b = L;
  if (T && E !== !1) {
    const _ = Object.keys(T), { shapeFlag: S } = b;
    _.length && S & 7 && (u && _.some(Yo) && (T = F1(
      T,
      u
    )), b = Cn(b, T, !1, !0));
  }
  return n.dirs && (b = Cn(b, null, !1, !0), b.dirs = b.dirs ? b.dirs.concat(n.dirs) : n.dirs), n.transition && Nn(b, n.transition), L = b, Li(C), L;
}
function D1(e, t = !0) {
  let n;
  for (let r = 0; r < e.length; r++) {
    const i = e[r];
    if (In(i)) {
      if (i.type !== it || i.children === "v-if") {
        if (n)
          return;
        n = i;
      }
    } else
      return;
  }
  return n;
}
const A1 = (e) => {
  let t;
  for (const n in e)
    (n === "class" || n === "style" || qi(n)) && ((t || (t = {}))[n] = e[n]);
  return t;
}, F1 = (e, t) => {
  const n = {};
  for (const r in e)
    (!Yo(r) || !(r.slice(9) in t)) && (n[r] = e[r]);
  return n;
};
function M1(e, t, n) {
  const { props: r, children: i, component: u } = e, { props: s, children: o, patchFlag: a } = t, c = u.emitsOptions;
  if (t.dirs || t.transition)
    return !0;
  if (n && a >= 0) {
    if (a & 1024)
      return !0;
    if (a & 16)
      return r ? il(r, s, c) : !!s;
    if (a & 8) {
      const l = t.dynamicProps;
      for (let f = 0; f < l.length; f++) {
        const m = l[f];
        if (s[m] !== r[m] && !xs(c, m))
          return !0;
      }
    }
  } else
    return (i || o) && (!o || !o.$stable) ? !0 : r === s ? !1 : r ? s ? il(r, s, c) : !0 : !!s;
  return !1;
}
function il(e, t, n) {
  const r = Object.keys(t);
  if (r.length !== Object.keys(e).length)
    return !0;
  for (let i = 0; i < r.length; i++) {
    const u = r[i];
    if (t[u] !== e[u] && !xs(n, u))
      return !0;
  }
  return !1;
}
function vs({ vnode: e, parent: t }, n) {
  for (; t; ) {
    const r = t.subTree;
    if (r.suspense && r.suspense.activeBranch === e && (r.el = e.el), r === e)
      (e = t.vnode).el = n, t = t.parent;
    else
      break;
  }
}
const ju = (e) => e.__isSuspense;
let Do = 0;
const N1 = {
  name: "Suspense",
  // In order to make Suspense tree-shakable, we need to avoid importing it
  // directly in the renderer. The renderer checks for the __isSuspense flag
  // on a vnode's type and calls the `process` method, passing in renderer
  // internals.
  __isSuspense: !0,
  process(e, t, n, r, i, u, s, o, a, c) {
    if (e == null)
      L1(
        t,
        n,
        r,
        i,
        u,
        s,
        o,
        a,
        c
      );
    else {
      if (u && u.deps > 0 && !e.suspense.isInFallback) {
        t.suspense = e.suspense, t.suspense.vnode = t, t.el = e.el;
        return;
      }
      z1(
        e,
        t,
        n,
        r,
        i,
        s,
        o,
        a,
        c
      );
    }
  },
  hydrate: P1,
  normalize: R1
}, I1 = N1;
function Ri(e, t) {
  const n = e.props && e.props[t];
  ve(n) && n();
}
function L1(e, t, n, r, i, u, s, o, a) {
  const {
    p: c,
    o: { createElement: l }
  } = a, f = l("div"), m = e.suspense = qf(
    e,
    i,
    r,
    t,
    f,
    n,
    u,
    s,
    o,
    a
  );
  c(
    null,
    m.pendingBranch = e.ssContent,
    f,
    null,
    r,
    m,
    u,
    s
  ), m.deps > 0 ? (Ri(e, "onPending"), Ri(e, "onFallback"), c(
    null,
    e.ssFallback,
    t,
    n,
    r,
    null,
    // fallback tree will not have suspense context
    u,
    s
  ), $r(m, e.ssFallback)) : m.resolve(!1, !0);
}
function z1(e, t, n, r, i, u, s, o, { p: a, um: c, o: { createElement: l } }) {
  const f = t.suspense = e.suspense;
  f.vnode = t, t.el = e.el;
  const m = t.ssContent, p = t.ssFallback, { activeBranch: h, pendingBranch: E, isInFallback: C, isHydrating: L } = f;
  if (E)
    f.pendingBranch = m, ln(m, E) ? (a(
      E,
      m,
      f.hiddenContainer,
      null,
      i,
      f,
      u,
      s,
      o
    ), f.deps <= 0 ? f.resolve() : C && (L || (a(
      h,
      p,
      n,
      r,
      i,
      null,
      // fallback tree will not have suspense context
      u,
      s,
      o
    ), $r(f, p)))) : (f.pendingId = Do++, L ? (f.isHydrating = !1, f.activeBranch = E) : c(E, i, f), f.deps = 0, f.effects.length = 0, f.hiddenContainer = l("div"), C ? (a(
      null,
      m,
      f.hiddenContainer,
      null,
      i,
      f,
      u,
      s,
      o
    ), f.deps <= 0 ? f.resolve() : (a(
      h,
      p,
      n,
      r,
      i,
      null,
      // fallback tree will not have suspense context
      u,
      s,
      o
    ), $r(f, p))) : h && ln(m, h) ? (a(
      h,
      m,
      n,
      r,
      i,
      f,
      u,
      s,
      o
    ), f.resolve(!0)) : (a(
      null,
      m,
      f.hiddenContainer,
      null,
      i,
      f,
      u,
      s,
      o
    ), f.deps <= 0 && f.resolve()));
  else if (h && ln(m, h))
    a(
      h,
      m,
      n,
      r,
      i,
      f,
      u,
      s,
      o
    ), $r(f, m);
  else if (Ri(t, "onPending"), f.pendingBranch = m, m.shapeFlag & 512 ? f.pendingId = m.component.suspenseId : f.pendingId = Do++, a(
    null,
    m,
    f.hiddenContainer,
    null,
    i,
    f,
    u,
    s,
    o
  ), f.deps <= 0)
    f.resolve();
  else {
    const { timeout: T, pendingId: b } = f;
    T > 0 ? setTimeout(() => {
      f.pendingId === b && f.fallback(p);
    }, T) : T === 0 && f.fallback(p);
  }
}
function qf(e, t, n, r, i, u, s, o, a, c, l = !1) {
  const {
    p: f,
    m,
    um: p,
    n: h,
    o: { parentNode: E, remove: C }
  } = c;
  let L;
  const T = j1(e);
  T && t && t.pendingBranch && (L = t.pendingId, t.deps++);
  const b = e.props ? Mu(e.props.timeout) : void 0, _ = u, S = {
    vnode: e,
    parent: t,
    parentComponent: n,
    namespace: s,
    container: r,
    hiddenContainer: i,
    deps: 0,
    pendingId: Do++,
    timeout: typeof b == "number" ? b : -1,
    activeBranch: null,
    pendingBranch: null,
    isInFallback: !l,
    isHydrating: l,
    isUnmounted: !1,
    effects: [],
    resolve(F = !1, W = !1) {
      const {
        vnode: Q,
        activeBranch: R,
        pendingBranch: j,
        pendingId: ae,
        effects: Y,
        parentComponent: he,
        container: we
      } = S;
      let be = !1;
      S.isHydrating ? S.isHydrating = !1 : F || (be = R && j.transition && j.transition.mode === "out-in", be && (R.transition.afterLeave = () => {
        ae === S.pendingId && (m(
          j,
          we,
          u === _ ? h(R) : u,
          0
        ), Ni(Y));
      }), R && (E(R.el) === we && (u = h(R)), p(R, he, S, !0)), be || m(j, we, u, 0)), $r(S, j), S.pendingBranch = null, S.isInFallback = !1;
      let ie = S.parent, Ee = !1;
      for (; ie; ) {
        if (ie.pendingBranch) {
          ie.effects.push(...Y), Ee = !0;
          break;
        }
        ie = ie.parent;
      }
      !Ee && !be && Ni(Y), S.effects = [], T && t && t.pendingBranch && L === t.pendingId && (t.deps--, t.deps === 0 && !W && t.resolve()), Ri(Q, "onResolve");
    },
    fallback(F) {
      if (!S.pendingBranch)
        return;
      const { vnode: W, activeBranch: Q, parentComponent: R, container: j, namespace: ae } = S;
      Ri(W, "onFallback");
      const Y = h(Q), he = () => {
        S.isInFallback && (f(
          null,
          F,
          j,
          Y,
          R,
          null,
          // fallback tree will not have suspense context
          ae,
          o,
          a
        ), $r(S, F));
      }, we = F.transition && F.transition.mode === "out-in";
      we && (Q.transition.afterLeave = he), S.isInFallback = !0, p(
        Q,
        R,
        null,
        // no suspense so unmount hooks fire now
        !0
        // shouldRemove
      ), we || he();
    },
    move(F, W, Q) {
      S.activeBranch && m(S.activeBranch, F, W, Q), S.container = F;
    },
    next() {
      return S.activeBranch && h(S.activeBranch);
    },
    registerDep(F, W, Q) {
      const R = !!S.pendingBranch;
      R && S.deps++;
      const j = F.vnode.el;
      F.asyncDep.catch((ae) => {
        Er(ae, F, 0);
      }).then((ae) => {
        if (F.isUnmounted || S.isUnmounted || S.pendingId !== F.suspenseId)
          return;
        F.asyncResolved = !0;
        const { vnode: Y } = F;
        No(F, ae, !1), j && (Y.el = j);
        const he = !j && F.subTree.el;
        W(
          F,
          Y,
          // component may have been moved before resolve.
          // if this is not a hydration, instance.subTree will be the comment
          // placeholder.
          E(j || F.subTree.el),
          // anchor will not be used if this is hydration, so only need to
          // consider the comment placeholder case.
          j ? null : h(F.subTree),
          S,
          s,
          Q
        ), he && C(he), vs(F, Y.el), R && --S.deps === 0 && S.resolve();
      });
    },
    unmount(F, W) {
      S.isUnmounted = !0, S.activeBranch && p(
        S.activeBranch,
        n,
        F,
        W
      ), S.pendingBranch && p(
        S.pendingBranch,
        n,
        F,
        W
      );
    }
  };
  return S;
}
function P1(e, t, n, r, i, u, s, o, a) {
  const c = t.suspense = qf(
    t,
    r,
    n,
    e.parentNode,
    // eslint-disable-next-line no-restricted-globals
    document.createElement("div"),
    null,
    i,
    u,
    s,
    o,
    !0
  ), l = a(
    e,
    c.pendingBranch = t.ssContent,
    n,
    c,
    u,
    s
  );
  return c.deps === 0 && c.resolve(!1, !0), l;
}
function R1(e) {
  const { shapeFlag: t, children: n } = e, r = t & 32;
  e.ssContent = ul(
    r ? n.default : n
  ), e.ssFallback = r ? ul(n.fallback) : Re(it);
}
function ul(e) {
  let t;
  if (ve(e)) {
    const n = xr && e._c;
    n && (e._d = !1, N()), e = e(), n && (e._d = !0, t = Ct, $f());
  }
  return ce(e) && (e = D1(e)), e = jt(e), t && !e.dynamicChildren && (e.dynamicChildren = t.filter((n) => n !== e)), e;
}
function Wf(e, t) {
  t && t.pendingBranch ? ce(e) ? t.effects.push(...e) : t.effects.push(e) : Ni(e);
}
function $r(e, t) {
  e.activeBranch = t;
  const { vnode: n, parentComponent: r } = e;
  let i = t.el;
  for (; !i && t.component; )
    t = t.component.subTree, i = t.el;
  n.el = i, r && r.subTree === n && (r.vnode.el = i, vs(r, i));
}
function j1(e) {
  const t = e.props && e.props.suspensible;
  return t != null && t !== !1;
}
const Se = Symbol.for("v-fgt"), nr = Symbol.for("v-txt"), it = Symbol.for("v-cmt"), _r = Symbol.for("v-stc"), Ti = [];
let Ct = null;
function N(e = !1) {
  Ti.push(Ct = e ? null : []);
}
function $f() {
  Ti.pop(), Ct = Ti[Ti.length - 1] || null;
}
let xr = 1;
function Ao(e, t = !1) {
  xr += e, e < 0 && Ct && t && (Ct.hasOnce = !0);
}
function Zf(e) {
  return e.dynamicChildren = xr > 0 ? Ct || Br : null, $f(), xr > 0 && Ct && Ct.push(e), e;
}
function H(e, t, n, r, i, u) {
  return Zf(
    J(
      e,
      t,
      n,
      r,
      i,
      u,
      !0
    )
  );
}
function ct(e, t, n, r, i) {
  return Zf(
    Re(
      e,
      t,
      n,
      r,
      i,
      !0
    )
  );
}
function In(e) {
  return e ? e.__v_isVNode === !0 : !1;
}
function ln(e, t) {
  return e.type === t.type && e.key === t.key;
}
function B1(e) {
}
const Gf = ({ key: e }) => e ?? null, Cu = ({
  ref: e,
  ref_key: t,
  ref_for: n
}) => (typeof e == "number" && (e = "" + e), e != null ? Ye(e) || ht(e) || ve(e) ? { i: dt, r: e, k: t, f: !!n } : e : null);
function J(e, t = null, n = null, r = 0, i = null, u = e === Se ? 0 : 1, s = !1, o = !1) {
  const a = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: e,
    props: t,
    key: t && Gf(t),
    ref: t && Cu(t),
    scopeId: ps,
    slotScopeIds: null,
    children: n,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetStart: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: u,
    patchFlag: r,
    dynamicProps: i,
    dynamicChildren: null,
    appContext: null,
    ctx: dt
  };
  return o ? (ga(a, n), u & 128 && e.normalize(a)) : n && (a.shapeFlag |= Ye(n) ? 8 : 16), xr > 0 && // avoid a block node from tracking itself
  !s && // has current parent block
  Ct && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (a.patchFlag > 0 || u & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  a.patchFlag !== 32 && Ct.push(a), a;
}
const Re = V1;
function V1(e, t = null, n = null, r = 0, i = null, u = !1) {
  if ((!e || e === yf) && (e = it), In(e)) {
    const o = Cn(
      e,
      t,
      !0
      /* mergeRef: true */
    );
    return n && ga(o, n), xr > 0 && !u && Ct && (o.shapeFlag & 6 ? Ct[Ct.indexOf(e)] = o : Ct.push(o)), o.patchFlag = -2, o;
  }
  if (Y1(e) && (e = e.__vccOpts), t) {
    t = Yf(t);
    let { class: o, style: a } = t;
    o && !Ye(o) && (t.class = It(o)), Ue(a) && (fs(a) && !ce(a) && (a = qe({}, a)), t.style = yt(a));
  }
  const s = Ye(e) ? 1 : ju(e) ? 128 : nf(e) ? 64 : Ue(e) ? 4 : ve(e) ? 2 : 0;
  return J(
    e,
    t,
    n,
    r,
    i,
    s,
    u,
    !0
  );
}
function Yf(e) {
  return e ? fs(e) || Sf(e) ? qe({}, e) : e : null;
}
function Cn(e, t, n = !1, r = !1) {
  const { props: i, ref: u, patchFlag: s, children: o, transition: a } = e, c = t ? Kf(i || {}, t) : i, l = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: e.type,
    props: c,
    key: c && Gf(c),
    ref: t && t.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      n && u ? ce(u) ? u.concat(Cu(t)) : [u, Cu(t)] : Cu(t)
    ) : u,
    scopeId: e.scopeId,
    slotScopeIds: e.slotScopeIds,
    children: o,
    target: e.target,
    targetStart: e.targetStart,
    targetAnchor: e.targetAnchor,
    staticCount: e.staticCount,
    shapeFlag: e.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: t && e.type !== Se ? s === -1 ? 16 : s | 16 : s,
    dynamicProps: e.dynamicProps,
    dynamicChildren: e.dynamicChildren,
    appContext: e.appContext,
    dirs: e.dirs,
    transition: a,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: e.component,
    suspense: e.suspense,
    ssContent: e.ssContent && Cn(e.ssContent),
    ssFallback: e.ssFallback && Cn(e.ssFallback),
    el: e.el,
    anchor: e.anchor,
    ctx: e.ctx,
    ce: e.ce
  };
  return a && r && Nn(
    l,
    a.clone(l)
  ), l;
}
function En(e = " ", t = 0) {
  return Re(nr, null, e, t);
}
function H1(e, t) {
  const n = Re(_r, null, e);
  return n.staticCount = t, n;
}
function Me(e = "", t = !1) {
  return t ? (N(), ct(it, null, e)) : Re(it, null, e);
}
function jt(e) {
  return e == null || typeof e == "boolean" ? Re(it) : ce(e) ? Re(
    Se,
    null,
    // #3666, avoid reference pollution when reusing vnode
    e.slice()
  ) : In(e) ? Gn(e) : Re(nr, null, String(e));
}
function Gn(e) {
  return e.el === null && e.patchFlag !== -1 || e.memo ? e : Cn(e);
}
function ga(e, t) {
  let n = 0;
  const { shapeFlag: r } = e;
  if (t == null)
    t = null;
  else if (ce(t))
    n = 16;
  else if (typeof t == "object")
    if (r & 65) {
      const i = t.default;
      i && (i._c && (i._d = !1), ga(e, i()), i._c && (i._d = !0));
      return;
    } else {
      n = 32;
      const i = t._;
      !i && !Sf(t) ? t._ctx = dt : i === 3 && dt && (dt.slots._ === 1 ? t._ = 1 : (t._ = 2, e.patchFlag |= 1024));
    }
  else ve(t) ? (t = { default: t, _ctx: dt }, n = 32) : (t = String(t), r & 64 ? (n = 16, t = [En(t)]) : n = 8);
  e.children = t, e.shapeFlag |= n;
}
function Kf(...e) {
  const t = {};
  for (let n = 0; n < e.length; n++) {
    const r = e[n];
    for (const i in r)
      if (i === "class")
        t.class !== r.class && (t.class = It([t.class, r.class]));
      else if (i === "style")
        t.style = yt([t.style, r.style]);
      else if (qi(i)) {
        const u = t[i], s = r[i];
        s && u !== s && !(ce(u) && u.includes(s)) && (t[i] = u ? [].concat(u, s) : s);
      } else i !== "" && (t[i] = r[i]);
  }
  return t;
}
function Rt(e, t, n, r = null) {
  Qt(e, t, 7, [
    n,
    r
  ]);
}
const U1 = kf();
let q1 = 0;
function Jf(e, t, n) {
  const r = e.type, i = (t ? t.appContext : e.appContext) || U1, u = {
    uid: q1++,
    vnode: e,
    type: r,
    parent: t,
    appContext: i,
    root: null,
    // to be immediately set
    next: null,
    subTree: null,
    // will be set synchronously right after creation
    effect: null,
    update: null,
    // will be set synchronously right after creation
    job: null,
    scope: new Qo(
      !0
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: t ? t.provides : Object.create(i.provides),
    ids: t ? t.ids : ["", 0, 0],
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: Of(r, i),
    emitsOptions: Uf(r, i),
    // emit
    emit: null,
    // to be set immediately
    emitted: null,
    // props default value
    propsDefaults: Ie,
    // inheritAttrs
    inheritAttrs: r.inheritAttrs,
    // state
    ctx: Ie,
    data: Ie,
    props: Ie,
    attrs: Ie,
    slots: Ie,
    refs: Ie,
    setupState: Ie,
    setupContext: null,
    // suspense related
    suspense: n,
    suspenseId: n ? n.pendingId : 0,
    asyncDep: null,
    asyncResolved: !1,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: !1,
    isUnmounted: !1,
    isDeactivated: !1,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  return u.ctx = { _: u }, u.root = t ? t.root : u, u.emit = O1.bind(null, u), e.ce && e.ce(u), u;
}
let ft = null;
const en = () => ft || dt;
let Bu, Fo;
{
  const e = is(), t = (n, r) => {
    let i;
    return (i = e[n]) || (i = e[n] = []), i.push(r), (u) => {
      i.length > 1 ? i.forEach((s) => s(u)) : i[0](u);
    };
  };
  Bu = t(
    "__VUE_INSTANCE_SETTERS__",
    (n) => ft = n
  ), Fo = t(
    "__VUE_SSR_SETTERS__",
    (n) => Jr = n
  );
}
const vr = (e) => {
  const t = ft;
  return Bu(e), e.scope.on(), () => {
    e.scope.off(), Bu(t);
  };
}, Mo = () => {
  ft && ft.scope.off(), Bu(null);
};
function Xf(e) {
  return e.vnode.shapeFlag & 4;
}
let Jr = !1;
function Qf(e, t = !1, n = !1) {
  t && Fo(t);
  const { props: r, children: i } = e.vnode, u = Xf(e);
  g1(e, r, u, t), v1(e, i, n);
  const s = u ? W1(e, t) : void 0;
  return t && Fo(!1), s;
}
function W1(e, t) {
  const n = e.type;
  e.accessCache = /* @__PURE__ */ Object.create(null), e.proxy = new Proxy(e.ctx, Co);
  const { setup: r } = n;
  if (r) {
    lr();
    const i = e.setupContext = r.length > 1 ? t0(e) : null, u = vr(e), s = ui(
      r,
      e,
      0,
      [
        e.props,
        i
      ]
    ), o = Jo(s);
    if (cr(), u(), (o || e.sp) && !tr(e) && la(e), o) {
      if (s.then(Mo, Mo), t)
        return s.then((a) => {
          No(e, a, t);
        }).catch((a) => {
          Er(a, e, 0);
        });
      e.asyncDep = s;
    } else
      No(e, s, t);
  } else
    e0(e, t);
}
function No(e, t, n) {
  ve(t) ? e.type.__ssrInlineRender ? e.ssrRender = t : e.render = t : Ue(t) && (e.setupState = ia(t)), e0(e, n);
}
let Vu, Io;
function $1(e) {
  Vu = e, Io = (t) => {
    t.render._rc && (t.withProxy = new Proxy(t.ctx, Yp));
  };
}
const Z1 = () => !Vu;
function e0(e, t, n) {
  const r = e.type;
  if (!e.render) {
    if (!t && Vu && !r.render) {
      const i = r.template || pa(e).template;
      if (i) {
        const { isCustomElement: u, compilerOptions: s } = e.appContext.config, { delimiters: o, compilerOptions: a } = r, c = qe(
          qe(
            {
              isCustomElement: u,
              delimiters: o
            },
            s
          ),
          a
        );
        r.render = Vu(i, c);
      }
    }
    e.render = r.render || Jt, Io && Io(e);
  }
  {
    const i = vr(e);
    lr();
    try {
      l1(e);
    } finally {
      cr(), i();
    }
  }
}
const G1 = {
  get(e, t) {
    return kt(e, "get", ""), e[t];
  }
};
function t0(e) {
  const t = (n) => {
    e.exposed = n || {};
  };
  return {
    attrs: new Proxy(e.attrs, G1),
    slots: e.slots,
    emit: e.emit,
    expose: t
  };
}
function Yi(e) {
  return e.exposed ? e.exposeProxy || (e.exposeProxy = new Proxy(ia(Uc(e.exposed)), {
    get(t, n) {
      if (n in t)
        return t[n];
      if (n in Ci)
        return Ci[n](e);
    },
    has(t, n) {
      return n in t || n in Ci;
    }
  })) : e.proxy;
}
function Lo(e, t = !0) {
  return ve(e) ? e.displayName || e.name : e.name || t && e.__name;
}
function Y1(e) {
  return ve(e) && "__vccOpts" in e;
}
const Hu = (e, t) => ap(e, t, Jr);
function n0(e, t, n) {
  const r = arguments.length;
  return r === 2 ? Ue(t) && !ce(t) ? In(t) ? Re(e, null, [t]) : Re(e, t) : Re(e, null, t) : (r > 3 ? n = Array.prototype.slice.call(arguments, 2) : r === 3 && In(n) && (n = [n]), Re(e, t, n));
}
function K1() {
}
function J1(e, t, n, r) {
  const i = n[r];
  if (i && r0(i, e))
    return i;
  const u = t();
  return u.memo = e.slice(), u.cacheIndex = r, n[r] = u;
}
function r0(e, t) {
  const n = e.memo;
  if (n.length != t.length)
    return !1;
  for (let r = 0; r < n.length; r++)
    if (Ft(n[r], t[r]))
      return !1;
  return xr > 0 && Ct && Ct.push(e), !0;
}
const i0 = "3.5.13", X1 = Jt, Q1 = gp, em = zr, tm = Qc, nm = {
  createComponentInstance: Jf,
  setupComponent: Qf,
  renderComponentRoot: Eu,
  setCurrentRenderingInstance: Li,
  isVNode: In,
  normalizeVNode: jt,
  getComponentPublicInstance: Yi,
  ensureValidVNode: ha,
  pushWarningContext: hp,
  popWarningContext: pp
}, rm = nm, im = null, um = null, sm = null;
/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
let zo;
const sl = typeof window < "u" && window.trustedTypes;
if (sl)
  try {
    zo = /* @__PURE__ */ sl.createPolicy("vue", {
      createHTML: (e) => e
    });
  } catch {
  }
const u0 = zo ? (e) => zo.createHTML(e) : (e) => e, om = "http://www.w3.org/2000/svg", am = "http://www.w3.org/1998/Math/MathML", Dn = typeof document < "u" ? document : null, ol = Dn && /* @__PURE__ */ Dn.createElement("template"), lm = {
  insert: (e, t, n) => {
    t.insertBefore(e, n || null);
  },
  remove: (e) => {
    const t = e.parentNode;
    t && t.removeChild(e);
  },
  createElement: (e, t, n, r) => {
    const i = t === "svg" ? Dn.createElementNS(om, e) : t === "mathml" ? Dn.createElementNS(am, e) : n ? Dn.createElement(e, { is: n }) : Dn.createElement(e);
    return e === "select" && r && r.multiple != null && i.setAttribute("multiple", r.multiple), i;
  },
  createText: (e) => Dn.createTextNode(e),
  createComment: (e) => Dn.createComment(e),
  setText: (e, t) => {
    e.nodeValue = t;
  },
  setElementText: (e, t) => {
    e.textContent = t;
  },
  parentNode: (e) => e.parentNode,
  nextSibling: (e) => e.nextSibling,
  querySelector: (e) => Dn.querySelector(e),
  setScopeId(e, t) {
    e.setAttribute(t, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(e, t, n, r, i, u) {
    const s = n ? n.previousSibling : t.lastChild;
    if (i && (i === u || i.nextSibling))
      for (; t.insertBefore(i.cloneNode(!0), n), !(i === u || !(i = i.nextSibling)); )
        ;
    else {
      ol.innerHTML = u0(
        r === "svg" ? `<svg>${e}</svg>` : r === "mathml" ? `<math>${e}</math>` : e
      );
      const o = ol.content;
      if (r === "svg" || r === "mathml") {
        const a = o.firstChild;
        for (; a.firstChild; )
          o.appendChild(a.firstChild);
        o.removeChild(a);
      }
      t.insertBefore(o, n);
    }
    return [
      // first
      s ? s.nextSibling : t.firstChild,
      // last
      n ? n.previousSibling : t.lastChild
    ];
  }
}, Vn = "transition", hi = "animation", Xr = Symbol("_vtc"), s0 = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: !0
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
}, o0 = /* @__PURE__ */ qe(
  {},
  oa,
  s0
), cm = (e) => (e.displayName = "Transition", e.props = o0, e), fm = /* @__PURE__ */ cm(
  (e, { slots: t }) => n0(af, a0(e), t)
), hr = (e, t = []) => {
  ce(e) ? e.forEach((n) => n(...t)) : e && e(...t);
}, al = (e) => e ? ce(e) ? e.some((t) => t.length > 1) : e.length > 1 : !1;
function a0(e) {
  const t = {};
  for (const Y in e)
    Y in s0 || (t[Y] = e[Y]);
  if (e.css === !1)
    return t;
  const {
    name: n = "v",
    type: r,
    duration: i,
    enterFromClass: u = `${n}-enter-from`,
    enterActiveClass: s = `${n}-enter-active`,
    enterToClass: o = `${n}-enter-to`,
    appearFromClass: a = u,
    appearActiveClass: c = s,
    appearToClass: l = o,
    leaveFromClass: f = `${n}-leave-from`,
    leaveActiveClass: m = `${n}-leave-active`,
    leaveToClass: p = `${n}-leave-to`
  } = e, h = dm(i), E = h && h[0], C = h && h[1], {
    onBeforeEnter: L,
    onEnter: T,
    onEnterCancelled: b,
    onLeave: _,
    onLeaveCancelled: S,
    onBeforeAppear: F = L,
    onAppear: W = T,
    onAppearCancelled: Q = b
  } = t, R = (Y, he, we, be) => {
    Y._enterCancelled = be, qn(Y, he ? l : o), qn(Y, he ? c : s), we && we();
  }, j = (Y, he) => {
    Y._isLeaving = !1, qn(Y, f), qn(Y, p), qn(Y, m), he && he();
  }, ae = (Y) => (he, we) => {
    const be = Y ? W : T, ie = () => R(he, Y, we);
    hr(be, [he, ie]), ll(() => {
      qn(he, Y ? a : u), _n(he, Y ? l : o), al(be) || cl(he, r, E, ie);
    });
  };
  return qe(t, {
    onBeforeEnter(Y) {
      hr(L, [Y]), _n(Y, u), _n(Y, s);
    },
    onBeforeAppear(Y) {
      hr(F, [Y]), _n(Y, a), _n(Y, c);
    },
    onEnter: ae(!1),
    onAppear: ae(!0),
    onLeave(Y, he) {
      Y._isLeaving = !0;
      const we = () => j(Y, he);
      _n(Y, f), Y._enterCancelled ? (_n(Y, m), Po()) : (Po(), _n(Y, m)), ll(() => {
        Y._isLeaving && (qn(Y, f), _n(Y, p), al(_) || cl(Y, r, C, we));
      }), hr(_, [Y, we]);
    },
    onEnterCancelled(Y) {
      R(Y, !1, void 0, !0), hr(b, [Y]);
    },
    onAppearCancelled(Y) {
      R(Y, !0, void 0, !0), hr(Q, [Y]);
    },
    onLeaveCancelled(Y) {
      j(Y), hr(S, [Y]);
    }
  });
}
function dm(e) {
  if (e == null)
    return null;
  if (Ue(e))
    return [Qs(e.enter), Qs(e.leave)];
  {
    const t = Qs(e);
    return [t, t];
  }
}
function Qs(e) {
  return Mu(e);
}
function _n(e, t) {
  t.split(/\s+/).forEach((n) => n && e.classList.add(n)), (e[Xr] || (e[Xr] = /* @__PURE__ */ new Set())).add(t);
}
function qn(e, t) {
  t.split(/\s+/).forEach((r) => r && e.classList.remove(r));
  const n = e[Xr];
  n && (n.delete(t), n.size || (e[Xr] = void 0));
}
function ll(e) {
  requestAnimationFrame(() => {
    requestAnimationFrame(e);
  });
}
let hm = 0;
function cl(e, t, n, r) {
  const i = e._endId = ++hm, u = () => {
    i === e._endId && r();
  };
  if (n != null)
    return setTimeout(u, n);
  const { type: s, timeout: o, propCount: a } = l0(e, t);
  if (!s)
    return r();
  const c = s + "end";
  let l = 0;
  const f = () => {
    e.removeEventListener(c, m), u();
  }, m = (p) => {
    p.target === e && ++l >= a && f();
  };
  setTimeout(() => {
    l < a && f();
  }, o + 1), e.addEventListener(c, m);
}
function l0(e, t) {
  const n = window.getComputedStyle(e), r = (h) => (n[h] || "").split(", "), i = r(`${Vn}Delay`), u = r(`${Vn}Duration`), s = fl(i, u), o = r(`${hi}Delay`), a = r(`${hi}Duration`), c = fl(o, a);
  let l = null, f = 0, m = 0;
  t === Vn ? s > 0 && (l = Vn, f = s, m = u.length) : t === hi ? c > 0 && (l = hi, f = c, m = a.length) : (f = Math.max(s, c), l = f > 0 ? s > c ? Vn : hi : null, m = l ? l === Vn ? u.length : a.length : 0);
  const p = l === Vn && /\b(transform|all)(,|$)/.test(
    r(`${Vn}Property`).toString()
  );
  return {
    type: l,
    timeout: f,
    propCount: m,
    hasTransform: p
  };
}
function fl(e, t) {
  for (; e.length < t.length; )
    e = e.concat(e);
  return Math.max(...t.map((n, r) => dl(n) + dl(e[r])));
}
function dl(e) {
  return e === "auto" ? 0 : Number(e.slice(0, -1).replace(",", ".")) * 1e3;
}
function Po() {
  return document.body.offsetHeight;
}
function pm(e, t, n) {
  const r = e[Xr];
  r && (t = (t ? [t, ...r] : [...r]).join(" ")), t == null ? e.removeAttribute("class") : n ? e.setAttribute("class", t) : e.className = t;
}
const Uu = Symbol("_vod"), c0 = Symbol("_vsh"), f0 = {
  beforeMount(e, { value: t }, { transition: n }) {
    e[Uu] = e.style.display === "none" ? "" : e.style.display, n && t ? n.beforeEnter(e) : pi(e, t);
  },
  mounted(e, { value: t }, { transition: n }) {
    n && t && n.enter(e);
  },
  updated(e, { value: t, oldValue: n }, { transition: r }) {
    !t != !n && (r ? t ? (r.beforeEnter(e), pi(e, !0), r.enter(e)) : r.leave(e, () => {
      pi(e, !1);
    }) : pi(e, t));
  },
  beforeUnmount(e, { value: t }) {
    pi(e, t);
  }
};
function pi(e, t) {
  e.style.display = t ? e[Uu] : "none", e[c0] = !t;
}
function mm() {
  f0.getSSRProps = ({ value: e }) => {
    if (!e)
      return { style: { display: "none" } };
  };
}
const d0 = Symbol("");
function bm(e) {
  const t = en();
  if (!t)
    return;
  const n = t.ut = (i = e(t.proxy)) => {
    Array.from(
      document.querySelectorAll(`[data-v-owner="${t.uid}"]`)
    ).forEach((u) => qu(u, i));
  }, r = () => {
    const i = e(t.proxy);
    t.ce ? qu(t.ce, i) : Ro(t.subTree, i), n(i);
  };
  ca(() => {
    Ni(r);
  }), Zi(() => {
    Wr(r, Jt, { flush: "post" });
    const i = new MutationObserver(r);
    i.observe(t.subTree.el.parentNode, { childList: !0 }), _s(() => i.disconnect());
  });
}
function Ro(e, t) {
  if (e.shapeFlag & 128) {
    const n = e.suspense;
    e = n.activeBranch, n.pendingBranch && !n.isHydrating && n.effects.push(() => {
      Ro(n.activeBranch, t);
    });
  }
  for (; e.component; )
    e = e.component.subTree;
  if (e.shapeFlag & 1 && e.el)
    qu(e.el, t);
  else if (e.type === Se)
    e.children.forEach((n) => Ro(n, t));
  else if (e.type === _r) {
    let { el: n, anchor: r } = e;
    for (; n && (qu(n, t), n !== r); )
      n = n.nextSibling;
  }
}
function qu(e, t) {
  if (e.nodeType === 1) {
    const n = e.style;
    let r = "";
    for (const i in t)
      n.setProperty(`--${i}`, t[i]), r += `--${i}: ${t[i]};`;
    n[d0] = r;
  }
}
const gm = /(^|;)\s*display\s*:/;
function ym(e, t, n) {
  const r = e.style, i = Ye(n);
  let u = !1;
  if (n && !i) {
    if (t)
      if (Ye(t))
        for (const s of t.split(";")) {
          const o = s.slice(0, s.indexOf(":")).trim();
          n[o] == null && Su(r, o, "");
        }
      else
        for (const s in t)
          n[s] == null && Su(r, s, "");
    for (const s in n)
      s === "display" && (u = !0), Su(r, s, n[s]);
  } else if (i) {
    if (t !== n) {
      const s = r[d0];
      s && (n += ";" + s), r.cssText = n, u = gm.test(n);
    }
  } else t && e.removeAttribute("style");
  Uu in e && (e[Uu] = u ? r.display : "", e[c0] && (r.display = "none"));
}
const hl = /\s*!important$/;
function Su(e, t, n) {
  if (ce(n))
    n.forEach((r) => Su(e, t, r));
  else if (n == null && (n = ""), t.startsWith("--"))
    e.setProperty(t, n);
  else {
    const r = _m(e, t);
    hl.test(n) ? e.setProperty(
      Bt(r),
      n.replace(hl, ""),
      "important"
    ) : e[r] = n;
  }
}
const pl = ["Webkit", "Moz", "ms"], eo = {};
function _m(e, t) {
  const n = eo[t];
  if (n)
    return n;
  let r = xt(t);
  if (r !== "filter" && r in e)
    return eo[t] = r;
  r = Wi(r);
  for (let i = 0; i < pl.length; i++) {
    const u = pl[i] + r;
    if (u in e)
      return eo[t] = u;
  }
  return t;
}
const ml = "http://www.w3.org/1999/xlink";
function bl(e, t, n, r, i, u = Sh(t)) {
  r && t.startsWith("xlink:") ? n == null ? e.removeAttributeNS(ml, t.slice(6, t.length)) : e.setAttributeNS(ml, t, n) : n == null || u && !wc(n) ? e.removeAttribute(t) : e.setAttribute(
    t,
    u ? "" : dn(n) ? String(n) : n
  );
}
function gl(e, t, n, r, i) {
  if (t === "innerHTML" || t === "textContent") {
    n != null && (e[t] = t === "innerHTML" ? u0(n) : n);
    return;
  }
  const u = e.tagName;
  if (t === "value" && u !== "PROGRESS" && // custom elements may use _value internally
  !u.includes("-")) {
    const o = u === "OPTION" ? e.getAttribute("value") || "" : e.value, a = n == null ? (
      // #11647: value should be set as empty string for null and undefined,
      // but <input type="checkbox"> should be set as 'on'.
      e.type === "checkbox" ? "on" : ""
    ) : String(n);
    (o !== a || !("_value" in e)) && (e.value = a), n == null && e.removeAttribute(t), e._value = n;
    return;
  }
  let s = !1;
  if (n === "" || n == null) {
    const o = typeof e[t];
    o === "boolean" ? n = wc(n) : n == null && o === "string" ? (n = "", s = !0) : o === "number" && (n = 0, s = !0);
  }
  try {
    e[t] = n;
  } catch {
  }
  s && e.removeAttribute(i || t);
}
function Mn(e, t, n, r) {
  e.addEventListener(t, n, r);
}
function xm(e, t, n, r) {
  e.removeEventListener(t, n, r);
}
const yl = Symbol("_vei");
function vm(e, t, n, r, i = null) {
  const u = e[yl] || (e[yl] = {}), s = u[t];
  if (r && s)
    s.value = r;
  else {
    const [o, a] = km(t);
    if (r) {
      const c = u[t] = Cm(
        r,
        i
      );
      Mn(e, o, c, a);
    } else s && (xm(e, o, s, a), u[t] = void 0);
  }
}
const _l = /(?:Once|Passive|Capture)$/;
function km(e) {
  let t;
  if (_l.test(e)) {
    t = {};
    let r;
    for (; r = e.match(_l); )
      e = e.slice(0, e.length - r[0].length), t[r[0].toLowerCase()] = !0;
  }
  return [e[2] === ":" ? e.slice(3) : Bt(e.slice(2)), t];
}
let to = 0;
const wm = /* @__PURE__ */ Promise.resolve(), Em = () => to || (wm.then(() => to = 0), to = Date.now());
function Cm(e, t) {
  const n = (r) => {
    if (!r._vts)
      r._vts = Date.now();
    else if (r._vts <= n.attached)
      return;
    Qt(
      Sm(r, n.value),
      t,
      5,
      [r]
    );
  };
  return n.value = e, n.attached = Em(), n;
}
function Sm(e, t) {
  if (ce(t)) {
    const n = e.stopImmediatePropagation;
    return e.stopImmediatePropagation = () => {
      n.call(e), e._stopped = !0;
    }, t.map(
      (r) => (i) => !i._stopped && r && r(i)
    );
  } else
    return t;
}
const xl = (e) => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && // lowercase letter
e.charCodeAt(2) > 96 && e.charCodeAt(2) < 123, Tm = (e, t, n, r, i, u) => {
  const s = i === "svg";
  t === "class" ? pm(e, r, s) : t === "style" ? ym(e, n, r) : qi(t) ? Yo(t) || vm(e, t, n, r, u) : (t[0] === "." ? (t = t.slice(1), !0) : t[0] === "^" ? (t = t.slice(1), !1) : Om(e, t, r, s)) ? (gl(e, t, r), !e.tagName.includes("-") && (t === "value" || t === "checked" || t === "selected") && bl(e, t, r, s, u, t !== "value")) : /* #11081 force set props for possible async custom element */ e._isVueCE && (/[A-Z]/.test(t) || !Ye(r)) ? gl(e, xt(t), r, u, t) : (t === "true-value" ? e._trueValue = r : t === "false-value" && (e._falseValue = r), bl(e, t, r, s));
};
function Om(e, t, n, r) {
  if (r)
    return !!(t === "innerHTML" || t === "textContent" || t in e && xl(t) && ve(n));
  if (t === "spellcheck" || t === "draggable" || t === "translate" || t === "form" || t === "list" && e.tagName === "INPUT" || t === "type" && e.tagName === "TEXTAREA")
    return !1;
  if (t === "width" || t === "height") {
    const i = e.tagName;
    if (i === "IMG" || i === "VIDEO" || i === "CANVAS" || i === "SOURCE")
      return !1;
  }
  return xl(t) && Ye(n) ? !1 : t in e;
}
const vl = {};
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function ya(e, t, n) {
  const r = /* @__PURE__ */ aa(e, t);
  ns(r) && qe(r, t);
  class i extends ks {
    constructor(s) {
      super(r, s, n);
    }
  }
  return i.def = r, i;
}
/*! #__NO_SIDE_EFFECTS__ */
const Dm = /* @__NO_SIDE_EFFECTS__ */ (e, t) => /* @__PURE__ */ ya(e, t, E0), Am = typeof HTMLElement < "u" ? HTMLElement : class {
};
class ks extends Am {
  constructor(t, n = {}, r = jo) {
    super(), this._def = t, this._props = n, this._createApp = r, this._isVueCE = !0, this._instance = null, this._app = null, this._nonce = this._def.nonce, this._connected = !1, this._resolved = !1, this._numberProps = null, this._styleChildren = /* @__PURE__ */ new WeakSet(), this._ob = null, this.shadowRoot && r !== jo ? this._root = this.shadowRoot : t.shadowRoot !== !1 ? (this.attachShadow({ mode: "open" }), this._root = this.shadowRoot) : this._root = this, this._def.__asyncLoader || this._resolveProps(this._def);
  }
  connectedCallback() {
    if (!this.isConnected) return;
    this.shadowRoot || this._parseSlots(), this._connected = !0;
    let t = this;
    for (; t = t && (t.parentNode || t.host); )
      if (t instanceof ks) {
        this._parent = t;
        break;
      }
    this._instance || (this._resolved ? (this._setParent(), this._update()) : t && t._pendingResolve ? this._pendingResolve = t._pendingResolve.then(() => {
      this._pendingResolve = void 0, this._resolveDef();
    }) : this._resolveDef());
  }
  _setParent(t = this._parent) {
    t && (this._instance.parent = t._instance, this._instance.provides = t._instance.provides);
  }
  disconnectedCallback() {
    this._connected = !1, hs(() => {
      this._connected || (this._ob && (this._ob.disconnect(), this._ob = null), this._app && this._app.unmount(), this._instance && (this._instance.ce = void 0), this._app = this._instance = null);
    });
  }
  /**
   * resolve inner component definition (handle possible async component)
   */
  _resolveDef() {
    if (this._pendingResolve)
      return;
    for (let r = 0; r < this.attributes.length; r++)
      this._setAttr(this.attributes[r].name);
    this._ob = new MutationObserver((r) => {
      for (const i of r)
        this._setAttr(i.attributeName);
    }), this._ob.observe(this, { attributes: !0 });
    const t = (r, i = !1) => {
      this._resolved = !0, this._pendingResolve = void 0;
      const { props: u, styles: s } = r;
      let o;
      if (u && !ce(u))
        for (const a in u) {
          const c = u[a];
          (c === Number || c && c.type === Number) && (a in this._props && (this._props[a] = Mu(this._props[a])), (o || (o = /* @__PURE__ */ Object.create(null)))[xt(a)] = !0);
        }
      this._numberProps = o, i && this._resolveProps(r), this.shadowRoot && this._applyStyles(s), this._mount(r);
    }, n = this._def.__asyncLoader;
    n ? this._pendingResolve = n().then(
      (r) => t(this._def = r, !0)
    ) : t(this._def);
  }
  _mount(t) {
    this._app = this._createApp(t), t.configureApp && t.configureApp(this._app), this._app._ceVNode = this._createVNode(), this._app.mount(this._root);
    const n = this._instance && this._instance.exposed;
    if (n)
      for (const r in n)
        Be(this, r) || Object.defineProperty(this, r, {
          // unwrap ref to be consistent with public instance behavior
          get: () => ds(n[r])
        });
  }
  _resolveProps(t) {
    const { props: n } = t, r = ce(n) ? n : Object.keys(n || {});
    for (const i of Object.keys(this))
      i[0] !== "_" && r.includes(i) && this._setProp(i, this[i]);
    for (const i of r.map(xt))
      Object.defineProperty(this, i, {
        get() {
          return this._getProp(i);
        },
        set(u) {
          this._setProp(i, u, !0, !0);
        }
      });
  }
  _setAttr(t) {
    if (t.startsWith("data-v-")) return;
    const n = this.hasAttribute(t);
    let r = n ? this.getAttribute(t) : vl;
    const i = xt(t);
    n && this._numberProps && this._numberProps[i] && (r = Mu(r)), this._setProp(i, r, !1, !0);
  }
  /**
   * @internal
   */
  _getProp(t) {
    return this._props[t];
  }
  /**
   * @internal
   */
  _setProp(t, n, r = !0, i = !1) {
    if (n !== this._props[t] && (n === vl ? delete this._props[t] : (this._props[t] = n, t === "key" && this._app && (this._app._ceVNode.key = n)), i && this._instance && this._update(), r)) {
      const u = this._ob;
      u && u.disconnect(), n === !0 ? this.setAttribute(Bt(t), "") : typeof n == "string" || typeof n == "number" ? this.setAttribute(Bt(t), n + "") : n || this.removeAttribute(Bt(t)), u && u.observe(this, { attributes: !0 });
    }
  }
  _update() {
    w0(this._createVNode(), this._root);
  }
  _createVNode() {
    const t = {};
    this.shadowRoot || (t.onVnodeMounted = t.onVnodeUpdated = this._renderSlots.bind(this));
    const n = Re(this._def, qe(t, this._props));
    return this._instance || (n.ce = (r) => {
      this._instance = r, r.ce = this, r.isCE = !0;
      const i = (u, s) => {
        this.dispatchEvent(
          new CustomEvent(
            u,
            ns(s[0]) ? qe({ detail: s }, s[0]) : { detail: s }
          )
        );
      };
      r.emit = (u, ...s) => {
        i(u, s), Bt(u) !== u && i(Bt(u), s);
      }, this._setParent();
    }), n;
  }
  _applyStyles(t, n) {
    if (!t) return;
    if (n) {
      if (n === this._def || this._styleChildren.has(n))
        return;
      this._styleChildren.add(n);
    }
    const r = this._nonce;
    for (let i = t.length - 1; i >= 0; i--) {
      const u = document.createElement("style");
      r && u.setAttribute("nonce", r), u.textContent = t[i], this.shadowRoot.prepend(u);
    }
  }
  /**
   * Only called when shadowRoot is false
   */
  _parseSlots() {
    const t = this._slots = {};
    let n;
    for (; n = this.firstChild; ) {
      const r = n.nodeType === 1 && n.getAttribute("slot") || "default";
      (t[r] || (t[r] = [])).push(n), this.removeChild(n);
    }
  }
  /**
   * Only called when shadowRoot is false
   */
  _renderSlots() {
    const t = (this._teleportTarget || this).querySelectorAll("slot"), n = this._instance.type.__scopeId;
    for (let r = 0; r < t.length; r++) {
      const i = t[r], u = i.getAttribute("name") || "default", s = this._slots[u], o = i.parentNode;
      if (s)
        for (const a of s) {
          if (n && a.nodeType === 1) {
            const c = n + "-s", l = document.createTreeWalker(a, 1);
            a.setAttribute(c, "");
            let f;
            for (; f = l.nextNode(); )
              f.setAttribute(c, "");
          }
          o.insertBefore(a, i);
        }
      else
        for (; i.firstChild; ) o.insertBefore(i.firstChild, i);
      o.removeChild(i);
    }
  }
  /**
   * @internal
   */
  _injectChildStyle(t) {
    this._applyStyles(t.styles, t);
  }
  /**
   * @internal
   */
  _removeChildStyle(t) {
  }
}
function h0(e) {
  const t = en(), n = t && t.ce;
  return n || null;
}
function Fm() {
  const e = h0();
  return e && e.shadowRoot;
}
function Mm(e = "$style") {
  {
    const t = en();
    if (!t)
      return Ie;
    const n = t.type.__cssModules;
    if (!n)
      return Ie;
    const r = n[e];
    return r || Ie;
  }
}
const p0 = /* @__PURE__ */ new WeakMap(), m0 = /* @__PURE__ */ new WeakMap(), Wu = Symbol("_moveCb"), kl = Symbol("_enterCb"), Nm = (e) => (delete e.props.mode, e), Im = /* @__PURE__ */ Nm({
  name: "TransitionGroup",
  props: /* @__PURE__ */ qe({}, o0, {
    tag: String,
    moveClass: String
  }),
  setup(e, { slots: t }) {
    const n = en(), r = sa();
    let i, u;
    return gs(() => {
      if (!i.length)
        return;
      const s = e.moveClass || `${e.name || "v"}-move`;
      if (!jm(
        i[0].el,
        n.vnode.el,
        s
      ))
        return;
      i.forEach(zm), i.forEach(Pm);
      const o = i.filter(Rm);
      Po(), o.forEach((a) => {
        const c = a.el, l = c.style;
        _n(c, s), l.transform = l.webkitTransform = l.transitionDuration = "";
        const f = c[Wu] = (m) => {
          m && m.target !== c || (!m || /transform$/.test(m.propertyName)) && (c.removeEventListener("transitionend", f), c[Wu] = null, qn(c, s));
        };
        c.addEventListener("transitionend", f);
      });
    }), () => {
      const s = ze(e), o = a0(s);
      let a = s.tag || Se;
      if (i = [], u)
        for (let c = 0; c < u.length; c++) {
          const l = u[c];
          l.el && l.el instanceof Element && (i.push(l), Nn(
            l,
            Kr(
              l,
              o,
              r,
              n
            )
          ), p0.set(
            l,
            l.el.getBoundingClientRect()
          ));
        }
      u = t.default ? ms(t.default()) : [];
      for (let c = 0; c < u.length; c++) {
        const l = u[c];
        l.key != null && Nn(
          l,
          Kr(l, o, r, n)
        );
      }
      return Re(a, null, u);
    };
  }
}), Lm = Im;
function zm(e) {
  const t = e.el;
  t[Wu] && t[Wu](), t[kl] && t[kl]();
}
function Pm(e) {
  m0.set(e, e.el.getBoundingClientRect());
}
function Rm(e) {
  const t = p0.get(e), n = m0.get(e), r = t.left - n.left, i = t.top - n.top;
  if (r || i) {
    const u = e.el.style;
    return u.transform = u.webkitTransform = `translate(${r}px,${i}px)`, u.transitionDuration = "0s", e;
  }
}
function jm(e, t, n) {
  const r = e.cloneNode(), i = e[Xr];
  i && i.forEach((o) => {
    o.split(/\s+/).forEach((a) => a && r.classList.remove(a));
  }), n.split(/\s+/).forEach((o) => o && r.classList.add(o)), r.style.display = "none";
  const u = t.nodeType === 1 ? t : t.parentNode;
  u.appendChild(r);
  const { hasTransform: s } = l0(r);
  return u.removeChild(r), s;
}
const or = (e) => {
  const t = e.props["onUpdate:modelValue"] || !1;
  return ce(t) ? (n) => Ur(t, n) : t;
};
function Bm(e) {
  e.target.composing = !0;
}
function wl(e) {
  const t = e.target;
  t.composing && (t.composing = !1, t.dispatchEvent(new Event("input")));
}
const Xt = Symbol("_assign"), $u = {
  created(e, { modifiers: { lazy: t, trim: n, number: r } }, i) {
    e[Xt] = or(i);
    const u = r || i.props && i.props.type === "number";
    Mn(e, t ? "change" : "input", (s) => {
      if (s.target.composing) return;
      let o = e.value;
      n && (o = o.trim()), u && (o = Fu(o)), e[Xt](o);
    }), n && Mn(e, "change", () => {
      e.value = e.value.trim();
    }), t || (Mn(e, "compositionstart", Bm), Mn(e, "compositionend", wl), Mn(e, "change", wl));
  },
  // set value on mounted so it's after min/max for type="range"
  mounted(e, { value: t }) {
    e.value = t ?? "";
  },
  beforeUpdate(e, { value: t, oldValue: n, modifiers: { lazy: r, trim: i, number: u } }, s) {
    if (e[Xt] = or(s), e.composing) return;
    const o = (u || e.type === "number") && !/^0\d/.test(e.value) ? Fu(e.value) : e.value, a = t ?? "";
    o !== a && (document.activeElement === e && e.type !== "range" && (r && t === n || i && e.value.trim() === a) || (e.value = a));
  }
}, _a = {
  // #4096 array checkboxes need to be deep traversed
  deep: !0,
  created(e, t, n) {
    e[Xt] = or(n), Mn(e, "change", () => {
      const r = e._modelValue, i = Qr(e), u = e.checked, s = e[Xt];
      if (ce(r)) {
        const o = us(r, i), a = o !== -1;
        if (u && !a)
          s(r.concat(i));
        else if (!u && a) {
          const c = [...r];
          c.splice(o, 1), s(c);
        }
      } else if (wr(r)) {
        const o = new Set(r);
        u ? o.add(i) : o.delete(i), s(o);
      } else
        s(g0(e, u));
    });
  },
  // set initial checked on mount to wait for true-value/false-value
  mounted: El,
  beforeUpdate(e, t, n) {
    e[Xt] = or(n), El(e, t, n);
  }
};
function El(e, { value: t, oldValue: n }, r) {
  e._modelValue = t;
  let i;
  if (ce(t))
    i = us(t, r.props.value) > -1;
  else if (wr(t))
    i = t.has(r.props.value);
  else {
    if (t === n) return;
    i = ir(t, g0(e, !0));
  }
  e.checked !== i && (e.checked = i);
}
const xa = {
  created(e, { value: t }, n) {
    e.checked = ir(t, n.props.value), e[Xt] = or(n), Mn(e, "change", () => {
      e[Xt](Qr(e));
    });
  },
  beforeUpdate(e, { value: t, oldValue: n }, r) {
    e[Xt] = or(r), t !== n && (e.checked = ir(t, r.props.value));
  }
}, b0 = {
  // <select multiple> value need to be deep traversed
  deep: !0,
  created(e, { value: t, modifiers: { number: n } }, r) {
    const i = wr(t);
    Mn(e, "change", () => {
      const u = Array.prototype.filter.call(e.options, (s) => s.selected).map(
        (s) => n ? Fu(Qr(s)) : Qr(s)
      );
      e[Xt](
        e.multiple ? i ? new Set(u) : u : u[0]
      ), e._assigning = !0, hs(() => {
        e._assigning = !1;
      });
    }), e[Xt] = or(r);
  },
  // set value in mounted & updated because <select> relies on its children
  // <option>s.
  mounted(e, { value: t }) {
    Cl(e, t);
  },
  beforeUpdate(e, t, n) {
    e[Xt] = or(n);
  },
  updated(e, { value: t }) {
    e._assigning || Cl(e, t);
  }
};
function Cl(e, t) {
  const n = e.multiple, r = ce(t);
  if (!(n && !r && !wr(t))) {
    for (let i = 0, u = e.options.length; i < u; i++) {
      const s = e.options[i], o = Qr(s);
      if (n)
        if (r) {
          const a = typeof o;
          a === "string" || a === "number" ? s.selected = t.some((c) => String(c) === String(o)) : s.selected = us(t, o) > -1;
        } else
          s.selected = t.has(o);
      else if (ir(Qr(s), t)) {
        e.selectedIndex !== i && (e.selectedIndex = i);
        return;
      }
    }
    !n && e.selectedIndex !== -1 && (e.selectedIndex = -1);
  }
}
function Qr(e) {
  return "_value" in e ? e._value : e.value;
}
function g0(e, t) {
  const n = t ? "_trueValue" : "_falseValue";
  return n in e ? e[n] : t;
}
const y0 = {
  created(e, t, n) {
    hu(e, t, n, null, "created");
  },
  mounted(e, t, n) {
    hu(e, t, n, null, "mounted");
  },
  beforeUpdate(e, t, n, r) {
    hu(e, t, n, r, "beforeUpdate");
  },
  updated(e, t, n, r) {
    hu(e, t, n, r, "updated");
  }
};
function _0(e, t) {
  switch (e) {
    case "SELECT":
      return b0;
    case "TEXTAREA":
      return $u;
    default:
      switch (t) {
        case "checkbox":
          return _a;
        case "radio":
          return xa;
        default:
          return $u;
      }
  }
}
function hu(e, t, n, r, i) {
  const s = _0(
    e.tagName,
    n.props && n.props.type
  )[i];
  s && s(e, t, n, r);
}
function Vm() {
  $u.getSSRProps = ({ value: e }) => ({ value: e }), xa.getSSRProps = ({ value: e }, t) => {
    if (t.props && ir(t.props.value, e))
      return { checked: !0 };
  }, _a.getSSRProps = ({ value: e }, t) => {
    if (ce(e)) {
      if (t.props && us(e, t.props.value) > -1)
        return { checked: !0 };
    } else if (wr(e)) {
      if (t.props && e.has(t.props.value))
        return { checked: !0 };
    } else if (e)
      return { checked: !0 };
  }, y0.getSSRProps = (e, t) => {
    if (typeof t.type != "string")
      return;
    const n = _0(
      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase
      t.type.toUpperCase(),
      t.props && t.props.type
    );
    if (n.getSSRProps)
      return n.getSSRProps(e, t);
  };
}
const Hm = ["ctrl", "shift", "alt", "meta"], Um = {
  stop: (e) => e.stopPropagation(),
  prevent: (e) => e.preventDefault(),
  self: (e) => e.target !== e.currentTarget,
  ctrl: (e) => !e.ctrlKey,
  shift: (e) => !e.shiftKey,
  alt: (e) => !e.altKey,
  meta: (e) => !e.metaKey,
  left: (e) => "button" in e && e.button !== 0,
  middle: (e) => "button" in e && e.button !== 1,
  right: (e) => "button" in e && e.button !== 2,
  exact: (e, t) => Hm.some((n) => e[`${n}Key`] && !t.includes(n))
}, ei = (e, t) => {
  const n = e._withMods || (e._withMods = {}), r = t.join(".");
  return n[r] || (n[r] = (i, ...u) => {
    for (let s = 0; s < t.length; s++) {
      const o = Um[t[s]];
      if (o && o(i, t)) return;
    }
    return e(i, ...u);
  });
}, qm = {
  esc: "escape",
  space: " ",
  up: "arrow-up",
  left: "arrow-left",
  right: "arrow-right",
  down: "arrow-down",
  delete: "backspace"
}, Wm = (e, t) => {
  const n = e._withKeys || (e._withKeys = {}), r = t.join(".");
  return n[r] || (n[r] = (i) => {
    if (!("key" in i))
      return;
    const u = Bt(i.key);
    if (t.some(
      (s) => s === u || qm[s] === u
    ))
      return e(i);
  });
}, x0 = /* @__PURE__ */ qe({ patchProp: Tm }, lm);
let Oi, Sl = !1;
function v0() {
  return Oi || (Oi = Nf(x0));
}
function k0() {
  return Oi = Sl ? Oi : If(x0), Sl = !0, Oi;
}
const w0 = (...e) => {
  v0().render(...e);
}, $m = (...e) => {
  k0().hydrate(...e);
}, jo = (...e) => {
  const t = v0().createApp(...e), { mount: n } = t;
  return t.mount = (r) => {
    const i = S0(r);
    if (!i) return;
    const u = t._component;
    !ve(u) && !u.render && !u.template && (u.template = i.innerHTML), i.nodeType === 1 && (i.textContent = "");
    const s = n(i, !1, C0(i));
    return i instanceof Element && (i.removeAttribute("v-cloak"), i.setAttribute("data-v-app", "")), s;
  }, t;
}, E0 = (...e) => {
  const t = k0().createApp(...e), { mount: n } = t;
  return t.mount = (r) => {
    const i = S0(r);
    if (i)
      return n(i, !0, C0(i));
  }, t;
};
function C0(e) {
  if (e instanceof SVGElement)
    return "svg";
  if (typeof MathMLElement == "function" && e instanceof MathMLElement)
    return "mathml";
}
function S0(e) {
  return Ye(e) ? document.querySelector(e) : e;
}
let Tl = !1;
const Zm = () => {
  Tl || (Tl = !0, Vm(), mm());
};
/**
* vue v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const Gm = () => {
}, Ym = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaseTransition: af,
  BaseTransitionPropsValidators: oa,
  Comment: it,
  DeprecationTypes: sm,
  EffectScope: Qo,
  ErrorCodes: bp,
  ErrorTypeStrings: Q1,
  Fragment: Se,
  KeepAlive: Hp,
  ReactiveEffect: Ai,
  Static: _r,
  Suspense: I1,
  Teleport: Ep,
  Text: nr,
  TrackOpTypes: lp,
  Transition: fm,
  TransitionGroup: Lm,
  TriggerOpTypes: cp,
  VueElement: ks,
  assertNumber: mp,
  callWithAsyncErrorHandling: Qt,
  callWithErrorHandling: ui,
  camelize: xt,
  capitalize: Wi,
  cloneVNode: Cn,
  compatUtils: um,
  compile: Gm,
  computed: Hu,
  createApp: jo,
  createBlock: ct,
  createCommentVNode: Me,
  createElementBlock: H,
  createElementVNode: J,
  createHydrationRenderer: If,
  createPropsRestProxy: o1,
  createRenderer: Nf,
  createSSRApp: E0,
  createSlots: $p,
  createStaticVNode: H1,
  createTextVNode: En,
  createVNode: Re,
  customRef: $c,
  defineAsyncComponent: Bp,
  defineComponent: aa,
  defineCustomElement: ya,
  defineEmits: Jp,
  defineExpose: Xp,
  defineModel: t1,
  defineOptions: Qp,
  defineProps: Kp,
  defineSSRCustomElement: Dm,
  defineSlots: e1,
  devtools: em,
  effect: Fh,
  effectScope: Oh,
  getCurrentInstance: en,
  getCurrentScope: Sc,
  getCurrentWatcher: fp,
  getTransitionRawChildren: ms,
  guardReactiveProps: Yf,
  h: n0,
  handleError: Er,
  hasInjectionContext: b1,
  hydrate: $m,
  hydrateOnIdle: Ip,
  hydrateOnInteraction: Rp,
  hydrateOnMediaQuery: Pp,
  hydrateOnVisible: zp,
  initCustomFormatter: K1,
  initDirectivesForSSR: Zm,
  inject: Si,
  isMemoSame: r0,
  isProxy: fs,
  isReactive: er,
  isReadonly: ur,
  isRef: ht,
  isRuntimeOnly: Z1,
  isShallow: Ut,
  isVNode: In,
  markRaw: Uc,
  mergeDefaults: u1,
  mergeModels: s1,
  mergeProps: Kf,
  nextTick: hs,
  normalizeClass: It,
  normalizeProps: Eh,
  normalizeStyle: yt,
  onActivated: cf,
  onBeforeMount: hf,
  onBeforeUnmount: ys,
  onBeforeUpdate: ca,
  onDeactivated: ff,
  onErrorCaptured: gf,
  onMounted: Zi,
  onRenderTracked: bf,
  onRenderTriggered: mf,
  onScopeDispose: Dh,
  onServerPrefetch: pf,
  onUnmounted: _s,
  onUpdated: gs,
  onWatcherCleanup: Gc,
  openBlock: N,
  popScopeId: vp,
  provide: wf,
  proxyRefs: ia,
  pushScopeId: xp,
  queuePostFlushCb: Ni,
  reactive: ls,
  readonly: ra,
  ref: wi,
  registerRuntimeCompiler: $1,
  render: w0,
  renderList: _t,
  renderSlot: Zp,
  resolveComponent: et,
  resolveDirective: _f,
  resolveDynamicComponent: Wp,
  resolveFilter: im,
  resolveTransitionHooks: Kr,
  setBlockTracking: Ao,
  setDevtoolsHook: tm,
  setTransitionHooks: Nn,
  shallowReactive: Hc,
  shallowReadonly: Jh,
  shallowRef: qc,
  ssrContextKey: Rf,
  ssrUtils: rm,
  stop: Mh,
  toDisplayString: Ae,
  toHandlerKey: xi,
  toHandlers: Gp,
  toRaw: ze,
  toRef: sp,
  toRefs: rp,
  toValue: ep,
  transformVNodeArgs: B1,
  triggerRef: Qh,
  unref: ds,
  useAttrs: i1,
  useCssModule: Mm,
  useCssVars: bm,
  useHost: h0,
  useId: Sp,
  useModel: T1,
  useSSRContext: jf,
  useShadowRoot: Fm,
  useSlots: r1,
  useTemplateRef: Tp,
  useTransitionState: sa,
  vModelCheckbox: _a,
  vModelDynamic: y0,
  vModelRadio: xa,
  vModelSelect: b0,
  vModelText: $u,
  vShow: f0,
  version: i0,
  warn: X1,
  watch: Wr,
  watchEffect: E1,
  watchPostEffect: C1,
  watchSyncEffect: Bf,
  withAsyncContext: a1,
  withCtx: sr,
  withDefaults: n1,
  withDirectives: ef,
  withKeys: Wm,
  withMemo: J1,
  withModifiers: ei,
  withScopeId: kp
}, Symbol.toStringTag, { value: "Module" }));
function Km(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function Jm(e) {
  if (e.__esModule) return e;
  var t = e.default;
  if (typeof t == "function") {
    var n = function r() {
      return this instanceof r ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments);
    };
    n.prototype = t.prototype;
  } else n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(e).forEach(function(r) {
    var i = Object.getOwnPropertyDescriptor(e, r);
    Object.defineProperty(n, r, i.get ? i : {
      enumerable: !0,
      get: function() {
        return e[r];
      }
    });
  }), n;
}
var T0 = { exports: {} };
const Xm = /* @__PURE__ */ Jm(Ym);
(function(e) {
  e.exports = /******/
  function(t) {
    var n = {};
    function r(i) {
      if (n[i])
        return n[i].exports;
      var u = n[i] = {
        /******/
        i,
        /******/
        l: !1,
        /******/
        exports: {}
        /******/
      };
      return t[i].call(u.exports, u, u.exports, r), u.l = !0, u.exports;
    }
    return r.m = t, r.c = n, r.d = function(i, u, s) {
      r.o(i, u) || Object.defineProperty(i, u, { enumerable: !0, get: s });
    }, r.r = function(i) {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(i, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(i, "__esModule", { value: !0 });
    }, r.t = function(i, u) {
      if (u & 1 && (i = r(i)), u & 8 || u & 4 && typeof i == "object" && i && i.__esModule) return i;
      var s = /* @__PURE__ */ Object.create(null);
      if (r.r(s), Object.defineProperty(s, "default", { enumerable: !0, value: i }), u & 2 && typeof i != "string") for (var o in i) r.d(s, o, (function(a) {
        return i[a];
      }).bind(null, o));
      return s;
    }, r.n = function(i) {
      var u = i && i.__esModule ? (
        /******/
        function() {
          return i.default;
        }
      ) : (
        /******/
        function() {
          return i;
        }
      );
      return r.d(u, "a", u), u;
    }, r.o = function(i, u) {
      return Object.prototype.hasOwnProperty.call(i, u);
    }, r.p = "", r(r.s = "fb15");
  }({
    /***/
    "2e39": (
      /***/
      function(t, n, r) {
        function i(u, s) {
          var o = s.length, a = u.length;
          if (a > o)
            return !1;
          if (a === o)
            return u === s;
          e: for (var c = 0, l = 0; c < a; c++) {
            for (var f = u.charCodeAt(c); l < o; )
              if (s.charCodeAt(l++) === f)
                continue e;
            return !1;
          }
          return !0;
        }
        t.exports = i;
      }
    ),
    /***/
    "6dd8": (
      /***/
      function(t, n, r) {
        (function(i) {
          var u = function() {
            if (typeof Map < "u")
              return Map;
            function A(B, te) {
              var le = -1;
              return B.some(function(ge, We) {
                return ge[0] === te ? (le = We, !0) : !1;
              }), le;
            }
            return (
              /** @class */
              function() {
                function B() {
                  this.__entries__ = [];
                }
                return Object.defineProperty(B.prototype, "size", {
                  /**
                   * @returns {boolean}
                   */
                  get: function() {
                    return this.__entries__.length;
                  },
                  enumerable: !0,
                  configurable: !0
                }), B.prototype.get = function(te) {
                  var le = A(this.__entries__, te), ge = this.__entries__[le];
                  return ge && ge[1];
                }, B.prototype.set = function(te, le) {
                  var ge = A(this.__entries__, te);
                  ~ge ? this.__entries__[ge][1] = le : this.__entries__.push([te, le]);
                }, B.prototype.delete = function(te) {
                  var le = this.__entries__, ge = A(le, te);
                  ~ge && le.splice(ge, 1);
                }, B.prototype.has = function(te) {
                  return !!~A(this.__entries__, te);
                }, B.prototype.clear = function() {
                  this.__entries__.splice(0);
                }, B.prototype.forEach = function(te, le) {
                  le === void 0 && (le = null);
                  for (var ge = 0, We = this.__entries__; ge < We.length; ge++) {
                    var tt = We[ge];
                    te.call(le, tt[1], tt[0]);
                  }
                }, B;
              }()
            );
          }(), s = typeof window < "u" && typeof document < "u" && window.document === document, o = function() {
            return typeof i < "u" && i.Math === Math ? i : typeof self < "u" && self.Math === Math ? self : typeof window < "u" && window.Math === Math ? window : Function("return this")();
          }(), a = function() {
            return typeof requestAnimationFrame == "function" ? requestAnimationFrame.bind(o) : function(A) {
              return setTimeout(function() {
                return A(Date.now());
              }, 1e3 / 60);
            };
          }(), c = 2;
          function l(A, B) {
            var te = !1, le = !1, ge = 0;
            function We() {
              te && (te = !1, A()), le && St();
            }
            function tt() {
              a(We);
            }
            function St() {
              var ut = Date.now();
              if (te) {
                if (ut - ge < c)
                  return;
                le = !0;
              } else
                te = !0, le = !1, setTimeout(tt, B);
              ge = ut;
            }
            return St;
          }
          var f = 20, m = ["top", "right", "bottom", "left", "width", "height", "size", "weight"], p = typeof MutationObserver < "u", h = (
            /** @class */
            function() {
              function A() {
                this.connected_ = !1, this.mutationEventsAdded_ = !1, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = l(this.refresh.bind(this), f);
              }
              return A.prototype.addObserver = function(B) {
                ~this.observers_.indexOf(B) || this.observers_.push(B), this.connected_ || this.connect_();
              }, A.prototype.removeObserver = function(B) {
                var te = this.observers_, le = te.indexOf(B);
                ~le && te.splice(le, 1), !te.length && this.connected_ && this.disconnect_();
              }, A.prototype.refresh = function() {
                var B = this.updateObservers_();
                B && this.refresh();
              }, A.prototype.updateObservers_ = function() {
                var B = this.observers_.filter(function(te) {
                  return te.gatherActive(), te.hasActive();
                });
                return B.forEach(function(te) {
                  return te.broadcastActive();
                }), B.length > 0;
              }, A.prototype.connect_ = function() {
                !s || this.connected_ || (document.addEventListener("transitionend", this.onTransitionEnd_), window.addEventListener("resize", this.refresh), p ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, {
                  attributes: !0,
                  childList: !0,
                  characterData: !0,
                  subtree: !0
                })) : (document.addEventListener("DOMSubtreeModified", this.refresh), this.mutationEventsAdded_ = !0), this.connected_ = !0);
              }, A.prototype.disconnect_ = function() {
                !s || !this.connected_ || (document.removeEventListener("transitionend", this.onTransitionEnd_), window.removeEventListener("resize", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = !1, this.connected_ = !1);
              }, A.prototype.onTransitionEnd_ = function(B) {
                var te = B.propertyName, le = te === void 0 ? "" : te, ge = m.some(function(We) {
                  return !!~le.indexOf(We);
                });
                ge && this.refresh();
              }, A.getInstance = function() {
                return this.instance_ || (this.instance_ = new A()), this.instance_;
              }, A.instance_ = null, A;
            }()
          ), E = function(A, B) {
            for (var te = 0, le = Object.keys(B); te < le.length; te++) {
              var ge = le[te];
              Object.defineProperty(A, ge, {
                value: B[ge],
                enumerable: !1,
                writable: !1,
                configurable: !0
              });
            }
            return A;
          }, C = function(A) {
            var B = A && A.ownerDocument && A.ownerDocument.defaultView;
            return B || o;
          }, L = ae(0, 0, 0, 0);
          function T(A) {
            return parseFloat(A) || 0;
          }
          function b(A) {
            for (var B = [], te = 1; te < arguments.length; te++)
              B[te - 1] = arguments[te];
            return B.reduce(function(le, ge) {
              var We = A["border-" + ge + "-width"];
              return le + T(We);
            }, 0);
          }
          function _(A) {
            for (var B = ["top", "right", "bottom", "left"], te = {}, le = 0, ge = B; le < ge.length; le++) {
              var We = ge[le], tt = A["padding-" + We];
              te[We] = T(tt);
            }
            return te;
          }
          function S(A) {
            var B = A.getBBox();
            return ae(0, 0, B.width, B.height);
          }
          function F(A) {
            var B = A.clientWidth, te = A.clientHeight;
            if (!B && !te)
              return L;
            var le = C(A).getComputedStyle(A), ge = _(le), We = ge.left + ge.right, tt = ge.top + ge.bottom, St = T(le.width), ut = T(le.height);
            if (le.boxSizing === "border-box" && (Math.round(St + We) !== B && (St -= b(le, "left", "right") + We), Math.round(ut + tt) !== te && (ut -= b(le, "top", "bottom") + tt)), !Q(A)) {
              var Lt = Math.round(St + We) - B, tn = Math.round(ut + tt) - te;
              Math.abs(Lt) !== 1 && (St -= Lt), Math.abs(tn) !== 1 && (ut -= tn);
            }
            return ae(ge.left, ge.top, St, ut);
          }
          var W = /* @__PURE__ */ function() {
            return typeof SVGGraphicsElement < "u" ? function(A) {
              return A instanceof C(A).SVGGraphicsElement;
            } : function(A) {
              return A instanceof C(A).SVGElement && typeof A.getBBox == "function";
            };
          }();
          function Q(A) {
            return A === C(A).document.documentElement;
          }
          function R(A) {
            return s ? W(A) ? S(A) : F(A) : L;
          }
          function j(A) {
            var B = A.x, te = A.y, le = A.width, ge = A.height, We = typeof DOMRectReadOnly < "u" ? DOMRectReadOnly : Object, tt = Object.create(We.prototype);
            return E(tt, {
              x: B,
              y: te,
              width: le,
              height: ge,
              top: te,
              right: B + le,
              bottom: ge + te,
              left: B
            }), tt;
          }
          function ae(A, B, te, le) {
            return { x: A, y: B, width: te, height: le };
          }
          var Y = (
            /** @class */
            function() {
              function A(B) {
                this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = ae(0, 0, 0, 0), this.target = B;
              }
              return A.prototype.isActive = function() {
                var B = R(this.target);
                return this.contentRect_ = B, B.width !== this.broadcastWidth || B.height !== this.broadcastHeight;
              }, A.prototype.broadcastRect = function() {
                var B = this.contentRect_;
                return this.broadcastWidth = B.width, this.broadcastHeight = B.height, B;
              }, A;
            }()
          ), he = (
            /** @class */
            /* @__PURE__ */ function() {
              function A(B, te) {
                var le = j(te);
                E(this, { target: B, contentRect: le });
              }
              return A;
            }()
          ), we = (
            /** @class */
            function() {
              function A(B, te, le) {
                if (this.activeObservations_ = [], this.observations_ = new u(), typeof B != "function")
                  throw new TypeError("The callback provided as parameter 1 is not a function.");
                this.callback_ = B, this.controller_ = te, this.callbackCtx_ = le;
              }
              return A.prototype.observe = function(B) {
                if (!arguments.length)
                  throw new TypeError("1 argument required, but only 0 present.");
                if (!(typeof Element > "u" || !(Element instanceof Object))) {
                  if (!(B instanceof C(B).Element))
                    throw new TypeError('parameter 1 is not of type "Element".');
                  var te = this.observations_;
                  te.has(B) || (te.set(B, new Y(B)), this.controller_.addObserver(this), this.controller_.refresh());
                }
              }, A.prototype.unobserve = function(B) {
                if (!arguments.length)
                  throw new TypeError("1 argument required, but only 0 present.");
                if (!(typeof Element > "u" || !(Element instanceof Object))) {
                  if (!(B instanceof C(B).Element))
                    throw new TypeError('parameter 1 is not of type "Element".');
                  var te = this.observations_;
                  te.has(B) && (te.delete(B), te.size || this.controller_.removeObserver(this));
                }
              }, A.prototype.disconnect = function() {
                this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this);
              }, A.prototype.gatherActive = function() {
                var B = this;
                this.clearActive(), this.observations_.forEach(function(te) {
                  te.isActive() && B.activeObservations_.push(te);
                });
              }, A.prototype.broadcastActive = function() {
                if (this.hasActive()) {
                  var B = this.callbackCtx_, te = this.activeObservations_.map(function(le) {
                    return new he(le.target, le.broadcastRect());
                  });
                  this.callback_.call(B, te, B), this.clearActive();
                }
              }, A.prototype.clearActive = function() {
                this.activeObservations_.splice(0);
              }, A.prototype.hasActive = function() {
                return this.activeObservations_.length > 0;
              }, A;
            }()
          ), be = typeof WeakMap < "u" ? /* @__PURE__ */ new WeakMap() : new u(), ie = (
            /** @class */
            /* @__PURE__ */ function() {
              function A(B) {
                if (!(this instanceof A))
                  throw new TypeError("Cannot call a class as a function.");
                if (!arguments.length)
                  throw new TypeError("1 argument required, but only 0 present.");
                var te = h.getInstance(), le = new we(B, te, this);
                be.set(this, le);
              }
              return A;
            }()
          );
          [
            "observe",
            "unobserve",
            "disconnect"
          ].forEach(function(A) {
            ie.prototype[A] = function() {
              var B;
              return (B = be.get(this))[A].apply(B, arguments);
            };
          });
          var Ee = function() {
            return typeof o.ResizeObserver < "u" ? o.ResizeObserver : ie;
          }();
          n.a = Ee;
        }).call(this, r("c8ba"));
      }
    ),
    /***/
    8875: (
      /***/
      function(t, n, r) {
        var i, u, s;
        (function(o, a) {
          u = [], i = a, s = typeof i == "function" ? i.apply(n, u) : i, s !== void 0 && (t.exports = s);
        })(typeof self < "u" ? self : this, function() {
          function o() {
            var a = Object.getOwnPropertyDescriptor(document, "currentScript");
            if (!a && "currentScript" in document && document.currentScript || a && a.get !== o && document.currentScript)
              return document.currentScript;
            try {
              throw new Error();
            } catch (_) {
              var c = /.*at [^(]*\((.*):(.+):(.+)\)$/ig, l = /@([^@]*):(\d+):(\d+)\s*$/ig, f = c.exec(_.stack) || l.exec(_.stack), m = f && f[1] || !1, p = f && f[2] || !1, h = document.location.href.replace(document.location.hash, ""), E, C, L, T = document.getElementsByTagName("script");
              m === h && (E = document.documentElement.outerHTML, C = new RegExp("(?:[^\\n]+?\\n){0," + (p - 2) + "}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*", "i"), L = E.replace(C, "$1").trim());
              for (var b = 0; b < T.length; b++)
                if (T[b].readyState === "interactive" || T[b].src === m || m === h && T[b].innerHTML && T[b].innerHTML.trim() === L)
                  return T[b];
              return null;
            }
          }
          return o;
        });
      }
    ),
    /***/
    "8bbf": (
      /***/
      function(t, n) {
        t.exports = Xm;
      }
    ),
    /***/
    c8ba: (
      /***/
      function(t, n) {
        var r;
        r = /* @__PURE__ */ function() {
          return this;
        }();
        try {
          r = r || new Function("return this")();
        } catch {
          typeof window == "object" && (r = window);
        }
        t.exports = r;
      }
    ),
    /***/
    f0bd: (
      /***/
      function(t, n, r) {
        (function(i) {
          /**!
          * @fileOverview Kickass library to create and place poppers near their reference elements.
          * @version 1.16.1
          * @license
          * Copyright (c) 2016 Federico Zivolo and contributors
          *
          * Permission is hereby granted, free of charge, to any person obtaining a copy
          * of this software and associated documentation files (the "Software"), to deal
          * in the Software without restriction, including without limitation the rights
          * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
          * copies of the Software, and to permit persons to whom the Software is
          * furnished to do so, subject to the following conditions:
          *
          * The above copyright notice and this permission notice shall be included in all
          * copies or substantial portions of the Software.
          *
          * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
          * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
          * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
          * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
          * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
          * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
          * SOFTWARE.
          */
          var u = typeof window < "u" && typeof document < "u" && typeof navigator < "u", s = function() {
            for (var d = ["Edge", "Trident", "Firefox"], y = 0; y < d.length; y += 1)
              if (u && navigator.userAgent.indexOf(d[y]) >= 0)
                return 1;
            return 0;
          }();
          function o(d) {
            var y = !1;
            return function() {
              y || (y = !0, window.Promise.resolve().then(function() {
                y = !1, d();
              }));
            };
          }
          function a(d) {
            var y = !1;
            return function() {
              y || (y = !0, setTimeout(function() {
                y = !1, d();
              }, s));
            };
          }
          var c = u && window.Promise, l = c ? o : a;
          function f(d) {
            var y = {};
            return d && y.toString.call(d) === "[object Function]";
          }
          function m(d, y) {
            if (d.nodeType !== 1)
              return [];
            var w = d.ownerDocument.defaultView, O = w.getComputedStyle(d, null);
            return y ? O[y] : O;
          }
          function p(d) {
            return d.nodeName === "HTML" ? d : d.parentNode || d.host;
          }
          function h(d) {
            if (!d)
              return document.body;
            switch (d.nodeName) {
              case "HTML":
              case "BODY":
                return d.ownerDocument.body;
              case "#document":
                return d.body;
            }
            var y = m(d), w = y.overflow, O = y.overflowX, P = y.overflowY;
            return /(auto|scroll|overlay)/.test(w + P + O) ? d : h(p(d));
          }
          function E(d) {
            return d && d.referenceNode ? d.referenceNode : d;
          }
          var C = u && !!(window.MSInputMethodContext && document.documentMode), L = u && /MSIE 10/.test(navigator.userAgent);
          function T(d) {
            return d === 11 ? C : d === 10 ? L : C || L;
          }
          function b(d) {
            if (!d)
              return document.documentElement;
            for (var y = T(10) ? document.body : null, w = d.offsetParent || null; w === y && d.nextElementSibling; )
              w = (d = d.nextElementSibling).offsetParent;
            var O = w && w.nodeName;
            return !O || O === "BODY" || O === "HTML" ? d ? d.ownerDocument.documentElement : document.documentElement : ["TH", "TD", "TABLE"].indexOf(w.nodeName) !== -1 && m(w, "position") === "static" ? b(w) : w;
          }
          function _(d) {
            var y = d.nodeName;
            return y === "BODY" ? !1 : y === "HTML" || b(d.firstElementChild) === d;
          }
          function S(d) {
            return d.parentNode !== null ? S(d.parentNode) : d;
          }
          function F(d, y) {
            if (!d || !d.nodeType || !y || !y.nodeType)
              return document.documentElement;
            var w = d.compareDocumentPosition(y) & Node.DOCUMENT_POSITION_FOLLOWING, O = w ? d : y, P = w ? y : d, z = document.createRange();
            z.setStart(O, 0), z.setEnd(P, 0);
            var U = z.commonAncestorContainer;
            if (d !== U && y !== U || O.contains(P))
              return _(U) ? U : b(U);
            var K = S(d);
            return K.host ? F(K.host, y) : F(d, S(y).host);
          }
          function W(d) {
            var y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "top", w = y === "top" ? "scrollTop" : "scrollLeft", O = d.nodeName;
            if (O === "BODY" || O === "HTML") {
              var P = d.ownerDocument.documentElement, z = d.ownerDocument.scrollingElement || P;
              return z[w];
            }
            return d[w];
          }
          function Q(d, y) {
            var w = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, O = W(y, "top"), P = W(y, "left"), z = w ? -1 : 1;
            return d.top += O * z, d.bottom += O * z, d.left += P * z, d.right += P * z, d;
          }
          function R(d, y) {
            var w = y === "x" ? "Left" : "Top", O = w === "Left" ? "Right" : "Bottom";
            return parseFloat(d["border" + w + "Width"]) + parseFloat(d["border" + O + "Width"]);
          }
          function j(d, y, w, O) {
            return Math.max(y["offset" + d], y["scroll" + d], w["client" + d], w["offset" + d], w["scroll" + d], T(10) ? parseInt(w["offset" + d]) + parseInt(O["margin" + (d === "Height" ? "Top" : "Left")]) + parseInt(O["margin" + (d === "Height" ? "Bottom" : "Right")]) : 0);
          }
          function ae(d) {
            var y = d.body, w = d.documentElement, O = T(10) && getComputedStyle(w);
            return {
              height: j("Height", y, w, O),
              width: j("Width", y, w, O)
            };
          }
          var Y = function(d, y) {
            if (!(d instanceof y))
              throw new TypeError("Cannot call a class as a function");
          }, he = /* @__PURE__ */ function() {
            function d(y, w) {
              for (var O = 0; O < w.length; O++) {
                var P = w[O];
                P.enumerable = P.enumerable || !1, P.configurable = !0, "value" in P && (P.writable = !0), Object.defineProperty(y, P.key, P);
              }
            }
            return function(y, w, O) {
              return w && d(y.prototype, w), O && d(y, O), y;
            };
          }(), we = function(d, y, w) {
            return y in d ? Object.defineProperty(d, y, {
              value: w,
              enumerable: !0,
              configurable: !0,
              writable: !0
            }) : d[y] = w, d;
          }, be = Object.assign || function(d) {
            for (var y = 1; y < arguments.length; y++) {
              var w = arguments[y];
              for (var O in w)
                Object.prototype.hasOwnProperty.call(w, O) && (d[O] = w[O]);
            }
            return d;
          };
          function ie(d) {
            return be({}, d, {
              right: d.left + d.width,
              bottom: d.top + d.height
            });
          }
          function Ee(d) {
            var y = {};
            try {
              if (T(10)) {
                y = d.getBoundingClientRect();
                var w = W(d, "top"), O = W(d, "left");
                y.top += w, y.left += O, y.bottom += w, y.right += O;
              } else
                y = d.getBoundingClientRect();
            } catch {
            }
            var P = {
              left: y.left,
              top: y.top,
              width: y.right - y.left,
              height: y.bottom - y.top
            }, z = d.nodeName === "HTML" ? ae(d.ownerDocument) : {}, U = z.width || d.clientWidth || P.width, K = z.height || d.clientHeight || P.height, re = d.offsetWidth - U, me = d.offsetHeight - K;
            if (re || me) {
              var _e = m(d);
              re -= R(_e, "x"), me -= R(_e, "y"), P.width -= re, P.height -= me;
            }
            return ie(P);
          }
          function A(d, y) {
            var w = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, O = T(10), P = y.nodeName === "HTML", z = Ee(d), U = Ee(y), K = h(d), re = m(y), me = parseFloat(re.borderTopWidth), _e = parseFloat(re.borderLeftWidth);
            w && P && (U.top = Math.max(U.top, 0), U.left = Math.max(U.left, 0));
            var fe = ie({
              top: z.top - U.top - me,
              left: z.left - U.left - _e,
              width: z.width,
              height: z.height
            });
            if (fe.marginTop = 0, fe.marginLeft = 0, !O && P) {
              var Oe = parseFloat(re.marginTop), Te = parseFloat(re.marginLeft);
              fe.top -= me - Oe, fe.bottom -= me - Oe, fe.left -= _e - Te, fe.right -= _e - Te, fe.marginTop = Oe, fe.marginLeft = Te;
            }
            return (O && !w ? y.contains(K) : y === K && K.nodeName !== "BODY") && (fe = Q(fe, y)), fe;
          }
          function B(d) {
            var y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, w = d.ownerDocument.documentElement, O = A(d, w), P = Math.max(w.clientWidth, window.innerWidth || 0), z = Math.max(w.clientHeight, window.innerHeight || 0), U = y ? 0 : W(w), K = y ? 0 : W(w, "left"), re = {
              top: U - O.top + O.marginTop,
              left: K - O.left + O.marginLeft,
              width: P,
              height: z
            };
            return ie(re);
          }
          function te(d) {
            var y = d.nodeName;
            if (y === "BODY" || y === "HTML")
              return !1;
            if (m(d, "position") === "fixed")
              return !0;
            var w = p(d);
            return w ? te(w) : !1;
          }
          function le(d) {
            if (!d || !d.parentElement || T())
              return document.documentElement;
            for (var y = d.parentElement; y && m(y, "transform") === "none"; )
              y = y.parentElement;
            return y || document.documentElement;
          }
          function ge(d, y, w, O) {
            var P = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1, z = { top: 0, left: 0 }, U = P ? le(d) : F(d, E(y));
            if (O === "viewport")
              z = B(U, P);
            else {
              var K = void 0;
              O === "scrollParent" ? (K = h(p(y)), K.nodeName === "BODY" && (K = d.ownerDocument.documentElement)) : O === "window" ? K = d.ownerDocument.documentElement : K = O;
              var re = A(K, U, P);
              if (K.nodeName === "HTML" && !te(U)) {
                var me = ae(d.ownerDocument), _e = me.height, fe = me.width;
                z.top += re.top - re.marginTop, z.bottom = _e + re.top, z.left += re.left - re.marginLeft, z.right = fe + re.left;
              } else
                z = re;
            }
            w = w || 0;
            var Oe = typeof w == "number";
            return z.left += Oe ? w : w.left || 0, z.top += Oe ? w : w.top || 0, z.right -= Oe ? w : w.right || 0, z.bottom -= Oe ? w : w.bottom || 0, z;
          }
          function We(d) {
            var y = d.width, w = d.height;
            return y * w;
          }
          function tt(d, y, w, O, P) {
            var z = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
            if (d.indexOf("auto") === -1)
              return d;
            var U = ge(w, O, z, P), K = {
              top: {
                width: U.width,
                height: y.top - U.top
              },
              right: {
                width: U.right - y.right,
                height: U.height
              },
              bottom: {
                width: U.width,
                height: U.bottom - y.bottom
              },
              left: {
                width: y.left - U.left,
                height: U.height
              }
            }, re = Object.keys(K).map(function(Oe) {
              return be({
                key: Oe
              }, K[Oe], {
                area: We(K[Oe])
              });
            }).sort(function(Oe, Te) {
              return Te.area - Oe.area;
            }), me = re.filter(function(Oe) {
              var Te = Oe.width, De = Oe.height;
              return Te >= w.clientWidth && De >= w.clientHeight;
            }), _e = me.length > 0 ? me[0].key : re[0].key, fe = d.split("-")[1];
            return _e + (fe ? "-" + fe : "");
          }
          function St(d, y, w) {
            var O = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null, P = O ? le(y) : F(y, E(w));
            return A(w, P, O);
          }
          function ut(d) {
            var y = d.ownerDocument.defaultView, w = y.getComputedStyle(d), O = parseFloat(w.marginTop || 0) + parseFloat(w.marginBottom || 0), P = parseFloat(w.marginLeft || 0) + parseFloat(w.marginRight || 0), z = {
              width: d.offsetWidth + P,
              height: d.offsetHeight + O
            };
            return z;
          }
          function Lt(d) {
            var y = { left: "right", right: "left", bottom: "top", top: "bottom" };
            return d.replace(/left|right|bottom|top/g, function(w) {
              return y[w];
            });
          }
          function tn(d, y, w) {
            w = w.split("-")[0];
            var O = ut(d), P = {
              width: O.width,
              height: O.height
            }, z = ["right", "left"].indexOf(w) !== -1, U = z ? "top" : "left", K = z ? "left" : "top", re = z ? "height" : "width", me = z ? "width" : "height";
            return P[U] = y[U] + y[re] / 2 - O[re] / 2, w === K ? P[K] = y[K] - O[me] : P[K] = y[Lt(K)], P;
          }
          function nn(d, y) {
            return Array.prototype.find ? d.find(y) : d.filter(y)[0];
          }
          function mn(d, y, w) {
            if (Array.prototype.findIndex)
              return d.findIndex(function(P) {
                return P[y] === w;
              });
            var O = nn(d, function(P) {
              return P[y] === w;
            });
            return d.indexOf(O);
          }
          function Rn(d, y, w) {
            var O = w === void 0 ? d : d.slice(0, mn(d, "name", w));
            return O.forEach(function(P) {
              P.function && console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
              var z = P.function || P.fn;
              P.enabled && f(z) && (y.offsets.popper = ie(y.offsets.popper), y.offsets.reference = ie(y.offsets.reference), y = z(y, P));
            }), y;
          }
          function jn() {
            if (!this.state.isDestroyed) {
              var d = {
                instance: this,
                styles: {},
                arrowStyles: {},
                attributes: {},
                flipped: !1,
                offsets: {}
              };
              d.offsets.reference = St(this.state, this.popper, this.reference, this.options.positionFixed), d.placement = tt(this.options.placement, d.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), d.originalPlacement = d.placement, d.positionFixed = this.options.positionFixed, d.offsets.popper = tn(this.popper, d.offsets.reference, d.placement), d.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute", d = Rn(this.modifiers, d), this.state.isCreated ? this.options.onUpdate(d) : (this.state.isCreated = !0, this.options.onCreate(d));
            }
          }
          function g(d, y) {
            return d.some(function(w) {
              var O = w.name, P = w.enabled;
              return P && O === y;
            });
          }
          function v(d) {
            for (var y = [!1, "ms", "Webkit", "Moz", "O"], w = d.charAt(0).toUpperCase() + d.slice(1), O = 0; O < y.length; O++) {
              var P = y[O], z = P ? "" + P + w : d;
              if (typeof document.body.style[z] < "u")
                return z;
            }
            return null;
          }
          function M() {
            return this.state.isDestroyed = !0, g(this.modifiers, "applyStyle") && (this.popper.removeAttribute("x-placement"), this.popper.style.position = "", this.popper.style.top = "", this.popper.style.left = "", this.popper.style.right = "", this.popper.style.bottom = "", this.popper.style.willChange = "", this.popper.style[v("transform")] = ""), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;
          }
          function $(d) {
            var y = d.ownerDocument;
            return y ? y.defaultView : window;
          }
          function V(d, y, w, O) {
            var P = d.nodeName === "BODY", z = P ? d.ownerDocument.defaultView : d;
            z.addEventListener(y, w, { passive: !0 }), P || V(h(z.parentNode), y, w, O), O.push(z);
          }
          function Z(d, y, w, O) {
            w.updateBound = O, $(d).addEventListener("resize", w.updateBound, { passive: !0 });
            var P = h(d);
            return V(P, "scroll", w.updateBound, w.scrollParents), w.scrollElement = P, w.eventsEnabled = !0, w;
          }
          function ne() {
            this.state.eventsEnabled || (this.state = Z(this.reference, this.options, this.state, this.scheduleUpdate));
          }
          function ee(d, y) {
            return $(d).removeEventListener("resize", y.updateBound), y.scrollParents.forEach(function(w) {
              w.removeEventListener("scroll", y.updateBound);
            }), y.updateBound = null, y.scrollParents = [], y.scrollElement = null, y.eventsEnabled = !1, y;
          }
          function X() {
            this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = ee(this.reference, this.state));
          }
          function G(d) {
            return d !== "" && !isNaN(parseFloat(d)) && isFinite(d);
          }
          function ye(d, y) {
            Object.keys(y).forEach(function(w) {
              var O = "";
              ["width", "height", "top", "right", "bottom", "left"].indexOf(w) !== -1 && G(y[w]) && (O = "px"), d.style[w] = y[w] + O;
            });
          }
          function se(d, y) {
            Object.keys(y).forEach(function(w) {
              var O = y[w];
              O !== !1 ? d.setAttribute(w, y[w]) : d.removeAttribute(w);
            });
          }
          function pe(d) {
            return ye(d.instance.popper, d.styles), se(d.instance.popper, d.attributes), d.arrowElement && Object.keys(d.arrowStyles).length && ye(d.arrowElement, d.arrowStyles), d;
          }
          function ke(d, y, w, O, P) {
            var z = St(P, y, d, w.positionFixed), U = tt(w.placement, z, y, d, w.modifiers.flip.boundariesElement, w.modifiers.flip.padding);
            return y.setAttribute("x-placement", U), ye(y, { position: w.positionFixed ? "fixed" : "absolute" }), w;
          }
          function Fe(d, y) {
            var w = d.offsets, O = w.popper, P = w.reference, z = Math.round, U = Math.floor, K = function(bn) {
              return bn;
            }, re = z(P.width), me = z(O.width), _e = ["left", "right"].indexOf(d.placement) !== -1, fe = d.placement.indexOf("-") !== -1, Oe = re % 2 === me % 2, Te = re % 2 === 1 && me % 2 === 1, De = y ? _e || fe || Oe ? z : U : K, Ke = y ? z : K;
            return {
              left: De(Te && !fe && y ? O.left - 1 : O.left),
              top: Ke(O.top),
              bottom: Ke(O.bottom),
              right: De(O.right)
            };
          }
          var Ve = u && /Firefox/i.test(navigator.userAgent);
          function Ne(d, y) {
            var w = y.x, O = y.y, P = d.offsets.popper, z = nn(d.instance.modifiers, function(gn) {
              return gn.name === "applyStyle";
            }).gpuAcceleration;
            z !== void 0 && console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");
            var U = z !== void 0 ? z : y.gpuAcceleration, K = b(d.instance.popper), re = Ee(K), me = {
              position: P.position
            }, _e = Fe(d, window.devicePixelRatio < 2 || !Ve), fe = w === "bottom" ? "top" : "bottom", Oe = O === "right" ? "left" : "right", Te = v("transform"), De = void 0, Ke = void 0;
            if (fe === "bottom" ? K.nodeName === "HTML" ? Ke = -K.clientHeight + _e.bottom : Ke = -re.height + _e.bottom : Ke = _e.top, Oe === "right" ? K.nodeName === "HTML" ? De = -K.clientWidth + _e.right : De = -re.width + _e.right : De = _e.left, U && Te)
              me[Te] = "translate3d(" + De + "px, " + Ke + "px, 0)", me[fe] = 0, me[Oe] = 0, me.willChange = "transform";
            else {
              var un = fe === "bottom" ? -1 : 1, bn = Oe === "right" ? -1 : 1;
              me[fe] = Ke * un, me[Oe] = De * bn, me.willChange = fe + ", " + Oe;
            }
            var Pt = {
              "x-placement": d.placement
            };
            return d.attributes = be({}, Pt, d.attributes), d.styles = be({}, me, d.styles), d.arrowStyles = be({}, d.offsets.arrow, d.arrowStyles), d;
          }
          function st(d, y, w) {
            var O = nn(d, function(K) {
              var re = K.name;
              return re === y;
            }), P = !!O && d.some(function(K) {
              return K.name === w && K.enabled && K.order < O.order;
            });
            if (!P) {
              var z = "`" + y + "`", U = "`" + w + "`";
              console.warn(U + " modifier is required by " + z + " modifier in order to work, be sure to include it before " + z + "!");
            }
            return P;
          }
          function nt(d, y) {
            var w;
            if (!st(d.instance.modifiers, "arrow", "keepTogether"))
              return d;
            var O = y.element;
            if (typeof O == "string") {
              if (O = d.instance.popper.querySelector(O), !O)
                return d;
            } else if (!d.instance.popper.contains(O))
              return console.warn("WARNING: `arrow.element` must be child of its popper element!"), d;
            var P = d.placement.split("-")[0], z = d.offsets, U = z.popper, K = z.reference, re = ["left", "right"].indexOf(P) !== -1, me = re ? "height" : "width", _e = re ? "Top" : "Left", fe = _e.toLowerCase(), Oe = re ? "left" : "top", Te = re ? "bottom" : "right", De = ut(O)[me];
            K[Te] - De < U[fe] && (d.offsets.popper[fe] -= U[fe] - (K[Te] - De)), K[fe] + De > U[Te] && (d.offsets.popper[fe] += K[fe] + De - U[Te]), d.offsets.popper = ie(d.offsets.popper);
            var Ke = K[fe] + K[me] / 2 - De / 2, un = m(d.instance.popper), bn = parseFloat(un["margin" + _e]), Pt = parseFloat(un["border" + _e + "Width"]), gn = Ke - d.offsets.popper[fe] - bn - Pt;
            return gn = Math.max(Math.min(U[me] - De, gn), 0), d.arrowElement = O, d.offsets.arrow = (w = {}, we(w, fe, Math.round(gn)), we(w, Oe, ""), w), d;
          }
          function Tt(d) {
            return d === "end" ? "start" : d === "start" ? "end" : d;
          }
          var pt = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"], rn = pt.slice(3);
          function Bn(d) {
            var y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, w = rn.indexOf(d), O = rn.slice(w + 1).concat(rn.slice(0, w));
            return y ? O.reverse() : O;
          }
          var ot = {
            FLIP: "flip",
            CLOCKWISE: "clockwise",
            COUNTERCLOCKWISE: "counterclockwise"
          };
          function zt(d, y) {
            if (g(d.instance.modifiers, "inner") || d.flipped && d.placement === d.originalPlacement)
              return d;
            var w = ge(d.instance.popper, d.instance.reference, y.padding, y.boundariesElement, d.positionFixed), O = d.placement.split("-")[0], P = Lt(O), z = d.placement.split("-")[1] || "", U = [];
            switch (y.behavior) {
              case ot.FLIP:
                U = [O, P];
                break;
              case ot.CLOCKWISE:
                U = Bn(O);
                break;
              case ot.COUNTERCLOCKWISE:
                U = Bn(O, !0);
                break;
              default:
                U = y.behavior;
            }
            return U.forEach(function(K, re) {
              if (O !== K || U.length === re + 1)
                return d;
              O = d.placement.split("-")[0], P = Lt(O);
              var me = d.offsets.popper, _e = d.offsets.reference, fe = Math.floor, Oe = O === "left" && fe(me.right) > fe(_e.left) || O === "right" && fe(me.left) < fe(_e.right) || O === "top" && fe(me.bottom) > fe(_e.top) || O === "bottom" && fe(me.top) < fe(_e.bottom), Te = fe(me.left) < fe(w.left), De = fe(me.right) > fe(w.right), Ke = fe(me.top) < fe(w.top), un = fe(me.bottom) > fe(w.bottom), bn = O === "left" && Te || O === "right" && De || O === "top" && Ke || O === "bottom" && un, Pt = ["top", "bottom"].indexOf(O) !== -1, gn = !!y.flipVariations && (Pt && z === "start" && Te || Pt && z === "end" && De || !Pt && z === "start" && Ke || !Pt && z === "end" && un), Vs = !!y.flipVariationsByContent && (Pt && z === "start" && De || Pt && z === "end" && Te || !Pt && z === "start" && un || !Pt && z === "end" && Ke), Or = gn || Vs;
              (Oe || bn || Or) && (d.flipped = !0, (Oe || bn) && (O = U[re + 1]), Or && (z = Tt(z)), d.placement = O + (z ? "-" + z : ""), d.offsets.popper = be({}, d.offsets.popper, tn(d.instance.popper, d.offsets.reference, d.placement)), d = Rn(d.instance.modifiers, d, "flip"));
            }), d;
          }
          function Sr(d) {
            var y = d.offsets, w = y.popper, O = y.reference, P = d.placement.split("-")[0], z = Math.floor, U = ["top", "bottom"].indexOf(P) !== -1, K = U ? "right" : "bottom", re = U ? "left" : "top", me = U ? "width" : "height";
            return w[K] < z(O[re]) && (d.offsets.popper[re] = z(O[re]) - w[me]), w[re] > z(O[K]) && (d.offsets.popper[re] = z(O[K])), d;
          }
          function ru(d, y, w, O) {
            var P = d.match(/((?:\-|\+)?\d*\.?\d*)(.*)/), z = +P[1], U = P[2];
            if (!z)
              return d;
            if (U.indexOf("%") === 0) {
              var K = void 0;
              switch (U) {
                case "%p":
                  K = w;
                  break;
                case "%":
                case "%r":
                default:
                  K = O;
              }
              var re = ie(K);
              return re[y] / 100 * z;
            } else if (U === "vh" || U === "vw") {
              var me = void 0;
              return U === "vh" ? me = Math.max(document.documentElement.clientHeight, window.innerHeight || 0) : me = Math.max(document.documentElement.clientWidth, window.innerWidth || 0), me / 100 * z;
            } else
              return z;
          }
          function Ns(d, y, w, O) {
            var P = [0, 0], z = ["right", "left"].indexOf(O) !== -1, U = d.split(/(\+|\-)/).map(function(_e) {
              return _e.trim();
            }), K = U.indexOf(nn(U, function(_e) {
              return _e.search(/,|\s/) !== -1;
            }));
            U[K] && U[K].indexOf(",") === -1 && console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
            var re = /\s*,\s*|\s+/, me = K !== -1 ? [U.slice(0, K).concat([U[K].split(re)[0]]), [U[K].split(re)[1]].concat(U.slice(K + 1))] : [U];
            return me = me.map(function(_e, fe) {
              var Oe = (fe === 1 ? !z : z) ? "height" : "width", Te = !1;
              return _e.reduce(function(De, Ke) {
                return De[De.length - 1] === "" && ["+", "-"].indexOf(Ke) !== -1 ? (De[De.length - 1] = Ke, Te = !0, De) : Te ? (De[De.length - 1] += Ke, Te = !1, De) : De.concat(Ke);
              }, []).map(function(De) {
                return ru(De, Oe, y, w);
              });
            }), me.forEach(function(_e, fe) {
              _e.forEach(function(Oe, Te) {
                G(Oe) && (P[fe] += Oe * (_e[Te - 1] === "-" ? -1 : 1));
              });
            }), P;
          }
          function Is(d, y) {
            var w = y.offset, O = d.placement, P = d.offsets, z = P.popper, U = P.reference, K = O.split("-")[0], re = void 0;
            return G(+w) ? re = [+w, 0] : re = Ns(w, z, U, K), K === "left" ? (z.top += re[0], z.left -= re[1]) : K === "right" ? (z.top += re[0], z.left += re[1]) : K === "top" ? (z.left += re[0], z.top -= re[1]) : K === "bottom" && (z.left += re[0], z.top += re[1]), d.popper = z, d;
          }
          function Ls(d, y) {
            var w = y.boundariesElement || b(d.instance.popper);
            d.instance.reference === w && (w = b(w));
            var O = v("transform"), P = d.instance.popper.style, z = P.top, U = P.left, K = P[O];
            P.top = "", P.left = "", P[O] = "";
            var re = ge(d.instance.popper, d.instance.reference, y.padding, w, d.positionFixed);
            P.top = z, P.left = U, P[O] = K, y.boundaries = re;
            var me = y.priority, _e = d.offsets.popper, fe = {
              primary: function(Te) {
                var De = _e[Te];
                return _e[Te] < re[Te] && !y.escapeWithReference && (De = Math.max(_e[Te], re[Te])), we({}, Te, De);
              },
              secondary: function(Te) {
                var De = Te === "right" ? "left" : "top", Ke = _e[De];
                return _e[Te] > re[Te] && !y.escapeWithReference && (Ke = Math.min(_e[De], re[Te] - (Te === "right" ? _e.width : _e.height))), we({}, De, Ke);
              }
            };
            return me.forEach(function(Oe) {
              var Te = ["left", "top"].indexOf(Oe) !== -1 ? "primary" : "secondary";
              _e = be({}, _e, fe[Te](Oe));
            }), d.offsets.popper = _e, d;
          }
          function zs(d) {
            var y = d.placement, w = y.split("-")[0], O = y.split("-")[1];
            if (O) {
              var P = d.offsets, z = P.reference, U = P.popper, K = ["bottom", "top"].indexOf(w) !== -1, re = K ? "left" : "top", me = K ? "width" : "height", _e = {
                start: we({}, re, z[re]),
                end: we({}, re, z[re] + z[me] - U[me])
              };
              d.offsets.popper = be({}, U, _e[O]);
            }
            return d;
          }
          function Ps(d) {
            if (!st(d.instance.modifiers, "hide", "preventOverflow"))
              return d;
            var y = d.offsets.reference, w = nn(d.instance.modifiers, function(O) {
              return O.name === "preventOverflow";
            }).boundaries;
            if (y.bottom < w.top || y.left > w.right || y.top > w.bottom || y.right < w.left) {
              if (d.hide === !0)
                return d;
              d.hide = !0, d.attributes["x-out-of-boundaries"] = "";
            } else {
              if (d.hide === !1)
                return d;
              d.hide = !1, d.attributes["x-out-of-boundaries"] = !1;
            }
            return d;
          }
          function Rs(d) {
            var y = d.placement, w = y.split("-")[0], O = d.offsets, P = O.popper, z = O.reference, U = ["left", "right"].indexOf(w) !== -1, K = ["top", "left"].indexOf(w) === -1;
            return P[U ? "left" : "top"] = z[w] - (K ? P[U ? "width" : "height"] : 0), d.placement = Lt(y), d.offsets.popper = ie(P), d;
          }
          var js = {
            /**
             * Modifier used to shift the popper on the start or end of its reference
             * element.<br />
             * It will read the variation of the `placement` property.<br />
             * It can be one either `-end` or `-start`.
             * @memberof modifiers
             * @inner
             */
            shift: {
              /** @prop {number} order=100 - Index used to define the order of execution */
              order: 100,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: zs
            },
            /**
             * The `offset` modifier can shift your popper on both its axis.
             *
             * It accepts the following units:
             * - `px` or unit-less, interpreted as pixels
             * - `%` or `%r`, percentage relative to the length of the reference element
             * - `%p`, percentage relative to the length of the popper element
             * - `vw`, CSS viewport width unit
             * - `vh`, CSS viewport height unit
             *
             * For length is intended the main axis relative to the placement of the popper.<br />
             * This means that if the placement is `top` or `bottom`, the length will be the
             * `width`. In case of `left` or `right`, it will be the `height`.
             *
             * You can provide a single value (as `Number` or `String`), or a pair of values
             * as `String` divided by a comma or one (or more) white spaces.<br />
             * The latter is a deprecated method because it leads to confusion and will be
             * removed in v2.<br />
             * Additionally, it accepts additions and subtractions between different units.
             * Note that multiplications and divisions aren't supported.
             *
             * Valid examples are:
             * ```
             * 10
             * '10%'
             * '10, 10'
             * '10%, 10'
             * '10 + 10%'
             * '10 - 5vh + 3%'
             * '-10px + 5vh, 5px - 6%'
             * ```
             * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
             * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
             * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
             *
             * @memberof modifiers
             * @inner
             */
            offset: {
              /** @prop {number} order=200 - Index used to define the order of execution */
              order: 200,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: Is,
              /** @prop {Number|String} offset=0
               * The offset value as described in the modifier description
               */
              offset: 0
            },
            /**
             * Modifier used to prevent the popper from being positioned outside the boundary.
             *
             * A scenario exists where the reference itself is not within the boundaries.<br />
             * We can say it has "escaped the boundaries" — or just "escaped".<br />
             * In this case we need to decide whether the popper should either:
             *
             * - detach from the reference and remain "trapped" in the boundaries, or
             * - if it should ignore the boundary and "escape with its reference"
             *
             * When `escapeWithReference` is set to`true` and reference is completely
             * outside its boundaries, the popper will overflow (or completely leave)
             * the boundaries in order to remain attached to the edge of the reference.
             *
             * @memberof modifiers
             * @inner
             */
            preventOverflow: {
              /** @prop {number} order=300 - Index used to define the order of execution */
              order: 300,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: Ls,
              /**
               * @prop {Array} [priority=['left','right','top','bottom']]
               * Popper will try to prevent overflow following these priorities by default,
               * then, it could overflow on the left and on top of the `boundariesElement`
               */
              priority: ["left", "right", "top", "bottom"],
              /**
               * @prop {number} padding=5
               * Amount of pixel used to define a minimum distance between the boundaries
               * and the popper. This makes sure the popper always has a little padding
               * between the edges of its container
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='scrollParent'
               * Boundaries used by the modifier. Can be `scrollParent`, `window`,
               * `viewport` or any DOM element.
               */
              boundariesElement: "scrollParent"
            },
            /**
             * Modifier used to make sure the reference and its popper stay near each other
             * without leaving any gap between the two. Especially useful when the arrow is
             * enabled and you want to ensure that it points to its reference element.
             * It cares only about the first axis. You can still have poppers with margin
             * between the popper and its reference element.
             * @memberof modifiers
             * @inner
             */
            keepTogether: {
              /** @prop {number} order=400 - Index used to define the order of execution */
              order: 400,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: Sr
            },
            /**
             * This modifier is used to move the `arrowElement` of the popper to make
             * sure it is positioned between the reference element and its popper element.
             * It will read the outer size of the `arrowElement` node to detect how many
             * pixels of conjunction are needed.
             *
             * It has no effect if no `arrowElement` is provided.
             * @memberof modifiers
             * @inner
             */
            arrow: {
              /** @prop {number} order=500 - Index used to define the order of execution */
              order: 500,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: nt,
              /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
              element: "[x-arrow]"
            },
            /**
             * Modifier used to flip the popper's placement when it starts to overlap its
             * reference element.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             *
             * **NOTE:** this modifier will interrupt the current update cycle and will
             * restart it if it detects the need to flip the placement.
             * @memberof modifiers
             * @inner
             */
            flip: {
              /** @prop {number} order=600 - Index used to define the order of execution */
              order: 600,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: zt,
              /**
               * @prop {String|Array} behavior='flip'
               * The behavior used to change the popper's placement. It can be one of
               * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
               * placements (with optional variations)
               */
              behavior: "flip",
              /**
               * @prop {number} padding=5
               * The popper will flip if it hits the edges of the `boundariesElement`
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='viewport'
               * The element which will define the boundaries of the popper position.
               * The popper will never be placed outside of the defined boundaries
               * (except if `keepTogether` is enabled)
               */
              boundariesElement: "viewport",
              /**
               * @prop {Boolean} flipVariations=false
               * The popper will switch placement variation between `-start` and `-end` when
               * the reference element overlaps its boundaries.
               *
               * The original placement should have a set variation.
               */
              flipVariations: !1,
              /**
               * @prop {Boolean} flipVariationsByContent=false
               * The popper will switch placement variation between `-start` and `-end` when
               * the popper element overlaps its reference boundaries.
               *
               * The original placement should have a set variation.
               */
              flipVariationsByContent: !1
            },
            /**
             * Modifier used to make the popper flow toward the inner of the reference element.
             * By default, when this modifier is disabled, the popper will be placed outside
             * the reference element.
             * @memberof modifiers
             * @inner
             */
            inner: {
              /** @prop {number} order=700 - Index used to define the order of execution */
              order: 700,
              /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
              enabled: !1,
              /** @prop {ModifierFn} */
              fn: Rs
            },
            /**
             * Modifier used to hide the popper when its reference element is outside of the
             * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
             * be used to hide with a CSS selector the popper when its reference is
             * out of boundaries.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             * @memberof modifiers
             * @inner
             */
            hide: {
              /** @prop {number} order=800 - Index used to define the order of execution */
              order: 800,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: Ps
            },
            /**
             * Computes the style that will be applied to the popper element to gets
             * properly positioned.
             *
             * Note that this modifier will not touch the DOM, it just prepares the styles
             * so that `applyStyle` modifier can apply it. This separation is useful
             * in case you need to replace `applyStyle` with a custom implementation.
             *
             * This modifier has `850` as `order` value to maintain backward compatibility
             * with previous versions of Popper.js. Expect the modifiers ordering method
             * to change in future major versions of the library.
             *
             * @memberof modifiers
             * @inner
             */
            computeStyle: {
              /** @prop {number} order=850 - Index used to define the order of execution */
              order: 850,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: Ne,
              /**
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3D transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties
               */
              gpuAcceleration: !0,
              /**
               * @prop {string} [x='bottom']
               * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
               * Change this if your popper should grow in a direction different from `bottom`
               */
              x: "bottom",
              /**
               * @prop {string} [x='left']
               * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
               * Change this if your popper should grow in a direction different from `right`
               */
              y: "right"
            },
            /**
             * Applies the computed styles to the popper element.
             *
             * All the DOM manipulations are limited to this modifier. This is useful in case
             * you want to integrate Popper.js inside a framework or view library and you
             * want to delegate all the DOM manipulations to it.
             *
             * Note that if you disable this modifier, you must make sure the popper element
             * has its position set to `absolute` before Popper.js can do its work!
             *
             * Just disable this modifier and define your own to achieve the desired effect.
             *
             * @memberof modifiers
             * @inner
             */
            applyStyle: {
              /** @prop {number} order=900 - Index used to define the order of execution */
              order: 900,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: !0,
              /** @prop {ModifierFn} */
              fn: pe,
              /** @prop {Function} */
              onLoad: ke,
              /**
               * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3D transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties
               */
              gpuAcceleration: void 0
            }
          }, Bs = {
            /**
             * Popper's placement.
             * @prop {Popper.placements} placement='bottom'
             */
            placement: "bottom",
            /**
             * Set this to true if you want popper to position it self in 'fixed' mode
             * @prop {Boolean} positionFixed=false
             */
            positionFixed: !1,
            /**
             * Whether events (resize, scroll) are initially enabled.
             * @prop {Boolean} eventsEnabled=true
             */
            eventsEnabled: !0,
            /**
             * Set to true if you want to automatically remove the popper when
             * you call the `destroy` method.
             * @prop {Boolean} removeOnDestroy=false
             */
            removeOnDestroy: !1,
            /**
             * Callback called when the popper is created.<br />
             * By default, it is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onCreate}
             */
            onCreate: function() {
            },
            /**
             * Callback called when the popper is updated. This callback is not called
             * on the initialization/creation of the popper, but only on subsequent
             * updates.<br />
             * By default, it is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onUpdate}
             */
            onUpdate: function() {
            },
            /**
             * List of modifiers used to modify the offsets before they are applied to the popper.
             * They provide most of the functionalities of Popper.js.
             * @prop {modifiers}
             */
            modifiers: js
          }, Tr = function() {
            function d(y, w) {
              var O = this, P = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
              Y(this, d), this.scheduleUpdate = function() {
                return requestAnimationFrame(O.update);
              }, this.update = l(this.update.bind(this)), this.options = be({}, d.Defaults, P), this.state = {
                isDestroyed: !1,
                isCreated: !1,
                scrollParents: []
              }, this.reference = y && y.jquery ? y[0] : y, this.popper = w && w.jquery ? w[0] : w, this.options.modifiers = {}, Object.keys(be({}, d.Defaults.modifiers, P.modifiers)).forEach(function(U) {
                O.options.modifiers[U] = be({}, d.Defaults.modifiers[U] || {}, P.modifiers ? P.modifiers[U] : {});
              }), this.modifiers = Object.keys(this.options.modifiers).map(function(U) {
                return be({
                  name: U
                }, O.options.modifiers[U]);
              }).sort(function(U, K) {
                return U.order - K.order;
              }), this.modifiers.forEach(function(U) {
                U.enabled && f(U.onLoad) && U.onLoad(O.reference, O.popper, O.options, U, O.state);
              }), this.update();
              var z = this.options.eventsEnabled;
              z && this.enableEventListeners(), this.state.eventsEnabled = z;
            }
            return he(d, [{
              key: "update",
              value: function() {
                return jn.call(this);
              }
            }, {
              key: "destroy",
              value: function() {
                return M.call(this);
              }
            }, {
              key: "enableEventListeners",
              value: function() {
                return ne.call(this);
              }
            }, {
              key: "disableEventListeners",
              value: function() {
                return X.call(this);
              }
              /**
               * Schedules an update. It will run on the next UI update available.
               * @method scheduleUpdate
               * @memberof Popper
               */
              /**
               * Collection of utilities useful when writing custom modifiers.
               * Starting from version 1.7, this method is available only if you
               * include `popper-utils.js` before `popper.js`.
               *
               * **DEPRECATION**: This way to access PopperUtils is deprecated
               * and will be removed in v2! Use the PopperUtils module directly instead.
               * Due to the high instability of the methods contained in Utils, we can't
               * guarantee them to follow semver. Use them at your own risk!
               * @static
               * @private
               * @type {Object}
               * @deprecated since version 1.8
               * @member Utils
               * @memberof Popper
               */
            }]), d;
          }();
          Tr.Utils = (typeof window < "u" ? window : i).PopperUtils, Tr.placements = pt, Tr.Defaults = Bs, n.a = Tr;
        }).call(this, r("c8ba"));
      }
    ),
    /***/
    fb15: (
      /***/
      function(t, n, r) {
        if (r.r(n), r.d(n, "Scrollbars", function() {
          return (
            /* reexport */
            a
          );
        }), typeof window < "u") {
          var i = window.document.currentScript;
          {
            var u = r("8875");
            i = u(), "currentScript" in document || Object.defineProperty(document, "currentScript", { get: u });
          }
          var s = i && i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
          s && (r.p = s[1]);
        }
        var o = r("6dd8");
        class a {
          constructor(D, x) {
            if (this.options = x, this.onScroll = this.onScroll.bind(this), this.onDocumentMousemove = this.onDocumentMousemove.bind(this), this.onDocumentMouseup = this.onDocumentMouseup.bind(this), this.onThumbMousedownX = this.onThumbMousedown.bind(this, "x"), this.onThumbMousedownY = this.onThumbMousedown.bind(this, "y"), this.onResize = this.onResize.bind(this), this.el = D, this.railsParent = x.railsParent || this.el, this.refreshStyling(), x.scrollX && this.createRail("x"), x.scrollY && this.createRail("y"), x.manualCompute || (this.computeDimensions(), this.computeThumbPositions(), this.update()), this.el.addEventListener("scroll", this.onScroll), !x.manualUpdate) {
              this.resizeObserver = new o.a(this.onResize), this.resizeObserver.observe(this.el);
              for (const I of this.el.children)
                this.resizeObserver.observe(I);
              this.mutationObserver = new MutationObserver((I) => {
                for (const oe of I) {
                  for (const q of oe.addedNodes)
                    q.nodeType === Node.ELEMENT_NODE && this.resizeObserver.observe(q);
                  for (const q of oe.removedNodes)
                    q.nodeType === Node.ELEMENT_NODE && this.resizeObserver.unobserve(q);
                }
                this.onResize();
              }), this.mutationObserver.observe(this.el, {
                childList: !0
              });
            }
          }
          createRail(D) {
            const x = document.createElement("div");
            x.classList.add(`bunt-scrollbar-rail-wrapper-${D}`);
            const I = document.createElement("div");
            I.classList.add(`bunt-scrollbar-rail-${D}`);
            const oe = document.createElement("div");
            oe.classList.add("bunt-scrollbar-thumb"), x.appendChild(I), I.appendChild(oe), this.railsParent.appendChild(x), oe.addEventListener("mousedown", this[`onThumbMousedown${D.toUpperCase()}`]), this[D] = {
              railEl: I,
              thumbEl: oe
            };
          }
          destroy() {
            var D, x, I, oe;
            (D = this.resizeObserver) === null || D === void 0 || D.disconnect(), (x = this.mutationObserver) === null || x === void 0 || x.disconnect(), document.removeEventListener("mousemove", this.onDocumentMousemove), document.removeEventListener("mouseup", this.onDocumentMouseup, {
              capture: !0
            }), this.el.removeEventListener("scroll", this.onScroll), (I = this.x) === null || I === void 0 || I.thumbEl.removeEventListener("mousedown", this.onThumbMousedownX), (oe = this.y) === null || oe === void 0 || oe.thumbEl.removeEventListener("mousedown", this.onThumbMousedownY);
          }
          refreshStyling() {
            this.el.classList.add("bunt-scrollbar");
          }
          update() {
            this.updateThumb("x"), this.updateThumb("y");
          }
          // EVENTS
          onScroll(D) {
            this.options.onScroll && this.options.onScroll(D), this.computeThumbPositions(), this.update();
          }
          onThumbMousedown(D, x) {
            x.stopPropagation(), this.options._preventMousedown && x.preventDefault(), this.dragging = D, this.draggingOffset = x[`offset${D.toUpperCase()}`], this.el.style.userSelect = "none", document.body.style["-moz-user-select"] = "none", this[D].railEl.classList.add("active"), document.addEventListener("mousemove", this.onDocumentMousemove), document.addEventListener("mouseup", this.onDocumentMouseup, {
              capture: !0
            });
          }
          onDocumentMousemove(D) {
            if (this.dragging === "x") {
              const x = this.el.clientWidth - this.x.thumbLength, I = D.clientX - this.el.getBoundingClientRect().left - this.draggingOffset;
              this.x.thumbPosition = Math.min(Math.max(0, I), x), this.el.scrollLeft = this.x.thumbPosition / x * (this.el.scrollWidth - this.el.clientWidth);
            }
            if (this.dragging === "y") {
              const x = this.el.clientHeight - this.y.thumbLength, I = D.clientY - this.el.getBoundingClientRect().top - this.draggingOffset;
              this.y.thumbPosition = Math.min(Math.max(0, I), x), this.el.scrollTop = this.y.thumbPosition / x * (this.el.scrollHeight - this.el.clientHeight);
            }
            this.updateThumb(this.dragging);
          }
          onDocumentMouseup(D) {
            this[this.dragging].railEl.classList.remove("active"), this.dragging = null, this.el.style.userSelect = "", document.body.style["-moz-user-select"] = "", document.removeEventListener("mousemove", this.onDocumentMousemove), document.removeEventListener("mouseup", this.onDocumentMouseup, {
              capture: !0
            });
          }
          onResize(D) {
            this.computeDimensions(), this.computeThumbPositions(), this.update();
          }
          // COMPUTATIONS
          computeDimensions() {
            this.x && (this.x.railLength = this.el.clientWidth, this.x.visibleRatio = this.el.clientWidth / this.el.scrollWidth, this.x.thumbLength = this.el.clientWidth * this.x.visibleRatio), this.y && (this.y.railLength = this.el.clientHeight, this.y.visibleRatio = this.el.clientHeight / this.el.scrollHeight, this.y.thumbLength = this.el.clientHeight * this.y.visibleRatio);
          }
          computeThumbPositions() {
            this.x && (this.x.thumbPosition = this.el.scrollLeft / (this.el.scrollWidth - this.el.clientWidth) * (this.el.clientWidth - this.x.thumbLength)), this.y && (this.y.thumbPosition = this.el.scrollTop / (this.el.scrollHeight - this.el.clientHeight) * (this.el.clientHeight - this.y.thumbLength));
          }
          updateThumb(D) {
            const x = this[D];
            x && (x.visibleRatio >= 1 ? x.thumbEl.style.display = "none" : (x.thumbEl.style.display = null, D === "x" ? (x.railEl.style.width = x.railLength + "px", x.thumbEl.style.width = x.thumbLength + "px", x.thumbEl.style.left = x.thumbPosition + "px") : D === "y" && (x.railEl.style.height = x.railLength + "px", x.thumbEl.style.height = x.thumbLength + "px", x.thumbEl.style.top = x.thumbPosition + "px")));
          }
        }
        var c = function(k) {
          k.directive("scrollbar", {
            mounted(D, x, I) {
              var oe;
              D.__buntpapier__scrollbar = new a(D, {
                scrollX: x.modifiers.x,
                scrollY: x.modifiers.y,
                _preventMousedown: (oe = x.value) === null || oe === void 0 ? void 0 : oe._preventMousedown
              }), D.__buntpapier__scrollbar.refreshStyling(), D.__buntpapier__scrollbar.update();
            },
            updated(D, x, I, oe) {
              D.__buntpapier__scrollbar ? (D.__buntpapier__scrollbar.refreshStyling(), D.__buntpapier__scrollbar.update()) : D.__buntpapier__scrollbar = new a(D, {
                scrollX: x.modifiers.x,
                scrollY: x.modifiers.y
              });
            },
            beforeUnmount(D, x, I, oe) {
              D.__buntpapier__scrollbar && D.__buntpapier__scrollbar.destroy();
            }
          });
        }, l = r("8bbf"), f = r("f0bd");
        const m = 32;
        var p = function(k) {
          class D {
            constructor(I, oe) {
              this.el = I, this.options = oe, this.show = this.show.bind(this), this.hide = this.hide.bind(this), this.options.placement = oe.placement || "auto", this.el.addEventListener("mouseenter", this.show), this.el.addEventListener("mouseleave", this.hide);
            }
            createTooltip() {
              this.tooltipEl || (this.tooltipEl = document.createElement("div"), this.tooltipEl.classList.add("bunt-tooltip"), this.tooltipEl.style.position = this.options.fixed ? "fixed" : "absolute", this.tooltipEl.textContent = this.text, this.el.appendChild(this.tooltipEl), this.popper = new f.a(this.el, this.tooltipEl, {
                removeOnDestroy: !0,
                placement: this.options.placement,
                positionFixed: this.options.fixed,
                modifiers: {
                  offset: {
                    offset: "0, 8"
                  },
                  applyStyle: {
                    enabled: !1
                  },
                  preventOverflow: {
                    boundariesElement: this.options.boundariesElement || "scrollParent"
                  },
                  applyTooltipStyle: {
                    enabled: !0,
                    fn: (I) => {
                      this.positions = I.popper, this.tooltipEl.style.transform = `translate3d(${Math.round(this.positions.left)}px, ${Math.round(this.positions.top)}px, 0)`;
                    },
                    order: 900
                  }
                }
              }));
            }
            update(I, oe) {
              this.text = I;
              const q = this.forceDisplay;
              this.forceDisplay = oe, Object(l.nextTick)(() => {
                oe ? q || this.show() : q && this.hide(), this.tooltipEl && (this.tooltipEl.textContent = this.text), this.popper && this.popper.update();
              });
            }
            destroyTooltip() {
              this.popper && (this.popper.destroy(), this.popper = null, this.tooltipEl = null);
            }
            destroy() {
              this.destroyTooltip(), this.el.removeEventListener("mouseenter", this.show), this.el.removeEventListener("mouseleave", this.hide);
            }
            show() {
              this.displaying || !this.text || (this.createTooltip(), this.displaying = !0, Object(l.nextTick)(() => {
                if (this.animation)
                  this.animation.reverse();
                else {
                  let I;
                  this.options.placement.startsWith("top") ? I = {
                    top: Math.round(this.positions.top) + m,
                    left: Math.round(this.positions.left)
                  } : this.options.placement.startsWith("left") ? I = {
                    top: Math.round(this.positions.top),
                    left: Math.round(this.positions.left) + m
                  } : this.options.placement.startsWith("right") ? I = {
                    top: Math.round(this.positions.top),
                    left: Math.round(this.positions.left) - m
                  } : I = {
                    top: Math.round(this.positions.top) - m,
                    left: Math.round(this.positions.left)
                  }, this.animation = this.tooltipEl.animate([{
                    transform: `translate3d(${I.left}px, ${I.top}px, 0)`,
                    opacity: 0
                  }, {
                    transform: `translate3d(${Math.round(this.positions.left)}px, ${Math.round(this.positions.top)}px, 0)`,
                    opacity: 1
                  }], {
                    duration: 200,
                    easing: "ease-in-out"
                  }), this.animation.onfinish = () => {
                    this.animation && this.animation.playbackRate < 0 && (this.destroyTooltip(), this.animation = null);
                  };
                }
              }));
            }
            hide() {
              !this.displaying || this.forceDisplay || (this.displaying = !1, this.animation && this.animation.reverse(), this.text || this.destroyTooltip());
            }
          }
          k.directive("tooltip", {
            mounted(x, I, oe) {
              let q;
              typeof I.value == "string" ? q = I.value : q = I.value.text, x.__buntpapier__tooltip = new D(x, {
                placement: I.value.placement || Object.keys(I.modifiers).find((xe) => ["auto", "top", "right", "bottom", "left"].find((Xe) => xe.startsWith(Xe))),
                fixed: I.value.fixed || I.modifiers.fixed,
                boundariesElement: I.value.boundariesElement
              }), x.__buntpapier__tooltip.update(q, I.value.show);
            },
            updated(x, I, oe, q) {
              if (!x.__buntpapier__tooltip || I.value === I.oldValue) return;
              let xe;
              typeof I.value == "string" ? xe = I.value : xe = I.value.text, x.__buntpapier__tooltip.update(xe, I.value.show);
            },
            unmounted(x, I, oe, q) {
              x.__buntpapier__tooltip && x.__buntpapier__tooltip.destroy();
            }
          });
        }, h = function(k) {
          k.directive("resizeObserver", {
            beforeMount(D, x) {
              const I = new o.a((oe) => {
                if (D.__buntpapier__resize_observer)
                  for (const q of D.__buntpapier__resize_observer.handlers)
                    q(oe);
              });
              D.__buntpapier__resize_observer ? D.__buntpapier__resize_observer.handlers.push(x.value) : D.__buntpapier__resize_observer = {
                observer: I,
                handlers: [x.value]
              }, I.observe(D);
            },
            beforeUnmount(D, x, I, oe) {
              D.__buntpapier__resize_observer && (D.__buntpapier__resize_observer.observer.disconnect(), D.__buntpapier__resize_observer = null);
            }
          }), c(k), p(k);
        };
        const E = ["type", "aria-disabled"], C = {
          class: "bunt-button-text"
        }, L = ["textContent"], T = {
          key: 0,
          class: "bunt-icon mdi mdi-replay error"
        }, b = {
          key: 1,
          class: "bunt-icon mdi mdi-check success"
        };
        function _(k, D, x, I, oe, q) {
          const xe = Object(l.resolveComponent)("progress-circular"), Xe = Object(l.resolveComponent)("ripple-ink"), Le = Object(l.resolveDirective)("tooltip");
          return Object(l.withDirectives)((Object(l.openBlock)(), Object(l.createElementBlock)("button", {
            class: Object(l.normalizeClass)(["bunt-button", {
              disabled: x.disabled || x.loading || oe.showSuccess,
              error: x.errorMessage || x.error,
              success: oe.showSuccess
            }]),
            type: x.type,
            ref: "button",
            onClick: D[0] || (D[0] = (...Ot) => q.onClick && q.onClick(...Ot)),
            "aria-disabled": x.disabled
          }, [Object(l.createElementVNode)("div", {
            class: Object(l.normalizeClass)(["bunt-button-content", {
              invisible: x.loading || x.errorMessage || x.error || oe.showSuccess
            }])
          }, [x.icon ? (Object(l.openBlock)(), Object(l.createElementBlock)("i", {
            key: 0,
            class: Object(l.normalizeClass)(["bunt-icon mdi", [q.iconClass]])
          }, null, 2)) : Object(l.createCommentVNode)("", !0), Object(l.createElementVNode)("div", C, [Object(l.renderSlot)(k.$slots, "default", {}, () => [Object(l.createElementVNode)("span", {
            textContent: Object(l.toDisplayString)(x.text)
          }, null, 8, L)])])], 2), Object(l.withDirectives)(Object(l.createVNode)(xe, {
            size: "small"
          }, null, 512), [[l.vShow, x.loading]]), x.errorMessage || x.error ? (Object(l.openBlock)(), Object(l.createElementBlock)("i", T)) : Object(l.createCommentVNode)("", !0), oe.showSuccess ? (Object(l.openBlock)(), Object(l.createElementBlock)("i", b)) : Object(l.createCommentVNode)("", !0), x.disabled ? Object(l.createCommentVNode)("", !0) : (Object(l.openBlock)(), Object(l.createBlock)(Xe, {
            key: 2
          }))], 10, E)), [[Le, x.tooltipOptions || {
            text: q._tooltip,
            show: !!this.errorMessage,
            placement: x.tooltipPlacement,
            fixed: x.tooltipFixed
          }]]);
        }
        function S(k, D, x, I, oe, q) {
          return Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: "bunt-ripple-ink",
            onMousedown: D[0] || (D[0] = (xe) => q.mousedown(xe)),
            onTouchstartPassive: D[1] || (D[1] = (xe) => q.touchstart(xe))
          }, [Object(l.createVNode)(l.Transition, {
            name: "ripple-ink"
          }, {
            default: Object(l.withCtx)(() => [oe.show ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", {
              key: 0,
              class: "ripple",
              style: Object(l.normalizeStyle)(oe.style)
            }, null, 4)) : Object(l.createCommentVNode)("", !0)]),
            _: 1
          })], 32);
        }
        var F = {
          name: "bunt-ripple-ink",
          data() {
            return {
              show: !1,
              style: null
            };
          },
          methods: {
            mousedown(k) {
              k.button === 0 && this.ripple(k.type, k);
            },
            touchstart(k) {
              if (k.changedTouches)
                for (let D = 0; D < k.changedTouches.length; ++D)
                  this.ripple(k.type, k.changedTouches[D]);
            },
            ripple(k, D) {
              const x = this.$el, I = x.getAttribute("data-ui-event");
              if (I && I !== k)
                return;
              x.setAttribute("data-ui-event", k);
              let oe = x.getBoundingClientRect(), q = D.offsetX, xe;
              q !== void 0 ? xe = D.offsetY : (q = D.clientX - oe.left, xe = D.clientY - oe.top);
              let Xe = oe.width === oe.height ? oe.width * 1.412 : Math.sqrt(oe.width * oe.width + oe.height * oe.height), Le = Xe * 2 + "px";
              this.style = {
                width: Le,
                height: Le,
                marginLeft: -Xe + q + "px",
                marginTop: -Xe + xe + "px"
              }, this.show = !0;
              const Ot = ["mouseleave", "mouseup", "touchend"], yn = () => {
                Ot.forEach(($e) => {
                  x.removeEventListener($e, yn);
                }), setTimeout(() => {
                  this.show = !1, this.style = null, x.removeAttribute("data-ui-event");
                }, 200);
              };
              Ot.forEach(($e) => {
                x.addEventListener($e, yn);
              });
            }
          }
        };
        F.render = S;
        var W = F, Q = {
          components: {
            RippleInk: W
          }
        };
        const j = [/* @__PURE__ */ Object(l.createElementVNode)("svg", {
          viewBox: "25 25 50 50"
        }, [/* @__PURE__ */ Object(l.createElementVNode)("circle", {
          cx: "50",
          cy: "50",
          r: "20"
        })], -1)];
        function ae(k, D, x, I, oe, q) {
          return Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: Object(l.normalizeClass)(["bunt-progress-circular active", [x.size, {
              "progress-center": x.center,
              "progress-page": x.page
            }]])
          }, j, 2);
        }
        var Y = {
          props: {
            center: {
              type: Boolean,
              default: !1
            },
            page: {
              type: Boolean,
              default: !1
            },
            size: {
              type: String,
              default: "normal"
            }
          },
          data() {
            return {};
          },
          created() {
          },
          beforeUnmount() {
          },
          methods: {}
        };
        Y.render = ae;
        var he = Y;
        const we = {
          add: "plus",
          done: "check",
          remove: "minus",
          search: "magnify",
          help_outline: "help-circle-outline"
        };
        var be = {
          getClass(k) {
            return k ? "mdi-" + (we[k] || k).replace("_", "-") : "";
          }
        }, ie = {
          name: "bunt-button",
          components: {
            ProgressCircular: he
          },
          mixins: [Q],
          props: {
            text: String,
            icon: String,
            iconRight: {
              type: Boolean,
              default: !1
            },
            loading: {
              type: Boolean,
              default: !1
            },
            disabled: {
              type: Boolean,
              default: !1
            },
            type: {
              type: String,
              default: "button"
            },
            error: Boolean,
            errorMessage: String,
            successAfterLoading: {
              type: Boolean,
              default: !0
            },
            tooltip: String,
            tooltipPlacement: {
              type: String,
              default: "bottom"
            },
            tooltipFixed: {
              type: Boolean,
              default: !1
            },
            tooltipOptions: Object
          },
          emits: ["click"],
          data() {
            return {
              _loading: !1,
              showSuccess: !1
            };
          },
          computed: {
            _tooltip() {
              return this.errorMessage ? this.errorMessage : this.tooltip;
            },
            iconClass() {
              return be.getClass(this.icon);
            }
          },
          watch: {
            loading: "loadingChanged",
            errorMessage: "errorChanged",
            error: "errorChanged"
          },
          methods: {
            loadingChanged(k) {
              if (k)
                this._loading = k, this.userShowTooltip = !1, this.showSuccess = !1, this.$successTimeout && clearTimeout(this.$successTimeout);
              else {
                if (this._loading = k, this.errorMessage || this.error) return;
                this.showSuccess = !0, this.$successTimeout = setTimeout(() => {
                  this.showSuccess = !1;
                }, 3e3);
              }
            },
            errorChanged(k) {
              k !== null && (this.showSuccess = !1);
            },
            onClick(k) {
              this.disabled || this.loading || this.showSuccess || this.$emit("click", k);
            }
          }
        };
        ie.render = _;
        var Ee = ie;
        const A = /* @__PURE__ */ Object(l.createElementVNode)("div", {
          class: "bunt-checkbox-box"
        }, null, -1), B = {
          key: 0
        }, te = ["name", "checked", "disabled", "readonly"];
        function le(k, D, x, I, oe, q) {
          return Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: Object(l.normalizeClass)(["bunt-checkbox", {
              checked: x.modelValue,
              disabled: x.disabled
            }])
          }, [Object(l.createElementVNode)("label", null, [A, x.label ? (Object(l.openBlock)(), Object(l.createElementBlock)("span", B, Object(l.toDisplayString)(x.label), 1)) : Object(l.renderSlot)(k.$slots, "default", {
            key: 1
          }), Object(l.createElementVNode)("input", {
            type: "checkbox",
            name: x.name,
            checked: x.modelValue,
            disabled: x.disabled,
            readonly: x.readonly,
            onChange: D[0] || (D[0] = (xe) => q.onChange(xe)),
            onFocus: D[1] || (D[1] = (xe) => oe.focused = !0),
            onBlur: D[2] || (D[2] = (...xe) => q.onBlur && q.onBlur(...xe))
          }, null, 40, te)])], 2);
        }
        var ge = {
          name: "bunt-checkbox",
          components: {},
          props: {
            modelValue: {
              type: Boolean,
              default: !1
            },
            name: {
              type: String,
              required: !0
            },
            label: String,
            disabled: {
              type: Boolean,
              default: !1
            },
            readonly: {
              type: Boolean,
              default: !1
            }
          },
          emits: ["update:modelValue"],
          data() {
            return {
              focused: !1
            };
          },
          methods: {
            onChange(k) {
              this.$emit("update:modelValue", k.target.checked), this.validation && this.validation.$touch();
            },
            onBlur() {
              this.focused = !1, this.validation && this.validation.$touch();
            }
          }
        };
        ge.render = le;
        var We = ge;
        const tt = ["name", "value", "checked", "disabled", "readonly"], St = /* @__PURE__ */ Object(l.createElementVNode)("div", {
          class: "bunt-radio-circle"
        }, null, -1), ut = {
          key: 0
        }, Lt = {
          key: 1
        };
        function tn(k, D, x, I, oe, q) {
          return Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: Object(l.normalizeClass)(["bunt-radio", {
              checked: q.isChecked
            }])
          }, [Object(l.createElementVNode)("input", {
            type: "radio",
            name: x.name,
            value: x.modelValue,
            checked: q.isChecked,
            disabled: x.disabled,
            readonly: x.readonly,
            onChange: D[0] || (D[0] = (xe) => q.onChange(xe)),
            onFocus: D[1] || (D[1] = (xe) => oe.focused = !0),
            onBlur: D[2] || (D[2] = (...xe) => q.onBlur && q.onBlur(...xe))
          }, null, 40, tt), St, x.label ? (Object(l.openBlock)(), Object(l.createElementBlock)("label", ut, Object(l.toDisplayString)(x.label), 1)) : (Object(l.openBlock)(), Object(l.createElementBlock)("label", Lt, [Object(l.renderSlot)(k.$slots, "default")]))], 2);
        }
        var nn = {
          name: "bunt-radio",
          props: {
            modelValue: [Boolean, String],
            value: String,
            name: {
              type: String,
              required: !0
            },
            label: String,
            disabled: {
              type: Boolean,
              default: !1
            },
            readonly: {
              type: Boolean,
              default: !1
            }
          },
          emits: ["update:modelValue"],
          data() {
            return {
              focused: !1
            };
          },
          computed: {
            isChecked() {
              return this.value === this.modelValue;
            }
          },
          methods: {
            onChange(k) {
              this.$emit("update:modelValue", this.value), this.validation && this.validation.$touch();
            },
            onBlur() {
              this.focused = !1, this.validation && this.validation.$touch();
            }
          }
        };
        nn.render = tn;
        var mn = nn;
        function Rn(k, D, x, I, oe, q) {
          return Object(l.openBlock)(), Object(l.createElementBlock)("i", {
            class: Object(l.normalizeClass)(["bunt-icon mdi", [q.iconClass]])
          }, null, 2);
        }
        var jn = {
          name: "bunt-icon",
          props: {
            icon: {
              type: String,
              required: !0
            }
          },
          computed: {
            iconClass() {
              return be.getClass(this.icon);
            }
          }
        };
        jn.render = Rn;
        var g = jn;
        const v = ["type", "aria-disabled"];
        function M(k, D, x, I, oe, q) {
          const xe = Object(l.resolveComponent)("ripple-ink"), Xe = Object(l.resolveDirective)("tooltip");
          return Object(l.withDirectives)((Object(l.openBlock)(), Object(l.createElementBlock)("button", {
            class: Object(l.normalizeClass)(["bunt-icon-button", {
              disabled: x.disabled
            }]),
            type: x.type,
            "aria-disabled": x.disabled,
            ref: "button",
            onClick: D[0] || (D[0] = (...Le) => q.onClick && q.onClick(...Le))
          }, [q.iconClass() ? (Object(l.openBlock)(), Object(l.createElementBlock)("i", {
            key: 0,
            class: Object(l.normalizeClass)(["bunt-icon mdi", [q.iconClass()]])
          }, null, 2)) : Object(l.renderSlot)(k.$slots, "default", {
            key: 1
          }), x.disabled ? Object(l.createCommentVNode)("", !0) : (Object(l.openBlock)(), Object(l.createBlock)(xe, {
            key: 2
          }))], 10, v)), [[Xe, x.tooltipOptions || {
            text: x.tooltip,
            placement: x.tooltipPlacement,
            fixed: x.tooltipFixed
          }]]);
        }
        var $ = {
          name: "bunt-icon-button",
          mixins: [Q],
          props: {
            disabled: {
              type: Boolean,
              default: !1
            },
            type: {
              type: String,
              default: "button"
            },
            tooltip: String,
            tooltipPlacement: {
              type: String,
              default: "bottom"
            },
            tooltipFixed: {
              type: Boolean,
              default: !1
            },
            tooltipOptions: Object
          },
          emits: ["click"],
          data() {
            return {
              showTooltip: !1
            };
          },
          methods: {
            iconClass() {
              const k = this.$slots.default()[0];
              if ((k == null ? void 0 : k.type) === l.Text) return be.getClass(k.children);
            },
            onClick(k) {
              this.disabled || this.$emit("click", k);
            }
          }
        };
        $.render = M;
        var V = $;
        const Z = {
          class: "label-input-container"
        }, ne = ["for"], ee = ["type", "name", "value", "disabled", "readonly", "placeholder"], X = ["title"], G = {
          class: "outline",
          ref: "outline"
        }, ye = ["d"], se = ["innerHTML"], pe = {
          key: 1,
          class: "hint"
        };
        function ke(k, D, x, I, oe, q) {
          const xe = Object(l.resolveDirective)("resize-observer");
          return Object(l.withDirectives)((Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: Object(l.normalizeClass)(["bunt-input", {
              focused: k.focused,
              "floating-label": q.floatingLabel,
              invalid: q.invalid,
              disabled: x.disabled,
              "with-icon": x.icon
            }]),
            style: Object(l.normalizeStyle)({
              "--label-gap": k.floatingLabelWidth
            })
          }, [Object(l.createElementVNode)("div", Z, [Object(l.createElementVNode)("label", {
            for: x.name
          }, Object(l.toDisplayString)(x.label), 9, ne), x.icon ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            key: 0,
            class: Object(l.normalizeClass)(["icon mdi", [q.iconClass]])
          }, null, 2)) : Object(l.createCommentVNode)("", !0), Object(l.createElementVNode)("input", {
            ref: "input",
            type: x.type,
            name: x.name,
            value: x.modelValue,
            disabled: x.disabled,
            readonly: x.readonly,
            onInput: D[0] || (D[0] = (Xe) => q.onInput(Xe)),
            onFocus: D[1] || (D[1] = (Xe) => k.focused = !0),
            onBlur: D[2] || (D[2] = (...Xe) => q.onBlur && q.onBlur(...Xe)),
            placeholder: x.placeholder
          }, null, 40, ee), Object(l.withDirectives)(Object(l.createElementVNode)("div", {
            class: "error-icon mdi mdi-alert-circle",
            title: q.hintText
          }, null, 8, X), [[l.vShow, q.invalid]]), (Object(l.openBlock)(), Object(l.createElementBlock)("svg", G, [Object(l.createElementVNode)("path", {
            d: k.outlineStroke
          }, null, 8, ye)], 512))]), x.hintIsHtml ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            key: 0,
            class: "hint",
            innerHTML: q.hintText
          }, null, 8, se)) : (Object(l.openBlock)(), Object(l.createElementBlock)("div", pe, Object(l.toDisplayString)(q.hintText), 1))], 6)), [[xe, k.generateOutline]]);
        }
        const Fe = typeof window < "u" && document.createElement("canvas");
        function Ve(k, D) {
          if (typeof window > "u") return 0;
          var x = Fe.getContext("2d");
          return x.font = D, x.measureText(k || "");
        }
        var Ne = {
          data: function() {
            return {
              outlineStroke: ""
            };
          },
          computed: {
            floatingLabelWidth() {
              return this.label ? Ve(this.label, `12px 'Roboto', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif`).width + 8 : 0;
            }
          },
          mounted() {
            this.$nextTick(() => {
              this.generateOutline();
            });
          },
          methods: {
            generateOutline() {
              const {
                width: k,
                height: D
              } = this.$refs.outline.getBoundingClientRect(), x = 4, I = x + 1;
              this.outlineStroke = `M ${I} 1
			h ${k - 2 * I}
			a ${x} ${x} 0 0 1 ${x} ${x}
			v ${D - 2 * I}
			a ${x} ${x} 0 0 1 -4 ${x}
			h ${-k + 2 * I}
			a ${x} ${x} 0 0 1 -4 -4
			v ${-D + 2 * I}
			a ${x} ${x} 0 0 1 ${x} -4`;
            }
          }
        }, st = {
          name: "bunt-input",
          mixins: [Ne],
          props: {
            type: {
              type: String,
              default: "text"
            },
            name: {
              type: String,
              required: !0
            },
            label: String,
            placeholder: String,
            modelValue: {
              type: [String, Number],
              default: ""
            },
            disabled: {
              type: Boolean,
              default: !1
            },
            readonly: {
              type: Boolean,
              default: !1
            },
            icon: String,
            iconRight: {
              type: Boolean,
              default: !1
            },
            hint: String,
            hintIsHtml: {
              type: Boolean,
              default: !1
            },
            validation: Object
            // vuelidate result
          },
          emits: ["update:modelValue"],
          data: function() {
            return {
              focused: !1
            };
          },
          computed: {
            iconClass() {
              return be.getClass(this.icon);
            },
            invalid() {
              return this.validation && this.validation.$error;
            },
            hintText() {
              return this.invalid && this.validation.$errors ? this.validation.$errors.map((D) => D.$message).filter(Boolean).join() : this.hint;
            },
            floatingLabel() {
              return !!(this.placeholder || this.modelValue || this.modelValue === 0);
            }
          },
          methods: {
            onInput(k) {
              this.$emit("update:modelValue", k.target.value), this.validation && this.validation.$touch();
            },
            onBlur() {
              this.focused = !1, this.validation && this.validation.$touch();
            }
          }
        };
        st.render = ke;
        var nt = st;
        const Tt = {
          class: "outline",
          ref: "outline"
        }, pt = ["d"];
        function rn(k, D, x, I, oe, q) {
          const xe = Object(l.resolveDirective)("resize-observer");
          return Object(l.withDirectives)((Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: Object(l.normalizeClass)(["bunt-input-outline-container", {
              focused: oe.focused
            }]),
            style: Object(l.normalizeStyle)({
              "--label-gap": k.floatingLabelWidth
            })
          }, [Object(l.createElementVNode)("label", null, Object(l.toDisplayString)(x.label), 1), Object(l.renderSlot)(k.$slots, "default", {
            focus: q.focus,
            blur: q.blur
          }), (Object(l.openBlock)(), Object(l.createElementBlock)("svg", Tt, [Object(l.createElementVNode)("path", {
            d: k.outlineStroke
          }, null, 8, pt)], 512))], 6)), [[xe, k.generateOutline]]);
        }
        var Bn = {
          name: "bunt-input-outline-container",
          mixins: [Ne],
          props: {
            label: String
          },
          data() {
            return {
              focused: !1
            };
          },
          computed: {},
          created() {
          },
          mounted() {
            this.$nextTick(() => {
            });
          },
          methods: {
            focus() {
              this.focused = !0;
            },
            blur() {
              this.focused = !1;
            }
          }
        };
        Bn.render = rn;
        var ot = Bn;
        const zt = ["href", "onClick"];
        function Sr(k, D, x, I, oe, q) {
          const xe = Object(l.resolveComponent)("ripple-ink"), Xe = Object(l.resolveComponent)("router-link");
          return Object(l.openBlock)(), Object(l.createBlock)(Xe, {
            to: x.to,
            custom: ""
          }, {
            default: Object(l.withCtx)(({
              href: Le,
              navigate: Ot,
              isActive: yn,
              isExactActive: $e
            }) => [Object(l.createElementVNode)("a", Object(l.mergeProps)({
              class: "bunt-link-button"
            }, k.$attrs, {
              class: {
                "router-link-active": yn,
                "router-link-exact-active": $e
              },
              href: Le,
              onClick: (at) => {
                Ot(at), k.$emit("click", at);
              }
            }), [Object(l.renderSlot)(k.$slots, "default"), Object(l.createVNode)(xe)], 16, zt)]),
            _: 3
          }, 8, ["to"]);
        }
        var ru = {
          name: "bunt-link-button",
          components: {},
          mixins: [Q],
          props: {
            to: Object
          },
          emits: ["click"]
        };
        ru.render = Sr;
        var Ns = ru;
        const Is = {
          class: "label-input-container"
        }, Ls = ["for"], zs = ["name", "disabled", "placeholder"], Ps = {
          class: "outline",
          ref: "outline"
        }, Rs = ["d"], js = ["innerHTML"], Bs = {
          key: 1,
          class: "hint"
        }, Tr = {
          class: "scrollable-menu"
        }, d = ["onMouseover", "onClick"], y = {
          key: 0,
          class: "divider",
          transition: "fade"
        }, w = {
          key: 1,
          class: "text-center",
          transition: "fade"
        };
        function O(k, D, x, I, oe, q) {
          const xe = Object(l.resolveDirective)("scrollbar"), Xe = Object(l.resolveDirective)("resize-observer");
          return Object(l.withDirectives)((Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: Object(l.normalizeClass)(["bunt-select dropdown", q.dropdownClasses])
          }, [Object(l.createElementVNode)("div", {
            class: Object(l.normalizeClass)(["bunt-input dense", {
              focused: oe.open,
              "floating-label": oe.rawSearch.length != 0 || !q.isValueEmpty,
              invalid: q.invalid,
              disabled: x.disabled
            }]),
            ref: "searchContainer",
            style: Object(l.normalizeStyle)({
              "--label-gap": k.floatingLabelWidth
            })
          }, [Object(l.createElementVNode)("div", Is, [Object(l.createElementVNode)("label", {
            for: x.name
          }, Object(l.toDisplayString)(x.label), 9, Ls), x.icon ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            key: 0,
            class: Object(l.normalizeClass)(["icon mdi", [q.iconClass]])
          }, null, 2)) : Object(l.createCommentVNode)("", !0), Object(l.withDirectives)(Object(l.createElementVNode)("input", {
            type: "text",
            ref: "search",
            name: x.name,
            "onUpdate:modelValue": D[0] || (D[0] = (Le) => oe.rawSearch = Le),
            disabled: x.disabled,
            onKeydown: [D[1] || (D[1] = Object(l.withKeys)((...Le) => q.maybeDeleteValue && q.maybeDeleteValue(...Le), ["delete"])), D[3] || (D[3] = Object(l.withKeys)(Object(l.withModifiers)((...Le) => k.typeAheadUp && k.typeAheadUp(...Le), ["prevent"]), ["up"])), D[4] || (D[4] = Object(l.withKeys)(Object(l.withModifiers)((...Le) => k.typeAheadDown && k.typeAheadDown(...Le), ["prevent"]), ["down"]))],
            onKeyup: [D[2] || (D[2] = Object(l.withKeys)((...Le) => q.onEscape && q.onEscape(...Le), ["esc"])), D[5] || (D[5] = Object(l.withKeys)(Object(l.withModifiers)((...Le) => k.typeAheadSelect && k.typeAheadSelect(...Le), ["prevent"]), ["enter"]))],
            onBlur: D[6] || (D[6] = (...Le) => q.onBlur && q.onBlur(...Le)),
            onFocus: D[7] || (D[7] = (...Le) => q.onFocus && q.onFocus(...Le)),
            placeholder: q.searchPlaceholder,
            autocomplete: "off"
          }, null, 40, zs), [[l.vModelText, oe.rawSearch]]), Object(l.createElementVNode)("i", {
            class: "open-indicator mdi mdi-menu-down",
            ref: "openIndicator",
            role: "presentation",
            onMousedown: D[8] || (D[8] = Object(l.withModifiers)(() => {
            }, ["prevent", "stop"])),
            onClick: D[9] || (D[9] = Object(l.withModifiers)((...Le) => q.toggleDropdown && q.toggleDropdown(...Le), ["prevent", "stop"]))
          }, null, 544), (Object(l.openBlock)(), Object(l.createElementBlock)("svg", Ps, [Object(l.createElementVNode)("path", {
            d: k.outlineStroke
          }, null, 8, Rs)], 512))]), x.hintIsHtml ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            key: 0,
            class: "hint",
            innerHTML: q.hintText
          }, null, 8, js)) : (Object(l.openBlock)(), Object(l.createElementBlock)("div", Bs, Object(l.toDisplayString)(q.hintText), 1))], 6), oe.open ? (Object(l.openBlock)(), Object(l.createBlock)(l.Teleport, {
            key: 0,
            to: q.buntTeleportTarget
          }, [Object(l.createElementVNode)("div", {
            class: Object(l.normalizeClass)(["bunt-select-dropdown-menu", [x.dropdownClass]]),
            ref: "dropdownMenu",
            style: Object(l.normalizeStyle)({
              "max-height": x.maxHeight,
              width: oe.width + "px"
            }),
            onMousedown: D[10] || (D[10] = Object(l.withModifiers)(() => {
            }, ["prevent", "stop"]))
          }, [Object(l.renderSlot)(k.$slots, "result-header"), Object(l.withDirectives)((Object(l.openBlock)(), Object(l.createElementBlock)("div", Tr, [Object(l.createElementVNode)("ul", null, [(Object(l.openBlock)(!0), Object(l.createElementBlock)(l.Fragment, null, Object(l.renderList)(q.filteredOptions, (Le, Ot) => (Object(l.openBlock)(), Object(l.createElementBlock)("li", {
            key: Ot,
            class: Object(l.normalizeClass)({
              active: q.isOptionSelected(Le),
              highlight: Ot === k.typeAheadPointer
            }),
            onMouseover: (yn) => k.typeAheadPointer = Ot,
            onClick: Object(l.withModifiers)((yn) => q.select(Le), ["prevent", "stop"])
          }, [Object(l.renderSlot)(k.$slots, "default", {
            option: Le
          }, () => [Object(l.createTextVNode)(Object(l.toDisplayString)(x.getOptionLabel(Le)), 1)])], 42, d))), 128)), q.filteredOptions.length ? Object(l.createCommentVNode)("", !0) : (Object(l.openBlock)(), Object(l.createElementBlock)("li", y)), q.filteredOptions.length ? Object(l.createCommentVNode)("", !0) : (Object(l.openBlock)(), Object(l.createElementBlock)("li", w, [Object(l.renderSlot)(k.$slots, "no-options", {}, () => [Object(l.createTextVNode)("Sorry, no matching options.")])]))])])), [[xe, {
            _preventMousedown: !0
          }, void 0, {
            y: !0
          }]])], 38)], 8, ["to"])) : Object(l.createCommentVNode)("", !0)], 2)), [[Xe, k.generateOutline]]);
        }
        var P = {
          watch: {
            typeAheadPointer() {
              this.maybeAdjustScroll();
            }
          },
          methods: {
            /**
               * Adjust the scroll position of the dropdown list
               * if the current pointer is outside of the
               * overflow bounds.
               * @returns {*}
               */
            maybeAdjustScroll() {
              if (!this.$refs.dropdownMenu) return;
              let k = this.pixelsToPointerTop(), D = this.pixelsToPointerBottom();
              if (k <= this.viewport().top)
                return this.scrollTo(k);
              if (D >= this.viewport().bottom)
                return this.scrollTo(this.viewport().top + this.pointerHeight());
            },
            /**
               * The distance in pixels from the top of the dropdown
               * list to the top of the current pointer element.
               * @returns {number}
               */
            pixelsToPointerTop() {
              let k = 0, D = this.$refs.dropdownMenu.children;
              for (let x = 0; x < this.typeAheadPointer; x++)
                k += D[x] ? D[x].offsetHeight : 0;
              return k;
            },
            /**
               * The distance in pixels from the top of the dropdown
               * list to the bottom of the current pointer element.
               * @returns {*}
               */
            pixelsToPointerBottom() {
              return this.pixelsToPointerTop() + this.pointerHeight();
            },
            /**
               * The offsetHeight of the current pointer element.
               * @returns {number}
               */
            pointerHeight() {
              let k = this.$refs.dropdownMenu.children[this.typeAheadPointer];
              return k ? k.offsetHeight : 0;
            },
            /**
               * The currently viewable portion of the dropdownMenu.
               * @returns {{top: (string|*|number), bottom: *}}
               */
            viewport() {
              return {
                top: this.$refs.dropdownMenu.scrollTop,
                bottom: this.$refs.dropdownMenu.offsetHeight + this.$refs.dropdownMenu.scrollTop
              };
            },
            /**
               * Scroll the dropdownMenu to a given position.
               * @param position
               * @returns {*}
               */
            scrollTo(k) {
              return this.$refs.dropdownMenu.scrollTop = k;
            }
          }
        }, z = {
          data() {
            return {
              typeAheadPointer: -1
            };
          },
          watch: {
            filteredOptions() {
              this.typeAheadPointer = 0;
            }
          },
          methods: {
            /**
               * Move the typeAheadPointer visually up the list by
               * subtracting the current index by one.
               * @return {void}
               */
            typeAheadUp() {
              this.typeAheadPointer > 0 && (this.typeAheadPointer--, this.maybeAdjustScroll && this.maybeAdjustScroll());
            },
            /**
               * Move the typeAheadPointer visually down the list by
               * adding the current index by one.
               * @return {void}
               */
            typeAheadDown() {
              this.typeAheadPointer < this.filteredOptions.length - 1 && (this.typeAheadPointer++, this.maybeAdjustScroll && this.maybeAdjustScroll());
            },
            /**
               * Select the option at the current typeAheadPointer position.
               * Optionally clear the search input on selection.
               * @return {void}
               */
            typeAheadSelect() {
              this.filteredOptions[this.typeAheadPointer] ? this.select(this.filteredOptions[this.typeAheadPointer]) : this.taggable && this.search.length && this.select(this.search);
            }
          }
        }, U = r("2e39"), K = /* @__PURE__ */ r.n(U), re = {
          name: "bunt-select",
          mixins: [Ne, z, P],
          props: {
            name: {
              type: String,
              required: !0
            },
            label: String,
            modelValue: {
              type: [String, Object, Number],
              default: null
            },
            icon: String,
            /**
             * An array of strings or objects to be used as dropdown choices.
             * If you are using an array of objects, vue-select will look for
             * a `label` key (ex. [{label: 'This is Foo', value: 'foo'}]). A
             * custom label key can be set with the `optionLabel` prop.
             * @type {Object}
             */
            options: {
              type: Array,
              default() {
                return [];
              }
            },
            placeholder: {
              type: String,
              default: ""
            },
            disabled: {
              type: Boolean,
              default: !1
            },
            maxHeight: {
              type: String,
              default: "400px"
            },
            /**
             * Tells vue-select what key to use when generating option
             * labels when each `option` is an object.
             * @type {String}
             */
            optionLabel: {
              type: String,
              default: "label"
            },
            /**
             * Callback to generate the label text. If {option}
             * is an object, returns option[this.optionLabel] by default.
             * @param  {(string|Object)} option
             * @return {String}
             */
            getOptionLabel: {
              type: Function,
              default(k) {
                return typeof k == "object" && this.optionLabel !== void 0 && k[this.optionLabel] !== void 0 ? k[this.optionLabel] : k;
              }
            },
            optionValue: {
              type: String,
              default: "id"
            },
            getOptionValue: {
              type: Function,
              default(k) {
                return typeof k == "object" && this.optionValue !== void 0 && k[this.optionValue] !== void 0 ? k[this.optionValue] : k;
              }
            },
            findOptionByValue: {
              type: Function,
              default(k) {
                const D = (x) => typeof x == "object" && this.optionValue ? x[this.optionValue] === k : x === k;
                return this.options.find(D);
              }
            },
            hint: String,
            hintIsHtml: {
              type: Boolean,
              default: !1
            },
            validation: Object,
            // vuelidate result
            dropdownClass: String,
            dropdownOverflowElement: [String, Object],
            filterByFunction: {
              type: Function,
              default(k, D, x) {
                return x(k, this.getOptionLabel(D).toLowerCase());
              }
            }
          },
          emits: ["update:modelValue", "focus", "blur"],
          inject: {
            buntTeleportTarget: {
              default: "#bunt-teleport-target"
            }
          },
          data() {
            return {
              search: "",
              rawSearch: "",
              open: !1,
              width: 0
            };
          },
          computed: {
            /**
             * Classes to be output on .dropdown
             * @return {Object}
             */
            dropdownClasses() {
              return {
                open: this.open
              };
            },
            /**
             * Return the placeholder string if it's set
             * & there is no value selected.
             * @return {String} Placeholder text
             */
            searchPlaceholder() {
              if (this.isValueEmpty && this.placeholder)
                return this.placeholder;
            },
            /**
             * The currently displayed options, filtered
             * by the search elements value. If tagging
             * true, the search text will be prepended
             * if it doesn't already exist.
             *
             * @return {array}
             */
            filteredOptions() {
              return this.search ? this.options.filter((k) => this.filterByFunction(this.search.toLowerCase(), k, K.a)) : this.options;
            },
            /**
             * Check if there aren't any options selected.
             * @return {Boolean}
             */
            isValueEmpty() {
              return this.modelValue ? typeof this.modelValue == "object" ? !Object.keys(this.modelValue).length : !this.modelValue.length : !0;
            },
            iconClass() {
              return be.getClass(this.icon);
            },
            invalid() {
              return this.validation && this.validation.$error;
            },
            hintText() {
              return this.invalid && this.validation.$errors ? this.validation.$errors.map((D) => D.$message).filter(Boolean).join() : this.hint;
            }
          },
          watch: {
            modelValue(k) {
              this.selectValue(k);
            },
            rawSearch(k) {
              this.open && (this.search = k);
            },
            filteredOptions() {
              var k;
              (k = this._popper) === null || k === void 0 || k.scheduleUpdate();
            },
            options: {
              handler() {
                this.open || this.selectValue(this.modelValue);
              },
              deep: !0
            }
          },
          mounted() {
            this.selectValue(this.modelValue);
          },
          beforeUnmount() {
            var k;
            (k = this._popper) === null || k === void 0 || k.destroy();
          },
          methods: {
            focus() {
              this.$refs.search.focus();
            },
            blur() {
              this.$refs.search.blur();
            },
            selectValue(k) {
              const D = this.findOptionByValue(k);
              this.rawSearch = this.getOptionLabel(D) || "";
            },
            /**
             * Select a given option.
             * @param  {(string|Object)} option
             * @return {void}
             */
            select(k) {
              this.isOptionSelected(k) ? this.deselect(k) : this.$emit("update:modelValue", this.getOptionValue(k)), this.onAfterSelect(k);
            },
            /**
             * De-select a given option.
             * @param  {(string|Object)} option
             * @return {void}
             */
            deselect(k) {
              this.$emit("update:modelValue", null);
            },
            /**
             * Called from this.select after each selection.
             * @param  {(string|Object)} option
             * @return {void}
             */
            onAfterSelect(k) {
              this.$refs.search.blur(), this.rawSearch = this.getOptionLabel(k) || "";
            },
            /**
             * Toggle the visibility of the dropdown menu.
             * @param  {Event} e
             * @return {void}
             */
            toggleDropdown(k) {
              (k.target === this.$refs.openIndicator || k.target === this.$refs.search || k.target === this.$refs.toggle || k.target === this.$el) && (this.open ? this.blur() : this.focus());
            },
            /**
             * Check if the given option is currently selected.
             * @param  {(string|Object)}  option
             * @return {Boolean}         True when selected || False otherwise
             */
            isOptionSelected(k) {
              return this.modelValue === k;
            },
            async onFocus() {
              this.open = !0, this.search = "", this.$refs.search.select(), this.width = this.$refs.searchContainer.getBoundingClientRect().width, await this.$nextTick();
              const k = {
                placement: "bottom",
                positionFixed: !0,
                modifiers: {}
              };
              this.icon && (k.modifiers.offset = {
                offset: "-15, 0"
              }), this.dropdownOverflowElement && (k.modifiers.preventOverflow = {
                boundariesElement: this.dropdownOverflowElement
              }), this._popper = new f.a(this.$refs.search, this.$refs.dropdownMenu, k), this.$emit("focus");
            },
            onBlur() {
              this.open = !1, this.$nextTick(() => {
                var k;
                return (k = this._popper) === null || k === void 0 ? void 0 : k.destroy();
              }), this.validation && this.validation.$touch(), this.$emit("blur");
            },
            /**
             * If there is any text in the search input, remove it.
             * Otherwise, blur the search input to close the dropdown.
             * @return {[type]} [description]
             */
            onEscape() {
              this.rawSearch.length ? (this.deselect(), this.rawSearch = "") : this.$refs.search.blur();
            },
            /**
             * Delete the value on Delete keypress when there is no
             * text in the search input, & there's tags to delete
             * @return {this.value}
             */
            maybeDeleteValue() {
              !this.$refs.search.value.length && this.modelValue && this.$emit("update:modelValue", null);
            }
          }
        };
        re.render = O;
        var me = re;
        const _e = ["name", "checked", "disabled", "readonly"], fe = /* @__PURE__ */ Object(l.createElementVNode)("div", {
          class: "bunt-switch-track"
        }, [/* @__PURE__ */ Object(l.createElementVNode)("div", {
          class: "bunt-switch-thumb"
        })], -1);
        function Oe(k, D, x, I, oe, q) {
          return Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            class: Object(l.normalizeClass)(["bunt-switch", {
              checked: x.modelValue
            }])
          }, [Object(l.createElementVNode)("input", {
            type: "checkbox",
            name: x.name,
            checked: x.modelValue,
            disabled: x.disabled,
            readonly: x.readonly,
            onChange: D[0] || (D[0] = (xe) => q.onChange(xe)),
            onFocus: D[1] || (D[1] = (xe) => oe.focused = !0),
            onBlur: D[2] || (D[2] = (...xe) => q.onBlur && q.onBlur(...xe))
          }, null, 40, _e), fe, Object(l.createElementVNode)("label", null, Object(l.toDisplayString)(x.label), 1)], 2);
        }
        var Te = {
          name: "bunt-switch",
          components: {},
          props: {
            modelValue: {
              type: Boolean,
              default: !1
            },
            name: {
              type: String,
              required: !0
            },
            label: String,
            disabled: {
              type: Boolean,
              default: !1
            },
            readonly: {
              type: Boolean,
              default: !1
            }
          },
          emits: ["update:modelValue"],
          data() {
            return {
              focused: !1
            };
          },
          methods: {
            onChange(k) {
              this.$emit("update:modelValue", k.target.checked), this.validation && this.validation.$touch();
            },
            onBlur() {
              this.focused = !1, this.validation && this.validation.$touch();
            }
          }
        };
        Te.render = Oe;
        var De = Te;
        const Ke = ["tabindex", "aria-controls", "aria-selected", "disabled"], un = {
          key: 0,
          class: "bunt-tab-header-item-icon"
        }, bn = ["textContent"];
        function Pt(k, D, x, I, oe, q) {
          const xe = Object(l.resolveComponent)("ripple-ink");
          return Object(l.openBlock)(), Object(l.createElementBlock)("li", {
            class: Object(l.normalizeClass)(["bunt-tab-header-item", ["type-" + x.type, {
              active: x.active,
              disabled: x.disabled
            }]]),
            role: "tab",
            tabindex: x.active ? 0 : -1,
            "aria-controls": x.id,
            "aria-selected": x.active ? "true" : null,
            disabled: x.disabled,
            ref: "item"
          }, [Object(l.renderSlot)(k.$slots, "default", {}, () => [x.type === "icon" || x.type === "icon-and-text" ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", un, [Object(l.createElementVNode)("i", {
            class: Object(l.normalizeClass)(["bunt-icon mdi", [q.iconClass]])
          }, null, 2)])) : Object(l.createCommentVNode)("", !0), x.type === "text" || x.type === "icon-and-text" ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", {
            key: 1,
            class: "bunt-tab-header-item-text",
            textContent: Object(l.toDisplayString)(x.text)
          }, null, 8, bn)) : Object(l.createCommentVNode)("", !0)]), x.disabled ? Object(l.createCommentVNode)("", !0) : (Object(l.openBlock)(), Object(l.createBlock)(xe, {
            key: 0
          }))], 10, Ke);
        }
        var gn = {
          name: "bunt-tab-header-item",
          mixins: [Q],
          props: {
            id: String,
            type: {
              type: String,
              default: "text"
              // 'text', 'icon', or 'icon-and-text'
            },
            text: String,
            icon: String,
            active: {
              type: Boolean,
              default: !1
            },
            disabled: {
              type: Boolean,
              default: !1
            }
          },
          computed: {
            iconClass() {
              return be.getClass(this.icon);
            }
          }
        };
        gn.render = Pt;
        var Vs = gn;
        const Or = function(k) {
          return k.length === 1 && k[0].type === l.Fragment ? Or(k[0].children) : k.filter((D) => D.type.name === "bunt-tab");
        };
        var rh = {
          name: "bunt-tabs",
          props: {
            type: {
              type: String,
              default: "text"
              // 'text', 'icon', or 'icon-and-text'styleObject
            },
            modelValue: {
              type: [Number, String, Object, Function]
            }
          },
          emits: ["update:modelValue"],
          setup(k, {
            slots: D,
            emit: x
          }) {
            const I = Object(l.reactive)({
              tabs: Or(D.default()),
              activeTab: null,
              indicatorTargetTransform: null,
              indicatorState: null,
              indicatorTransform: null,
              indicatorStyle: Object(l.computed)(() => {
                if (I.indicatorTransform)
                  return {
                    transform: `translateX(${I.indicatorTransform.left}%) scaleX(${I.indicatorTransform.width})`
                  };
              })
            }), oe = Object(l.ref)(null), q = Object(l.ref)(null), xe = Object(l.ref)([]);
            Object(l.onBeforeUpdate)(() => {
              xe.value = [];
            });
            const Xe = ($e) => $e ? $e.props.id || I.tabs.indexOf($e) : null;
            Object(l.watch)(() => D.default(), ($e) => {
              I.tabs = Or($e);
              let at = xe.value.findIndex(($t) => $t.id === I.activeTab);
              at < 0 && k.modelValue === void 0 && (at = 0), Ot(at);
            }, {
              flush: "post"
            }), Object(l.watch)(() => k.modelValue, () => {
              Xe(I.activeTab) !== k.modelValue && Ot(xe.value.findIndex(($e) => $e.id === k.modelValue));
            });
            const Le = ($e, at) => {
              if ($e == null || $e < 0) {
                I.indicatorTransform = {
                  width: 0,
                  left: 0
                };
                return;
              }
              let $t = q.value.getBoundingClientRect(), mt = $t.width;
              Array.from(q.value.children);
              let sn = xe.value[$e].$el.getBoundingClientRect(), fr = sn.left - $t.left;
              if (I.indicatorTargetTransform = {
                width: sn.width / mt,
                left: fr / mt * 100
              }, at === void 0 || at < 0)
                I.indicatorState = "", I.indicatorTransform = {
                  width: I.indicatorTargetTransform.width,
                  left: I.indicatorTargetTransform.left
                };
              else {
                const fi = xe.value[at].$el.getBoundingClientRect();
                I.indicatorState = "expand", at < $e ? I.indicatorTransform.width = (sn.left + sn.width - fi.left) / mt : I.indicatorTransform = {
                  width: (fi.left + fi.width - sn.left) / mt,
                  left: fr / mt * 100
                };
              }
            }, Ot = ($e) => {
              var at, $t, mt;
              const sn = I.tabs.find((fh) => fh.props.id === $e) || I.tabs[$e], fr = I.tabs.indexOf(sn), fi = I.tabs.indexOf(I.activeTab), Ba = Xe(I.activeTab);
              if (Ba) {
                var Hs, Va;
                (Hs = (Va = I.activeTab.props).onDeselected) === null || Hs === void 0 || Hs.call(Va, Ba);
              }
              I.activeTab = sn;
              const Us = Xe(I.activeTab);
              Us !== k.modelValue && x("update:modelValue", Us), (at = I.activeTab) === null || at === void 0 || ($t = (mt = at.props).onSelected) === null || $t === void 0 || $t.call(mt, Us), Le(fr, fi);
            };
            let yn;
            return Object(l.onMounted)(() => {
              Ot(k.modelValue || 0), yn = new o.a(($e) => {
                q.value && I.activeTab && Le(I.tabs.indexOf(I.activeTab));
              }), yn.observe(oe.value);
            }), Object(l.onBeforeUnmount)(() => {
              yn.disconnect();
            }), () => {
              var $e, at, $t;
              return Object(l.h)("div", {
                class: "bunt-tabs",
                ref: oe
              }, [
                Object(l.h)("div", {
                  class: "bunt-tabs-header"
                }, [Object(l.h)("ul", {
                  class: "bunt-tabs-header-items",
                  role: "tablist",
                  ref: q
                }, I.tabs.map((mt, sn) => Object(l.h)(Vs, {
                  id: mt.props.id,
                  text: typeof mt.props.header == "string" ? mt.props.header : null,
                  active: mt === I.activeTab,
                  disabled: mt.props.disabled,
                  key: mt.props.id,
                  ref(fr) {
                    fr && (xe.value[sn] = fr);
                  },
                  onClick() {
                    mt.props.disabled || Ot(sn, I.tabs);
                  }
                }, D.headerItem ? () => D.headerItem({
                  id: mt.props.id,
                  ...mt.props.header
                }) : null))), Object(l.h)("div", {
                  class: ["bunt-tabs-indicator", I.indicatorState],
                  style: I.indicatorStyle,
                  onTransitionend() {
                    I.indicatorState === "expand" ? (I.indicatorState = "contract", I.indicatorTransform = {
                      width: I.indicatorTargetTransform.width,
                      left: I.indicatorTargetTransform.left
                    }) : I.indicatorState = "";
                  }
                })]),
                Object(l.h)("div", {
                  class: "bunt-tabs-body",
                  role: "tabpanel",
                  tabindex: 0,
                  key: ($e = I.activeTab) === null || $e === void 0 ? void 0 : $e.props.id
                  // forces proper lifecycle of tab contents
                }, (at = I.activeTab) === null || at === void 0 || ($t = at.children) === null || $t === void 0 ? void 0 : $t.default())
                // just activeTab does not seem to work
              ]);
            };
          }
        };
        function ih(k, D, x, I, oe, q) {
          return null;
        }
        var Ra = {
          name: "bunt-tab",
          props: {
            header: [String, Object],
            icon: String,
            disabled: {
              type: Boolean,
              default: !1
            },
            id: String
          },
          emits: ["selected", "deselected"]
        };
        Ra.render = ih;
        var uh = Ra;
        const sh = {
          key: 0,
          class: "bunt-dialog-container"
        }, oh = {
          class: "bunt-dialog"
        };
        function ah(k, D, x, I, oe, q) {
          return x.open ? (Object(l.openBlock)(), Object(l.createElementBlock)("div", sh, [Object(l.createElementVNode)("div", oh, [Object(l.renderSlot)(k.$slots, "default")]), Object(l.createElementVNode)("div", {
            class: "bunt-backdrop",
            onClick: D[0] || (D[0] = (...xe) => q.close && q.close(...xe)),
            "keyup.esc": "close"
          })])) : Object(l.createCommentVNode)("", !0);
        }
        var ja = {
          props: {
            open: {
              type: Boolean,
              default: !1
            }
          },
          emits: ["close"],
          mounted() {
            this.$nextTick(() => {
              document.body.appendChild(this.$el);
            });
          },
          beforeUnmount() {
            this.$el.parentNode === document.body && document.body.removeChild(this.$el);
          },
          methods: {
            close() {
              this.$emit("close");
            }
          }
        };
        ja.render = ah;
        var lh = ja, ch = {
          install(k) {
            h(k), k.component("bunt-button", Ee), k.component("bunt-checkbox", We), k.component("bunt-radio", mn), k.component("bunt-icon", g), k.component("bunt-icon-button", V), k.component("bunt-input", nt), k.component("bunt-input-outline-container", ot), k.component("bunt-link-button", Ns), k.component("bunt-select", me), k.component("bunt-progress-circular", he), k.component("bunt-switch", De), k.component("bunt-tabs", rh), k.component("bunt-tab", uh), k.component("bunt-dialog", lh);
          }
        };
        n.default = ch;
      }
    )
    /******/
  });
})(T0);
var Qm = T0.exports;
const eb = /* @__PURE__ */ Km(Qm);
class Cr extends Error {
}
class tb extends Cr {
  constructor(t) {
    super(`Invalid DateTime: ${t.toMessage()}`);
  }
}
class nb extends Cr {
  constructor(t) {
    super(`Invalid Interval: ${t.toMessage()}`);
  }
}
class rb extends Cr {
  constructor(t) {
    super(`Invalid Duration: ${t.toMessage()}`);
  }
}
class jr extends Cr {
}
class O0 extends Cr {
  constructor(t) {
    super(`Invalid unit ${t}`);
  }
}
class vt extends Cr {
}
class Hn extends Cr {
  constructor() {
    super("Zone is an abstract class");
  }
}
const ue = "numeric", hn = "short", qt = "long", Zu = {
  year: ue,
  month: ue,
  day: ue
}, D0 = {
  year: ue,
  month: hn,
  day: ue
}, ib = {
  year: ue,
  month: hn,
  day: ue,
  weekday: hn
}, A0 = {
  year: ue,
  month: qt,
  day: ue
}, F0 = {
  year: ue,
  month: qt,
  day: ue,
  weekday: qt
}, M0 = {
  hour: ue,
  minute: ue
}, N0 = {
  hour: ue,
  minute: ue,
  second: ue
}, I0 = {
  hour: ue,
  minute: ue,
  second: ue,
  timeZoneName: hn
}, L0 = {
  hour: ue,
  minute: ue,
  second: ue,
  timeZoneName: qt
}, z0 = {
  hour: ue,
  minute: ue,
  hourCycle: "h23"
}, P0 = {
  hour: ue,
  minute: ue,
  second: ue,
  hourCycle: "h23"
}, R0 = {
  hour: ue,
  minute: ue,
  second: ue,
  hourCycle: "h23",
  timeZoneName: hn
}, j0 = {
  hour: ue,
  minute: ue,
  second: ue,
  hourCycle: "h23",
  timeZoneName: qt
}, B0 = {
  year: ue,
  month: ue,
  day: ue,
  hour: ue,
  minute: ue
}, V0 = {
  year: ue,
  month: ue,
  day: ue,
  hour: ue,
  minute: ue,
  second: ue
}, H0 = {
  year: ue,
  month: hn,
  day: ue,
  hour: ue,
  minute: ue
}, U0 = {
  year: ue,
  month: hn,
  day: ue,
  hour: ue,
  minute: ue,
  second: ue
}, ub = {
  year: ue,
  month: hn,
  day: ue,
  weekday: hn,
  hour: ue,
  minute: ue
}, q0 = {
  year: ue,
  month: qt,
  day: ue,
  hour: ue,
  minute: ue,
  timeZoneName: hn
}, W0 = {
  year: ue,
  month: qt,
  day: ue,
  hour: ue,
  minute: ue,
  second: ue,
  timeZoneName: hn
}, $0 = {
  year: ue,
  month: qt,
  day: ue,
  weekday: qt,
  hour: ue,
  minute: ue,
  timeZoneName: qt
}, Z0 = {
  year: ue,
  month: qt,
  day: ue,
  weekday: qt,
  hour: ue,
  minute: ue,
  second: ue,
  timeZoneName: qt
};
class Ki {
  /**
   * The type of zone
   * @abstract
   * @type {string}
   */
  get type() {
    throw new Hn();
  }
  /**
   * The name of this zone.
   * @abstract
   * @type {string}
   */
  get name() {
    throw new Hn();
  }
  /**
   * The IANA name of this zone.
   * Defaults to `name` if not overwritten by a subclass.
   * @abstract
   * @type {string}
   */
  get ianaName() {
    return this.name;
  }
  /**
   * Returns whether the offset is known to be fixed for the whole year.
   * @abstract
   * @type {boolean}
   */
  get isUniversal() {
    throw new Hn();
  }
  /**
   * Returns the offset's common name (such as EST) at the specified timestamp
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the name
   * @param {Object} opts - Options to affect the format
   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
   * @param {string} opts.locale - What locale to return the offset name in.
   * @return {string}
   */
  offsetName(t, n) {
    throw new Hn();
  }
  /**
   * Returns the offset's value as a string
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  formatOffset(t, n) {
    throw new Hn();
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to compute the offset
   * @return {number}
   */
  offset(t) {
    throw new Hn();
  }
  /**
   * Return whether this Zone is equal to another zone
   * @abstract
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  equals(t) {
    throw new Hn();
  }
  /**
   * Return whether this Zone is valid.
   * @abstract
   * @type {boolean}
   */
  get isValid() {
    throw new Hn();
  }
}
let no = null;
class ws extends Ki {
  /**
   * Get a singleton instance of the local zone
   * @return {SystemZone}
   */
  static get instance() {
    return no === null && (no = new ws()), no;
  }
  /** @override **/
  get type() {
    return "system";
  }
  /** @override **/
  get name() {
    return new Intl.DateTimeFormat().resolvedOptions().timeZone;
  }
  /** @override **/
  get isUniversal() {
    return !1;
  }
  /** @override **/
  offsetName(t, { format: n, locale: r }) {
    return nd(t, n, r);
  }
  /** @override **/
  formatOffset(t, n) {
    return Di(this.offset(t), n);
  }
  /** @override **/
  offset(t) {
    return -new Date(t).getTimezoneOffset();
  }
  /** @override **/
  equals(t) {
    return t.type === "system";
  }
  /** @override **/
  get isValid() {
    return !0;
  }
}
let Tu = {};
function sb(e) {
  return Tu[e] || (Tu[e] = new Intl.DateTimeFormat("en-US", {
    hour12: !1,
    timeZone: e,
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit",
    era: "short"
  })), Tu[e];
}
const ob = {
  year: 0,
  month: 1,
  day: 2,
  era: 3,
  hour: 4,
  minute: 5,
  second: 6
};
function ab(e, t) {
  const n = e.format(t).replace(/\u200E/g, ""), r = /(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(n), [, i, u, s, o, a, c, l] = r;
  return [s, i, u, o, a, c, l];
}
function lb(e, t) {
  const n = e.formatToParts(t), r = [];
  for (let i = 0; i < n.length; i++) {
    const { type: u, value: s } = n[i], o = ob[u];
    u === "era" ? r[o] = s : Ce(o) || (r[o] = parseInt(s, 10));
  }
  return r;
}
let pu = {};
class Ln extends Ki {
  /**
   * @param {string} name - Zone name
   * @return {IANAZone}
   */
  static create(t) {
    return pu[t] || (pu[t] = new Ln(t)), pu[t];
  }
  /**
   * Reset local caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  static resetCache() {
    pu = {}, Tu = {};
  }
  /**
   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.
   * @param {string} s - The string to check validity on
   * @example IANAZone.isValidSpecifier("America/New_York") //=> true
   * @example IANAZone.isValidSpecifier("Sport~~blorp") //=> false
   * @deprecated For backward compatibility, this forwards to isValidZone, better use `isValidZone()` directly instead.
   * @return {boolean}
   */
  static isValidSpecifier(t) {
    return this.isValidZone(t);
  }
  /**
   * Returns whether the provided string identifies a real zone
   * @param {string} zone - The string to check
   * @example IANAZone.isValidZone("America/New_York") //=> true
   * @example IANAZone.isValidZone("Fantasia/Castle") //=> false
   * @example IANAZone.isValidZone("Sport~~blorp") //=> false
   * @return {boolean}
   */
  static isValidZone(t) {
    if (!t)
      return !1;
    try {
      return new Intl.DateTimeFormat("en-US", { timeZone: t }).format(), !0;
    } catch {
      return !1;
    }
  }
  constructor(t) {
    super(), this.zoneName = t, this.valid = Ln.isValidZone(t);
  }
  /**
   * The type of zone. `iana` for all instances of `IANAZone`.
   * @override
   * @type {string}
   */
  get type() {
    return "iana";
  }
  /**
   * The name of this zone (i.e. the IANA zone name).
   * @override
   * @type {string}
   */
  get name() {
    return this.zoneName;
  }
  /**
   * Returns whether the offset is known to be fixed for the whole year:
   * Always returns false for all IANA zones.
   * @override
   * @type {boolean}
   */
  get isUniversal() {
    return !1;
  }
  /**
   * Returns the offset's common name (such as EST) at the specified timestamp
   * @override
   * @param {number} ts - Epoch milliseconds for which to get the name
   * @param {Object} opts - Options to affect the format
   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
   * @param {string} opts.locale - What locale to return the offset name in.
   * @return {string}
   */
  offsetName(t, { format: n, locale: r }) {
    return nd(t, n, r, this.name);
  }
  /**
   * Returns the offset's value as a string
   * @override
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  formatOffset(t, n) {
    return Di(this.offset(t), n);
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   * @override
   * @param {number} ts - Epoch milliseconds for which to compute the offset
   * @return {number}
   */
  offset(t) {
    const n = new Date(t);
    if (isNaN(n)) return NaN;
    const r = sb(this.name);
    let [i, u, s, o, a, c, l] = r.formatToParts ? lb(r, n) : ab(r, n);
    o === "BC" && (i = -Math.abs(i) + 1);
    const m = Cs({
      year: i,
      month: u,
      day: s,
      hour: a === 24 ? 0 : a,
      minute: c,
      second: l,
      millisecond: 0
    });
    let p = +n;
    const h = p % 1e3;
    return p -= h >= 0 ? h : 1e3 + h, (m - p) / (60 * 1e3);
  }
  /**
   * Return whether this Zone is equal to another zone
   * @override
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  equals(t) {
    return t.type === "iana" && t.name === this.name;
  }
  /**
   * Return whether this Zone is valid.
   * @override
   * @type {boolean}
   */
  get isValid() {
    return this.valid;
  }
}
let Ol = {};
function cb(e, t = {}) {
  const n = JSON.stringify([e, t]);
  let r = Ol[n];
  return r || (r = new Intl.ListFormat(e, t), Ol[n] = r), r;
}
let Bo = {};
function Vo(e, t = {}) {
  const n = JSON.stringify([e, t]);
  let r = Bo[n];
  return r || (r = new Intl.DateTimeFormat(e, t), Bo[n] = r), r;
}
let Ho = {};
function fb(e, t = {}) {
  const n = JSON.stringify([e, t]);
  let r = Ho[n];
  return r || (r = new Intl.NumberFormat(e, t), Ho[n] = r), r;
}
let Uo = {};
function db(e, t = {}) {
  const { base: n, ...r } = t, i = JSON.stringify([e, r]);
  let u = Uo[i];
  return u || (u = new Intl.RelativeTimeFormat(e, t), Uo[i] = u), u;
}
let yi = null;
function hb() {
  return yi || (yi = new Intl.DateTimeFormat().resolvedOptions().locale, yi);
}
let Dl = {};
function pb(e) {
  let t = Dl[e];
  if (!t) {
    const n = new Intl.Locale(e);
    t = "getWeekInfo" in n ? n.getWeekInfo() : n.weekInfo, Dl[e] = t;
  }
  return t;
}
function mb(e) {
  const t = e.indexOf("-x-");
  t !== -1 && (e = e.substring(0, t));
  const n = e.indexOf("-u-");
  if (n === -1)
    return [e];
  {
    let r, i;
    try {
      r = Vo(e).resolvedOptions(), i = e;
    } catch {
      const a = e.substring(0, n);
      r = Vo(a).resolvedOptions(), i = a;
    }
    const { numberingSystem: u, calendar: s } = r;
    return [i, u, s];
  }
}
function bb(e, t, n) {
  return (n || t) && (e.includes("-u-") || (e += "-u"), n && (e += `-ca-${n}`), t && (e += `-nu-${t}`)), e;
}
function gb(e) {
  const t = [];
  for (let n = 1; n <= 12; n++) {
    const r = de.utc(2009, n, 1);
    t.push(e(r));
  }
  return t;
}
function yb(e) {
  const t = [];
  for (let n = 1; n <= 7; n++) {
    const r = de.utc(2016, 11, 13 + n);
    t.push(e(r));
  }
  return t;
}
function mu(e, t, n, r) {
  const i = e.listingMode();
  return i === "error" ? null : i === "en" ? n(t) : r(t);
}
function _b(e) {
  return e.numberingSystem && e.numberingSystem !== "latn" ? !1 : e.numberingSystem === "latn" || !e.locale || e.locale.startsWith("en") || new Intl.DateTimeFormat(e.intl).resolvedOptions().numberingSystem === "latn";
}
class xb {
  constructor(t, n, r) {
    this.padTo = r.padTo || 0, this.floor = r.floor || !1;
    const { padTo: i, floor: u, ...s } = r;
    if (!n || Object.keys(s).length > 0) {
      const o = { useGrouping: !1, ...r };
      r.padTo > 0 && (o.minimumIntegerDigits = r.padTo), this.inf = fb(t, o);
    }
  }
  format(t) {
    if (this.inf) {
      const n = this.floor ? Math.floor(t) : t;
      return this.inf.format(n);
    } else {
      const n = this.floor ? Math.floor(t) : Ca(t, 3);
      return rt(n, this.padTo);
    }
  }
}
class vb {
  constructor(t, n, r) {
    this.opts = r, this.originalZone = void 0;
    let i;
    if (this.opts.timeZone)
      this.dt = t;
    else if (t.zone.type === "fixed") {
      const s = -1 * (t.offset / 60), o = s >= 0 ? `Etc/GMT+${s}` : `Etc/GMT${s}`;
      t.offset !== 0 && Ln.create(o).valid ? (i = o, this.dt = t) : (i = "UTC", this.dt = t.offset === 0 ? t : t.setZone("UTC").plus({ minutes: t.offset }), this.originalZone = t.zone);
    } else t.zone.type === "system" ? this.dt = t : t.zone.type === "iana" ? (this.dt = t, i = t.zone.name) : (i = "UTC", this.dt = t.setZone("UTC").plus({ minutes: t.offset }), this.originalZone = t.zone);
    const u = { ...this.opts };
    u.timeZone = u.timeZone || i, this.dtf = Vo(n, u);
  }
  format() {
    return this.originalZone ? this.formatToParts().map(({ value: t }) => t).join("") : this.dtf.format(this.dt.toJSDate());
  }
  formatToParts() {
    const t = this.dtf.formatToParts(this.dt.toJSDate());
    return this.originalZone ? t.map((n) => {
      if (n.type === "timeZoneName") {
        const r = this.originalZone.offsetName(this.dt.ts, {
          locale: this.dt.locale,
          format: this.opts.timeZoneName
        });
        return {
          ...n,
          value: r
        };
      } else
        return n;
    }) : t;
  }
  resolvedOptions() {
    return this.dtf.resolvedOptions();
  }
}
class kb {
  constructor(t, n, r) {
    this.opts = { style: "long", ...r }, !n && ed() && (this.rtf = db(t, r));
  }
  format(t, n) {
    return this.rtf ? this.rtf.format(t, n) : Wb(n, t, this.opts.numeric, this.opts.style !== "long");
  }
  formatToParts(t, n) {
    return this.rtf ? this.rtf.formatToParts(t, n) : [];
  }
}
const wb = {
  firstDay: 1,
  minimalDays: 4,
  weekend: [6, 7]
};
class He {
  static fromOpts(t) {
    return He.create(
      t.locale,
      t.numberingSystem,
      t.outputCalendar,
      t.weekSettings,
      t.defaultToEN
    );
  }
  static create(t, n, r, i, u = !1) {
    const s = t || Je.defaultLocale, o = s || (u ? "en-US" : hb()), a = n || Je.defaultNumberingSystem, c = r || Je.defaultOutputCalendar, l = qo(i) || Je.defaultWeekSettings;
    return new He(o, a, c, l, s);
  }
  static resetCache() {
    yi = null, Bo = {}, Ho = {}, Uo = {};
  }
  static fromObject({ locale: t, numberingSystem: n, outputCalendar: r, weekSettings: i } = {}) {
    return He.create(t, n, r, i);
  }
  constructor(t, n, r, i, u) {
    const [s, o, a] = mb(t);
    this.locale = s, this.numberingSystem = n || o || null, this.outputCalendar = r || a || null, this.weekSettings = i, this.intl = bb(this.locale, this.numberingSystem, this.outputCalendar), this.weekdaysCache = { format: {}, standalone: {} }, this.monthsCache = { format: {}, standalone: {} }, this.meridiemCache = null, this.eraCache = {}, this.specifiedLocale = u, this.fastNumbersCached = null;
  }
  get fastNumbers() {
    return this.fastNumbersCached == null && (this.fastNumbersCached = _b(this)), this.fastNumbersCached;
  }
  listingMode() {
    const t = this.isEnglish(), n = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");
    return t && n ? "en" : "intl";
  }
  clone(t) {
    return !t || Object.getOwnPropertyNames(t).length === 0 ? this : He.create(
      t.locale || this.specifiedLocale,
      t.numberingSystem || this.numberingSystem,
      t.outputCalendar || this.outputCalendar,
      qo(t.weekSettings) || this.weekSettings,
      t.defaultToEN || !1
    );
  }
  redefaultToEN(t = {}) {
    return this.clone({ ...t, defaultToEN: !0 });
  }
  redefaultToSystem(t = {}) {
    return this.clone({ ...t, defaultToEN: !1 });
  }
  months(t, n = !1) {
    return mu(this, t, ud, () => {
      const r = n ? { month: t, day: "numeric" } : { month: t }, i = n ? "format" : "standalone";
      return this.monthsCache[i][t] || (this.monthsCache[i][t] = gb((u) => this.extract(u, r, "month"))), this.monthsCache[i][t];
    });
  }
  weekdays(t, n = !1) {
    return mu(this, t, ad, () => {
      const r = n ? { weekday: t, year: "numeric", month: "long", day: "numeric" } : { weekday: t }, i = n ? "format" : "standalone";
      return this.weekdaysCache[i][t] || (this.weekdaysCache[i][t] = yb(
        (u) => this.extract(u, r, "weekday")
      )), this.weekdaysCache[i][t];
    });
  }
  meridiems() {
    return mu(
      this,
      void 0,
      () => ld,
      () => {
        if (!this.meridiemCache) {
          const t = { hour: "numeric", hourCycle: "h12" };
          this.meridiemCache = [de.utc(2016, 11, 13, 9), de.utc(2016, 11, 13, 19)].map(
            (n) => this.extract(n, t, "dayperiod")
          );
        }
        return this.meridiemCache;
      }
    );
  }
  eras(t) {
    return mu(this, t, cd, () => {
      const n = { era: t };
      return this.eraCache[t] || (this.eraCache[t] = [de.utc(-40, 1, 1), de.utc(2017, 1, 1)].map(
        (r) => this.extract(r, n, "era")
      )), this.eraCache[t];
    });
  }
  extract(t, n, r) {
    const i = this.dtFormatter(t, n), u = i.formatToParts(), s = u.find((o) => o.type.toLowerCase() === r);
    return s ? s.value : null;
  }
  numberFormatter(t = {}) {
    return new xb(this.intl, t.forceSimple || this.fastNumbers, t);
  }
  dtFormatter(t, n = {}) {
    return new vb(t, this.intl, n);
  }
  relFormatter(t = {}) {
    return new kb(this.intl, this.isEnglish(), t);
  }
  listFormatter(t = {}) {
    return cb(this.intl, t);
  }
  isEnglish() {
    return this.locale === "en" || this.locale.toLowerCase() === "en-us" || new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");
  }
  getWeekSettings() {
    return this.weekSettings ? this.weekSettings : td() ? pb(this.locale) : wb;
  }
  getStartOfWeek() {
    return this.getWeekSettings().firstDay;
  }
  getMinDaysInFirstWeek() {
    return this.getWeekSettings().minimalDays;
  }
  getWeekendDays() {
    return this.getWeekSettings().weekend;
  }
  equals(t) {
    return this.locale === t.locale && this.numberingSystem === t.numberingSystem && this.outputCalendar === t.outputCalendar;
  }
  toString() {
    return `Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`;
  }
}
let ro = null;
class Nt extends Ki {
  /**
   * Get a singleton instance of UTC
   * @return {FixedOffsetZone}
   */
  static get utcInstance() {
    return ro === null && (ro = new Nt(0)), ro;
  }
  /**
   * Get an instance with a specified offset
   * @param {number} offset - The offset in minutes
   * @return {FixedOffsetZone}
   */
  static instance(t) {
    return t === 0 ? Nt.utcInstance : new Nt(t);
  }
  /**
   * Get an instance of FixedOffsetZone from a UTC offset string, like "UTC+6"
   * @param {string} s - The offset string to parse
   * @example FixedOffsetZone.parseSpecifier("UTC+6")
   * @example FixedOffsetZone.parseSpecifier("UTC+06")
   * @example FixedOffsetZone.parseSpecifier("UTC-6:00")
   * @return {FixedOffsetZone}
   */
  static parseSpecifier(t) {
    if (t) {
      const n = t.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);
      if (n)
        return new Nt(Ss(n[1], n[2]));
    }
    return null;
  }
  constructor(t) {
    super(), this.fixed = t;
  }
  /**
   * The type of zone. `fixed` for all instances of `FixedOffsetZone`.
   * @override
   * @type {string}
   */
  get type() {
    return "fixed";
  }
  /**
   * The name of this zone.
   * All fixed zones' names always start with "UTC" (plus optional offset)
   * @override
   * @type {string}
   */
  get name() {
    return this.fixed === 0 ? "UTC" : `UTC${Di(this.fixed, "narrow")}`;
  }
  /**
   * The IANA name of this zone, i.e. `Etc/UTC` or `Etc/GMT+/-nn`
   *
   * @override
   * @type {string}
   */
  get ianaName() {
    return this.fixed === 0 ? "Etc/UTC" : `Etc/GMT${Di(-this.fixed, "narrow")}`;
  }
  /**
   * Returns the offset's common name at the specified timestamp.
   *
   * For fixed offset zones this equals to the zone name.
   * @override
   */
  offsetName() {
    return this.name;
  }
  /**
   * Returns the offset's value as a string
   * @override
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  formatOffset(t, n) {
    return Di(this.fixed, n);
  }
  /**
   * Returns whether the offset is known to be fixed for the whole year:
   * Always returns true for all fixed offset zones.
   * @override
   * @type {boolean}
   */
  get isUniversal() {
    return !0;
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   *
   * For fixed offset zones, this is constant and does not depend on a timestamp.
   * @override
   * @return {number}
   */
  offset() {
    return this.fixed;
  }
  /**
   * Return whether this Zone is equal to another zone (i.e. also fixed and same offset)
   * @override
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  equals(t) {
    return t.type === "fixed" && t.fixed === this.fixed;
  }
  /**
   * Return whether this Zone is valid:
   * All fixed offset zones are valid.
   * @override
   * @type {boolean}
   */
  get isValid() {
    return !0;
  }
}
class Eb extends Ki {
  constructor(t) {
    super(), this.zoneName = t;
  }
  /** @override **/
  get type() {
    return "invalid";
  }
  /** @override **/
  get name() {
    return this.zoneName;
  }
  /** @override **/
  get isUniversal() {
    return !1;
  }
  /** @override **/
  offsetName() {
    return null;
  }
  /** @override **/
  formatOffset() {
    return "";
  }
  /** @override **/
  offset() {
    return NaN;
  }
  /** @override **/
  equals() {
    return !1;
  }
  /** @override **/
  get isValid() {
    return !1;
  }
}
function Jn(e, t) {
  if (Ce(e) || e === null)
    return t;
  if (e instanceof Ki)
    return e;
  if (Ab(e)) {
    const n = e.toLowerCase();
    return n === "default" ? t : n === "local" || n === "system" ? ws.instance : n === "utc" || n === "gmt" ? Nt.utcInstance : Nt.parseSpecifier(n) || Ln.create(e);
  } else return rr(e) ? Nt.instance(e) : typeof e == "object" && "offset" in e && typeof e.offset == "function" ? e : new Eb(e);
}
const va = {
  arab: "[٠-٩]",
  arabext: "[۰-۹]",
  bali: "[᭐-᭙]",
  beng: "[০-৯]",
  deva: "[०-९]",
  fullwide: "[０-９]",
  gujr: "[૦-૯]",
  hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
  khmr: "[០-៩]",
  knda: "[೦-೯]",
  laoo: "[໐-໙]",
  limb: "[᥆-᥏]",
  mlym: "[൦-൯]",
  mong: "[᠐-᠙]",
  mymr: "[၀-၉]",
  orya: "[୦-୯]",
  tamldec: "[௦-௯]",
  telu: "[౦-౯]",
  thai: "[๐-๙]",
  tibt: "[༠-༩]",
  latn: "\\d"
}, Al = {
  arab: [1632, 1641],
  arabext: [1776, 1785],
  bali: [6992, 7001],
  beng: [2534, 2543],
  deva: [2406, 2415],
  fullwide: [65296, 65303],
  gujr: [2790, 2799],
  khmr: [6112, 6121],
  knda: [3302, 3311],
  laoo: [3792, 3801],
  limb: [6470, 6479],
  mlym: [3430, 3439],
  mong: [6160, 6169],
  mymr: [4160, 4169],
  orya: [2918, 2927],
  tamldec: [3046, 3055],
  telu: [3174, 3183],
  thai: [3664, 3673],
  tibt: [3872, 3881]
}, Cb = va.hanidec.replace(/[\[|\]]/g, "").split("");
function Sb(e) {
  let t = parseInt(e, 10);
  if (isNaN(t)) {
    t = "";
    for (let n = 0; n < e.length; n++) {
      const r = e.charCodeAt(n);
      if (e[n].search(va.hanidec) !== -1)
        t += Cb.indexOf(e[n]);
      else
        for (const i in Al) {
          const [u, s] = Al[i];
          r >= u && r <= s && (t += r - u);
        }
    }
    return parseInt(t, 10);
  } else
    return t;
}
let Pr = {};
function Tb() {
  Pr = {};
}
function on({ numberingSystem: e }, t = "") {
  const n = e || "latn";
  return Pr[n] || (Pr[n] = {}), Pr[n][t] || (Pr[n][t] = new RegExp(`${va[n]}${t}`)), Pr[n][t];
}
let Fl = () => Date.now(), Ml = "system", Nl = null, Il = null, Ll = null, zl = 60, Pl, Rl = null;
class Je {
  /**
   * Get the callback for returning the current timestamp.
   * @type {function}
   */
  static get now() {
    return Fl;
  }
  /**
   * Set the callback for returning the current timestamp.
   * The function should return a number, which will be interpreted as an Epoch millisecond count
   * @type {function}
   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future
   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time
   */
  static set now(t) {
    Fl = t;
  }
  /**
   * Set the default time zone to create DateTimes in. Does not affect existing instances.
   * Use the value "system" to reset this value to the system's time zone.
   * @type {string}
   */
  static set defaultZone(t) {
    Ml = t;
  }
  /**
   * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.
   * The default value is the system's time zone (the one set on the machine that runs this code).
   * @type {Zone}
   */
  static get defaultZone() {
    return Jn(Ml, ws.instance);
  }
  /**
   * Get the default locale to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static get defaultLocale() {
    return Nl;
  }
  /**
   * Set the default locale to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static set defaultLocale(t) {
    Nl = t;
  }
  /**
   * Get the default numbering system to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static get defaultNumberingSystem() {
    return Il;
  }
  /**
   * Set the default numbering system to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static set defaultNumberingSystem(t) {
    Il = t;
  }
  /**
   * Get the default output calendar to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static get defaultOutputCalendar() {
    return Ll;
  }
  /**
   * Set the default output calendar to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static set defaultOutputCalendar(t) {
    Ll = t;
  }
  /**
   * @typedef {Object} WeekSettings
   * @property {number} firstDay
   * @property {number} minimalDays
   * @property {number[]} weekend
   */
  /**
   * @return {WeekSettings|null}
   */
  static get defaultWeekSettings() {
    return Rl;
  }
  /**
   * Allows overriding the default locale week settings, i.e. the start of the week, the weekend and
   * how many days are required in the first week of a year.
   * Does not affect existing instances.
   *
   * @param {WeekSettings|null} weekSettings
   */
  static set defaultWeekSettings(t) {
    Rl = qo(t);
  }
  /**
   * Get the cutoff year for whether a 2-digit year string is interpreted in the current or previous century. Numbers higher than the cutoff will be considered to mean 19xx and numbers lower or equal to the cutoff will be considered 20xx.
   * @type {number}
   */
  static get twoDigitCutoffYear() {
    return zl;
  }
  /**
   * Set the cutoff year for whether a 2-digit year string is interpreted in the current or previous century. Numbers higher than the cutoff will be considered to mean 19xx and numbers lower or equal to the cutoff will be considered 20xx.
   * @type {number}
   * @example Settings.twoDigitCutoffYear = 0 // all 'yy' are interpreted as 20th century
   * @example Settings.twoDigitCutoffYear = 99 // all 'yy' are interpreted as 21st century
   * @example Settings.twoDigitCutoffYear = 50 // '49' -> 2049; '50' -> 1950
   * @example Settings.twoDigitCutoffYear = 1950 // interpreted as 50
   * @example Settings.twoDigitCutoffYear = 2050 // ALSO interpreted as 50
   */
  static set twoDigitCutoffYear(t) {
    zl = t % 100;
  }
  /**
   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
   * @type {boolean}
   */
  static get throwOnInvalid() {
    return Pl;
  }
  /**
   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
   * @type {boolean}
   */
  static set throwOnInvalid(t) {
    Pl = t;
  }
  /**
   * Reset Luxon's global caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  static resetCaches() {
    He.resetCache(), Ln.resetCache(), de.resetCache(), Tb();
  }
}
class cn {
  constructor(t, n) {
    this.reason = t, this.explanation = n;
  }
  toMessage() {
    return this.explanation ? `${this.reason}: ${this.explanation}` : this.reason;
  }
}
const G0 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334], Y0 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function Yt(e, t) {
  return new cn(
    "unit out of range",
    `you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`
  );
}
function ka(e, t, n) {
  const r = new Date(Date.UTC(e, t - 1, n));
  e < 100 && e >= 0 && r.setUTCFullYear(r.getUTCFullYear() - 1900);
  const i = r.getUTCDay();
  return i === 0 ? 7 : i;
}
function K0(e, t, n) {
  return n + (Ji(e) ? Y0 : G0)[t - 1];
}
function J0(e, t) {
  const n = Ji(e) ? Y0 : G0, r = n.findIndex((u) => u < t), i = t - n[r];
  return { month: r + 1, day: i };
}
function wa(e, t) {
  return (e - t + 7) % 7 + 1;
}
function Gu(e, t = 4, n = 1) {
  const { year: r, month: i, day: u } = e, s = K0(r, i, u), o = wa(ka(r, i, u), n);
  let a = Math.floor((s - o + 14 - t) / 7), c;
  return a < 1 ? (c = r - 1, a = ji(c, t, n)) : a > ji(r, t, n) ? (c = r + 1, a = 1) : c = r, { weekYear: c, weekNumber: a, weekday: o, ...Ts(e) };
}
function jl(e, t = 4, n = 1) {
  const { weekYear: r, weekNumber: i, weekday: u } = e, s = wa(ka(r, 1, t), n), o = Zr(r);
  let a = i * 7 + u - s - 7 + t, c;
  a < 1 ? (c = r - 1, a += Zr(c)) : a > o ? (c = r + 1, a -= Zr(r)) : c = r;
  const { month: l, day: f } = J0(c, a);
  return { year: c, month: l, day: f, ...Ts(e) };
}
function io(e) {
  const { year: t, month: n, day: r } = e, i = K0(t, n, r);
  return { year: t, ordinal: i, ...Ts(e) };
}
function Bl(e) {
  const { year: t, ordinal: n } = e, { month: r, day: i } = J0(t, n);
  return { year: t, month: r, day: i, ...Ts(e) };
}
function Vl(e, t) {
  if (!Ce(e.localWeekday) || !Ce(e.localWeekNumber) || !Ce(e.localWeekYear)) {
    if (!Ce(e.weekday) || !Ce(e.weekNumber) || !Ce(e.weekYear))
      throw new jr(
        "Cannot mix locale-based week fields with ISO-based week fields"
      );
    return Ce(e.localWeekday) || (e.weekday = e.localWeekday), Ce(e.localWeekNumber) || (e.weekNumber = e.localWeekNumber), Ce(e.localWeekYear) || (e.weekYear = e.localWeekYear), delete e.localWeekday, delete e.localWeekNumber, delete e.localWeekYear, {
      minDaysInFirstWeek: t.getMinDaysInFirstWeek(),
      startOfWeek: t.getStartOfWeek()
    };
  } else
    return { minDaysInFirstWeek: 4, startOfWeek: 1 };
}
function Ob(e, t = 4, n = 1) {
  const r = Es(e.weekYear), i = Kt(
    e.weekNumber,
    1,
    ji(e.weekYear, t, n)
  ), u = Kt(e.weekday, 1, 7);
  return r ? i ? u ? !1 : Yt("weekday", e.weekday) : Yt("week", e.weekNumber) : Yt("weekYear", e.weekYear);
}
function Db(e) {
  const t = Es(e.year), n = Kt(e.ordinal, 1, Zr(e.year));
  return t ? n ? !1 : Yt("ordinal", e.ordinal) : Yt("year", e.year);
}
function X0(e) {
  const t = Es(e.year), n = Kt(e.month, 1, 12), r = Kt(e.day, 1, Yu(e.year, e.month));
  return t ? n ? r ? !1 : Yt("day", e.day) : Yt("month", e.month) : Yt("year", e.year);
}
function Q0(e) {
  const { hour: t, minute: n, second: r, millisecond: i } = e, u = Kt(t, 0, 23) || t === 24 && n === 0 && r === 0 && i === 0, s = Kt(n, 0, 59), o = Kt(r, 0, 59), a = Kt(i, 0, 999);
  return u ? s ? o ? a ? !1 : Yt("millisecond", i) : Yt("second", r) : Yt("minute", n) : Yt("hour", t);
}
function Ce(e) {
  return typeof e > "u";
}
function rr(e) {
  return typeof e == "number";
}
function Es(e) {
  return typeof e == "number" && e % 1 === 0;
}
function Ab(e) {
  return typeof e == "string";
}
function Fb(e) {
  return Object.prototype.toString.call(e) === "[object Date]";
}
function ed() {
  try {
    return typeof Intl < "u" && !!Intl.RelativeTimeFormat;
  } catch {
    return !1;
  }
}
function td() {
  try {
    return typeof Intl < "u" && !!Intl.Locale && ("weekInfo" in Intl.Locale.prototype || "getWeekInfo" in Intl.Locale.prototype);
  } catch {
    return !1;
  }
}
function Mb(e) {
  return Array.isArray(e) ? e : [e];
}
function Hl(e, t, n) {
  if (e.length !== 0)
    return e.reduce((r, i) => {
      const u = [t(i), i];
      return r && n(r[0], u[0]) === r[0] ? r : u;
    }, null)[1];
}
function Nb(e, t) {
  return t.reduce((n, r) => (n[r] = e[r], n), {});
}
function ti(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
function qo(e) {
  if (e == null)
    return null;
  if (typeof e != "object")
    throw new vt("Week settings must be an object");
  if (!Kt(e.firstDay, 1, 7) || !Kt(e.minimalDays, 1, 7) || !Array.isArray(e.weekend) || e.weekend.some((t) => !Kt(t, 1, 7)))
    throw new vt("Invalid week settings");
  return {
    firstDay: e.firstDay,
    minimalDays: e.minimalDays,
    weekend: Array.from(e.weekend)
  };
}
function Kt(e, t, n) {
  return Es(e) && e >= t && e <= n;
}
function Ib(e, t) {
  return e - t * Math.floor(e / t);
}
function rt(e, t = 2) {
  const n = e < 0;
  let r;
  return n ? r = "-" + ("" + -e).padStart(t, "0") : r = ("" + e).padStart(t, "0"), r;
}
function Yn(e) {
  if (!(Ce(e) || e === null || e === ""))
    return parseInt(e, 10);
}
function pr(e) {
  if (!(Ce(e) || e === null || e === ""))
    return parseFloat(e);
}
function Ea(e) {
  if (!(Ce(e) || e === null || e === "")) {
    const t = parseFloat("0." + e) * 1e3;
    return Math.floor(t);
  }
}
function Ca(e, t, n = !1) {
  const r = 10 ** t;
  return (n ? Math.trunc : Math.round)(e * r) / r;
}
function Ji(e) {
  return e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0);
}
function Zr(e) {
  return Ji(e) ? 366 : 365;
}
function Yu(e, t) {
  const n = Ib(t - 1, 12) + 1, r = e + (t - n) / 12;
  return n === 2 ? Ji(r) ? 29 : 28 : [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][n - 1];
}
function Cs(e) {
  let t = Date.UTC(
    e.year,
    e.month - 1,
    e.day,
    e.hour,
    e.minute,
    e.second,
    e.millisecond
  );
  return e.year < 100 && e.year >= 0 && (t = new Date(t), t.setUTCFullYear(e.year, e.month - 1, e.day)), +t;
}
function Ul(e, t, n) {
  return -wa(ka(e, 1, t), n) + t - 1;
}
function ji(e, t = 4, n = 1) {
  const r = Ul(e, t, n), i = Ul(e + 1, t, n);
  return (Zr(e) - r + i) / 7;
}
function Wo(e) {
  return e > 99 ? e : e > Je.twoDigitCutoffYear ? 1900 + e : 2e3 + e;
}
function nd(e, t, n, r = null) {
  const i = new Date(e), u = {
    hourCycle: "h23",
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit"
  };
  r && (u.timeZone = r);
  const s = { timeZoneName: t, ...u }, o = new Intl.DateTimeFormat(n, s).formatToParts(i).find((a) => a.type.toLowerCase() === "timezonename");
  return o ? o.value : null;
}
function Ss(e, t) {
  let n = parseInt(e, 10);
  Number.isNaN(n) && (n = 0);
  const r = parseInt(t, 10) || 0, i = n < 0 || Object.is(n, -0) ? -r : r;
  return n * 60 + i;
}
function rd(e) {
  const t = Number(e);
  if (typeof e == "boolean" || e === "" || Number.isNaN(t))
    throw new vt(`Invalid unit value ${e}`);
  return t;
}
function Ku(e, t) {
  const n = {};
  for (const r in e)
    if (ti(e, r)) {
      const i = e[r];
      if (i == null) continue;
      n[t(r)] = rd(i);
    }
  return n;
}
function Di(e, t) {
  const n = Math.trunc(Math.abs(e / 60)), r = Math.trunc(Math.abs(e % 60)), i = e >= 0 ? "+" : "-";
  switch (t) {
    case "short":
      return `${i}${rt(n, 2)}:${rt(r, 2)}`;
    case "narrow":
      return `${i}${n}${r > 0 ? `:${r}` : ""}`;
    case "techie":
      return `${i}${rt(n, 2)}${rt(r, 2)}`;
    default:
      throw new RangeError(`Value format ${t} is out of range for property format`);
  }
}
function Ts(e) {
  return Nb(e, ["hour", "minute", "second", "millisecond"]);
}
const Lb = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December"
], id = [
  "Jan",
  "Feb",
  "Mar",
  "Apr",
  "May",
  "Jun",
  "Jul",
  "Aug",
  "Sep",
  "Oct",
  "Nov",
  "Dec"
], zb = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function ud(e) {
  switch (e) {
    case "narrow":
      return [...zb];
    case "short":
      return [...id];
    case "long":
      return [...Lb];
    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];
    case "2-digit":
      return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
    default:
      return null;
  }
}
const sd = [
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
  "Sunday"
], od = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], Pb = ["M", "T", "W", "T", "F", "S", "S"];
function ad(e) {
  switch (e) {
    case "narrow":
      return [...Pb];
    case "short":
      return [...od];
    case "long":
      return [...sd];
    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7"];
    default:
      return null;
  }
}
const ld = ["AM", "PM"], Rb = ["Before Christ", "Anno Domini"], jb = ["BC", "AD"], Bb = ["B", "A"];
function cd(e) {
  switch (e) {
    case "narrow":
      return [...Bb];
    case "short":
      return [...jb];
    case "long":
      return [...Rb];
    default:
      return null;
  }
}
function Vb(e) {
  return ld[e.hour < 12 ? 0 : 1];
}
function Hb(e, t) {
  return ad(t)[e.weekday - 1];
}
function Ub(e, t) {
  return ud(t)[e.month - 1];
}
function qb(e, t) {
  return cd(t)[e.year < 0 ? 0 : 1];
}
function Wb(e, t, n = "always", r = !1) {
  const i = {
    years: ["year", "yr."],
    quarters: ["quarter", "qtr."],
    months: ["month", "mo."],
    weeks: ["week", "wk."],
    days: ["day", "day", "days"],
    hours: ["hour", "hr."],
    minutes: ["minute", "min."],
    seconds: ["second", "sec."]
  }, u = ["hours", "minutes", "seconds"].indexOf(e) === -1;
  if (n === "auto" && u) {
    const f = e === "days";
    switch (t) {
      case 1:
        return f ? "tomorrow" : `next ${i[e][0]}`;
      case -1:
        return f ? "yesterday" : `last ${i[e][0]}`;
      case 0:
        return f ? "today" : `this ${i[e][0]}`;
    }
  }
  const s = Object.is(t, -0) || t < 0, o = Math.abs(t), a = o === 1, c = i[e], l = r ? a ? c[1] : c[2] || c[1] : a ? i[e][0] : e;
  return s ? `${o} ${l} ago` : `in ${o} ${l}`;
}
function ql(e, t) {
  let n = "";
  for (const r of e)
    r.literal ? n += r.val : n += t(r.val);
  return n;
}
const $b = {
  D: Zu,
  DD: D0,
  DDD: A0,
  DDDD: F0,
  t: M0,
  tt: N0,
  ttt: I0,
  tttt: L0,
  T: z0,
  TT: P0,
  TTT: R0,
  TTTT: j0,
  f: B0,
  ff: H0,
  fff: q0,
  ffff: $0,
  F: V0,
  FF: U0,
  FFF: W0,
  FFFF: Z0
};
class Et {
  static create(t, n = {}) {
    return new Et(t, n);
  }
  static parseFormat(t) {
    let n = null, r = "", i = !1;
    const u = [];
    for (let s = 0; s < t.length; s++) {
      const o = t.charAt(s);
      o === "'" ? (r.length > 0 && u.push({ literal: i || /^\s+$/.test(r), val: r }), n = null, r = "", i = !i) : i || o === n ? r += o : (r.length > 0 && u.push({ literal: /^\s+$/.test(r), val: r }), r = o, n = o);
    }
    return r.length > 0 && u.push({ literal: i || /^\s+$/.test(r), val: r }), u;
  }
  static macroTokenToFormatOpts(t) {
    return $b[t];
  }
  constructor(t, n) {
    this.opts = n, this.loc = t, this.systemLoc = null;
  }
  formatWithSystemDefault(t, n) {
    return this.systemLoc === null && (this.systemLoc = this.loc.redefaultToSystem()), this.systemLoc.dtFormatter(t, { ...this.opts, ...n }).format();
  }
  dtFormatter(t, n = {}) {
    return this.loc.dtFormatter(t, { ...this.opts, ...n });
  }
  formatDateTime(t, n) {
    return this.dtFormatter(t, n).format();
  }
  formatDateTimeParts(t, n) {
    return this.dtFormatter(t, n).formatToParts();
  }
  formatInterval(t, n) {
    return this.dtFormatter(t.start, n).dtf.formatRange(t.start.toJSDate(), t.end.toJSDate());
  }
  resolvedOptions(t, n) {
    return this.dtFormatter(t, n).resolvedOptions();
  }
  num(t, n = 0) {
    if (this.opts.forceSimple)
      return rt(t, n);
    const r = { ...this.opts };
    return n > 0 && (r.padTo = n), this.loc.numberFormatter(r).format(t);
  }
  formatDateTimeFromString(t, n) {
    const r = this.loc.listingMode() === "en", i = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory", u = (p, h) => this.loc.extract(t, p, h), s = (p) => t.isOffsetFixed && t.offset === 0 && p.allowZ ? "Z" : t.isValid ? t.zone.formatOffset(t.ts, p.format) : "", o = () => r ? Vb(t) : u({ hour: "numeric", hourCycle: "h12" }, "dayperiod"), a = (p, h) => r ? Ub(t, p) : u(h ? { month: p } : { month: p, day: "numeric" }, "month"), c = (p, h) => r ? Hb(t, p) : u(
      h ? { weekday: p } : { weekday: p, month: "long", day: "numeric" },
      "weekday"
    ), l = (p) => {
      const h = Et.macroTokenToFormatOpts(p);
      return h ? this.formatWithSystemDefault(t, h) : p;
    }, f = (p) => r ? qb(t, p) : u({ era: p }, "era"), m = (p) => {
      switch (p) {
        case "S":
          return this.num(t.millisecond);
        case "u":
        case "SSS":
          return this.num(t.millisecond, 3);
        case "s":
          return this.num(t.second);
        case "ss":
          return this.num(t.second, 2);
        case "uu":
          return this.num(Math.floor(t.millisecond / 10), 2);
        case "uuu":
          return this.num(Math.floor(t.millisecond / 100));
        case "m":
          return this.num(t.minute);
        case "mm":
          return this.num(t.minute, 2);
        case "h":
          return this.num(t.hour % 12 === 0 ? 12 : t.hour % 12);
        case "hh":
          return this.num(t.hour % 12 === 0 ? 12 : t.hour % 12, 2);
        case "H":
          return this.num(t.hour);
        case "HH":
          return this.num(t.hour, 2);
        case "Z":
          return s({ format: "narrow", allowZ: this.opts.allowZ });
        case "ZZ":
          return s({ format: "short", allowZ: this.opts.allowZ });
        case "ZZZ":
          return s({ format: "techie", allowZ: this.opts.allowZ });
        case "ZZZZ":
          return t.zone.offsetName(t.ts, { format: "short", locale: this.loc.locale });
        case "ZZZZZ":
          return t.zone.offsetName(t.ts, { format: "long", locale: this.loc.locale });
        case "z":
          return t.zoneName;
        case "a":
          return o();
        case "d":
          return i ? u({ day: "numeric" }, "day") : this.num(t.day);
        case "dd":
          return i ? u({ day: "2-digit" }, "day") : this.num(t.day, 2);
        case "c":
          return this.num(t.weekday);
        case "ccc":
          return c("short", !0);
        case "cccc":
          return c("long", !0);
        case "ccccc":
          return c("narrow", !0);
        case "E":
          return this.num(t.weekday);
        case "EEE":
          return c("short", !1);
        case "EEEE":
          return c("long", !1);
        case "EEEEE":
          return c("narrow", !1);
        case "L":
          return i ? u({ month: "numeric", day: "numeric" }, "month") : this.num(t.month);
        case "LL":
          return i ? u({ month: "2-digit", day: "numeric" }, "month") : this.num(t.month, 2);
        case "LLL":
          return a("short", !0);
        case "LLLL":
          return a("long", !0);
        case "LLLLL":
          return a("narrow", !0);
        case "M":
          return i ? u({ month: "numeric" }, "month") : this.num(t.month);
        case "MM":
          return i ? u({ month: "2-digit" }, "month") : this.num(t.month, 2);
        case "MMM":
          return a("short", !1);
        case "MMMM":
          return a("long", !1);
        case "MMMMM":
          return a("narrow", !1);
        case "y":
          return i ? u({ year: "numeric" }, "year") : this.num(t.year);
        case "yy":
          return i ? u({ year: "2-digit" }, "year") : this.num(t.year.toString().slice(-2), 2);
        case "yyyy":
          return i ? u({ year: "numeric" }, "year") : this.num(t.year, 4);
        case "yyyyyy":
          return i ? u({ year: "numeric" }, "year") : this.num(t.year, 6);
        case "G":
          return f("short");
        case "GG":
          return f("long");
        case "GGGGG":
          return f("narrow");
        case "kk":
          return this.num(t.weekYear.toString().slice(-2), 2);
        case "kkkk":
          return this.num(t.weekYear, 4);
        case "W":
          return this.num(t.weekNumber);
        case "WW":
          return this.num(t.weekNumber, 2);
        case "n":
          return this.num(t.localWeekNumber);
        case "nn":
          return this.num(t.localWeekNumber, 2);
        case "ii":
          return this.num(t.localWeekYear.toString().slice(-2), 2);
        case "iiii":
          return this.num(t.localWeekYear, 4);
        case "o":
          return this.num(t.ordinal);
        case "ooo":
          return this.num(t.ordinal, 3);
        case "q":
          return this.num(t.quarter);
        case "qq":
          return this.num(t.quarter, 2);
        case "X":
          return this.num(Math.floor(t.ts / 1e3));
        case "x":
          return this.num(t.ts);
        default:
          return l(p);
      }
    };
    return ql(Et.parseFormat(n), m);
  }
  formatDurationFromString(t, n) {
    const r = (a) => {
      switch (a[0]) {
        case "S":
          return "millisecond";
        case "s":
          return "second";
        case "m":
          return "minute";
        case "h":
          return "hour";
        case "d":
          return "day";
        case "w":
          return "week";
        case "M":
          return "month";
        case "y":
          return "year";
        default:
          return null;
      }
    }, i = (a) => (c) => {
      const l = r(c);
      return l ? this.num(a.get(l), c.length) : c;
    }, u = Et.parseFormat(n), s = u.reduce(
      (a, { literal: c, val: l }) => c ? a : a.concat(l),
      []
    ), o = t.shiftTo(...s.map(r).filter((a) => a));
    return ql(u, i(o));
  }
}
const fd = /[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;
function si(...e) {
  const t = e.reduce((n, r) => n + r.source, "");
  return RegExp(`^${t}$`);
}
function oi(...e) {
  return (t) => e.reduce(
    ([n, r, i], u) => {
      const [s, o, a] = u(t, i);
      return [{ ...n, ...s }, o || r, a];
    },
    [{}, null, 1]
  ).slice(0, 2);
}
function ai(e, ...t) {
  if (e == null)
    return [null, null];
  for (const [n, r] of t) {
    const i = n.exec(e);
    if (i)
      return r(i);
  }
  return [null, null];
}
function dd(...e) {
  return (t, n) => {
    const r = {};
    let i;
    for (i = 0; i < e.length; i++)
      r[e[i]] = Yn(t[n + i]);
    return [r, null, n + i];
  };
}
const hd = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/, Zb = `(?:${hd.source}?(?:\\[(${fd.source})\\])?)?`, Sa = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/, pd = RegExp(`${Sa.source}${Zb}`), Ta = RegExp(`(?:T${pd.source})?`), Gb = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/, Yb = /(\d{4})-?W(\d\d)(?:-?(\d))?/, Kb = /(\d{4})-?(\d{3})/, Jb = dd("weekYear", "weekNumber", "weekDay"), Xb = dd("year", "ordinal"), Qb = /(\d{4})-(\d\d)-(\d\d)/, md = RegExp(
  `${Sa.source} ?(?:${hd.source}|(${fd.source}))?`
), eg = RegExp(`(?: ${md.source})?`);
function Gr(e, t, n) {
  const r = e[t];
  return Ce(r) ? n : Yn(r);
}
function tg(e, t) {
  return [{
    year: Gr(e, t),
    month: Gr(e, t + 1, 1),
    day: Gr(e, t + 2, 1)
  }, null, t + 3];
}
function li(e, t) {
  return [{
    hours: Gr(e, t, 0),
    minutes: Gr(e, t + 1, 0),
    seconds: Gr(e, t + 2, 0),
    milliseconds: Ea(e[t + 3])
  }, null, t + 4];
}
function Xi(e, t) {
  const n = !e[t] && !e[t + 1], r = Ss(e[t + 1], e[t + 2]), i = n ? null : Nt.instance(r);
  return [{}, i, t + 3];
}
function Qi(e, t) {
  const n = e[t] ? Ln.create(e[t]) : null;
  return [{}, n, t + 1];
}
const ng = RegExp(`^T?${Sa.source}$`), rg = /^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;
function ig(e) {
  const [t, n, r, i, u, s, o, a, c] = e, l = t[0] === "-", f = a && a[0] === "-", m = (p, h = !1) => p !== void 0 && (h || p && l) ? -p : p;
  return [
    {
      years: m(pr(n)),
      months: m(pr(r)),
      weeks: m(pr(i)),
      days: m(pr(u)),
      hours: m(pr(s)),
      minutes: m(pr(o)),
      seconds: m(pr(a), a === "-0"),
      milliseconds: m(Ea(c), f)
    }
  ];
}
const ug = {
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function Oa(e, t, n, r, i, u, s) {
  const o = {
    year: t.length === 2 ? Wo(Yn(t)) : Yn(t),
    month: id.indexOf(n) + 1,
    day: Yn(r),
    hour: Yn(i),
    minute: Yn(u)
  };
  return s && (o.second = Yn(s)), e && (o.weekday = e.length > 3 ? sd.indexOf(e) + 1 : od.indexOf(e) + 1), o;
}
const sg = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;
function og(e) {
  const [
    ,
    t,
    n,
    r,
    i,
    u,
    s,
    o,
    a,
    c,
    l,
    f
  ] = e, m = Oa(t, i, r, n, u, s, o);
  let p;
  return a ? p = ug[a] : c ? p = 0 : p = Ss(l, f), [m, new Nt(p)];
}
function ag(e) {
  return e.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim();
}
const lg = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/, cg = /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/, fg = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;
function Wl(e) {
  const [, t, n, r, i, u, s, o] = e;
  return [Oa(t, i, r, n, u, s, o), Nt.utcInstance];
}
function dg(e) {
  const [, t, n, r, i, u, s, o] = e;
  return [Oa(t, o, n, r, i, u, s), Nt.utcInstance];
}
const hg = si(Gb, Ta), pg = si(Yb, Ta), mg = si(Kb, Ta), bg = si(pd), bd = oi(
  tg,
  li,
  Xi,
  Qi
), gg = oi(
  Jb,
  li,
  Xi,
  Qi
), yg = oi(
  Xb,
  li,
  Xi,
  Qi
), _g = oi(
  li,
  Xi,
  Qi
);
function xg(e) {
  return ai(
    e,
    [hg, bd],
    [pg, gg],
    [mg, yg],
    [bg, _g]
  );
}
function vg(e) {
  return ai(ag(e), [sg, og]);
}
function kg(e) {
  return ai(
    e,
    [lg, Wl],
    [cg, Wl],
    [fg, dg]
  );
}
function wg(e) {
  return ai(e, [rg, ig]);
}
const Eg = oi(li);
function Cg(e) {
  return ai(e, [ng, Eg]);
}
const Sg = si(Qb, eg), Tg = si(md), Og = oi(
  li,
  Xi,
  Qi
);
function Dg(e) {
  return ai(
    e,
    [Sg, bd],
    [Tg, Og]
  );
}
const $l = "Invalid Duration", gd = {
  weeks: {
    days: 7,
    hours: 7 * 24,
    minutes: 7 * 24 * 60,
    seconds: 7 * 24 * 60 * 60,
    milliseconds: 7 * 24 * 60 * 60 * 1e3
  },
  days: {
    hours: 24,
    minutes: 24 * 60,
    seconds: 24 * 60 * 60,
    milliseconds: 24 * 60 * 60 * 1e3
  },
  hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1e3 },
  minutes: { seconds: 60, milliseconds: 60 * 1e3 },
  seconds: { milliseconds: 1e3 }
}, Ag = {
  years: {
    quarters: 4,
    months: 12,
    weeks: 52,
    days: 365,
    hours: 365 * 24,
    minutes: 365 * 24 * 60,
    seconds: 365 * 24 * 60 * 60,
    milliseconds: 365 * 24 * 60 * 60 * 1e3
  },
  quarters: {
    months: 3,
    weeks: 13,
    days: 91,
    hours: 91 * 24,
    minutes: 91 * 24 * 60,
    seconds: 91 * 24 * 60 * 60,
    milliseconds: 91 * 24 * 60 * 60 * 1e3
  },
  months: {
    weeks: 4,
    days: 30,
    hours: 30 * 24,
    minutes: 30 * 24 * 60,
    seconds: 30 * 24 * 60 * 60,
    milliseconds: 30 * 24 * 60 * 60 * 1e3
  },
  ...gd
}, Gt = 146097 / 400, Fr = 146097 / 4800, Fg = {
  years: {
    quarters: 4,
    months: 12,
    weeks: Gt / 7,
    days: Gt,
    hours: Gt * 24,
    minutes: Gt * 24 * 60,
    seconds: Gt * 24 * 60 * 60,
    milliseconds: Gt * 24 * 60 * 60 * 1e3
  },
  quarters: {
    months: 3,
    weeks: Gt / 28,
    days: Gt / 4,
    hours: Gt * 24 / 4,
    minutes: Gt * 24 * 60 / 4,
    seconds: Gt * 24 * 60 * 60 / 4,
    milliseconds: Gt * 24 * 60 * 60 * 1e3 / 4
  },
  months: {
    weeks: Fr / 7,
    days: Fr,
    hours: Fr * 24,
    minutes: Fr * 24 * 60,
    seconds: Fr * 24 * 60 * 60,
    milliseconds: Fr * 24 * 60 * 60 * 1e3
  },
  ...gd
}, br = [
  "years",
  "quarters",
  "months",
  "weeks",
  "days",
  "hours",
  "minutes",
  "seconds",
  "milliseconds"
], Mg = br.slice(0).reverse();
function Un(e, t, n = !1) {
  const r = {
    values: n ? t.values : { ...e.values, ...t.values || {} },
    loc: e.loc.clone(t.loc),
    conversionAccuracy: t.conversionAccuracy || e.conversionAccuracy,
    matrix: t.matrix || e.matrix
  };
  return new Pe(r);
}
function yd(e, t) {
  let n = t.milliseconds ?? 0;
  for (const r of Mg.slice(1))
    t[r] && (n += t[r] * e[r].milliseconds);
  return n;
}
function Zl(e, t) {
  const n = yd(e, t) < 0 ? -1 : 1;
  br.reduceRight((r, i) => {
    if (Ce(t[i]))
      return r;
    if (r) {
      const u = t[r] * n, s = e[i][r], o = Math.floor(u / s);
      t[i] += o * n, t[r] -= o * s * n;
    }
    return i;
  }, null), br.reduce((r, i) => {
    if (Ce(t[i]))
      return r;
    if (r) {
      const u = t[r] % 1;
      t[r] -= u, t[i] += u * e[r][i];
    }
    return i;
  }, null);
}
function Ng(e) {
  const t = {};
  for (const [n, r] of Object.entries(e))
    r !== 0 && (t[n] = r);
  return t;
}
class Pe {
  /**
   * @private
   */
  constructor(t) {
    const n = t.conversionAccuracy === "longterm" || !1;
    let r = n ? Fg : Ag;
    t.matrix && (r = t.matrix), this.values = t.values, this.loc = t.loc || He.create(), this.conversionAccuracy = n ? "longterm" : "casual", this.invalid = t.invalid || null, this.matrix = r, this.isLuxonDuration = !0;
  }
  /**
   * Create Duration from a number of milliseconds.
   * @param {number} count of milliseconds
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  static fromMillis(t, n) {
    return Pe.fromObject({ milliseconds: t }, n);
  }
  /**
   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.
   * If this object is empty then a zero milliseconds duration is returned.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.years
   * @param {number} obj.quarters
   * @param {number} obj.months
   * @param {number} obj.weeks
   * @param {number} obj.days
   * @param {number} obj.hours
   * @param {number} obj.minutes
   * @param {number} obj.seconds
   * @param {number} obj.milliseconds
   * @param {Object} [opts=[]] - options for creating this Duration
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
   * @param {string} [opts.matrix=Object] - the custom conversion system to use
   * @return {Duration}
   */
  static fromObject(t, n = {}) {
    if (t == null || typeof t != "object")
      throw new vt(
        `Duration.fromObject: argument expected to be an object, got ${t === null ? "null" : typeof t}`
      );
    return new Pe({
      values: Ku(t, Pe.normalizeUnit),
      loc: He.fromObject(n),
      conversionAccuracy: n.conversionAccuracy,
      matrix: n.matrix
    });
  }
  /**
   * Create a Duration from DurationLike.
   *
   * @param {Object | number | Duration} durationLike
   * One of:
   * - object with keys like 'years' and 'hours'.
   * - number representing milliseconds
   * - Duration instance
   * @return {Duration}
   */
  static fromDurationLike(t) {
    if (rr(t))
      return Pe.fromMillis(t);
    if (Pe.isDuration(t))
      return t;
    if (typeof t == "object")
      return Pe.fromObject(t);
    throw new vt(
      `Unknown duration argument ${t} of type ${typeof t}`
    );
  }
  /**
   * Create a Duration from an ISO 8601 duration string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
   * @param {string} [opts.matrix=Object] - the preset conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }
   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }
   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }
   * @return {Duration}
   */
  static fromISO(t, n) {
    const [r] = wg(t);
    return r ? Pe.fromObject(r, n) : Pe.invalid("unparsable", `the input "${t}" can't be parsed as ISO 8601`);
  }
  /**
   * Create a Duration from an ISO 8601 time string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
   * @param {string} [opts.matrix=Object] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }
   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @return {Duration}
   */
  static fromISOTime(t, n) {
    const [r] = Cg(t);
    return r ? Pe.fromObject(r, n) : Pe.invalid("unparsable", `the input "${t}" can't be parsed as ISO 8601`);
  }
  /**
   * Create an invalid Duration.
   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Duration}
   */
  static invalid(t, n = null) {
    if (!t)
      throw new vt("need to specify a reason the Duration is invalid");
    const r = t instanceof cn ? t : new cn(t, n);
    if (Je.throwOnInvalid)
      throw new rb(r);
    return new Pe({ invalid: r });
  }
  /**
   * @private
   */
  static normalizeUnit(t) {
    const n = {
      year: "years",
      years: "years",
      quarter: "quarters",
      quarters: "quarters",
      month: "months",
      months: "months",
      week: "weeks",
      weeks: "weeks",
      day: "days",
      days: "days",
      hour: "hours",
      hours: "hours",
      minute: "minutes",
      minutes: "minutes",
      second: "seconds",
      seconds: "seconds",
      millisecond: "milliseconds",
      milliseconds: "milliseconds"
    }[t && t.toLowerCase()];
    if (!n) throw new O0(t);
    return n;
  }
  /**
   * Check if an object is a Duration. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  static isDuration(t) {
    return t && t.isLuxonDuration || !1;
  }
  /**
   * Get  the locale of a Duration, such 'en-GB'
   * @type {string}
   */
  get locale() {
    return this.isValid ? this.loc.locale : null;
  }
  /**
   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration
   *
   * @type {string}
   */
  get numberingSystem() {
    return this.isValid ? this.loc.numberingSystem : null;
  }
  /**
   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:
   * * `S` for milliseconds
   * * `s` for seconds
   * * `m` for minutes
   * * `h` for hours
   * * `d` for days
   * * `w` for weeks
   * * `M` for months
   * * `y` for years
   * Notes:
   * * Add padding by repeating the token, e.g. "yy" pads the years to two digits, "hhhh" pads the hours out to four digits
   * * Tokens can be escaped by wrapping with single quotes.
   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.
   * @param {string} fmt - the format string
   * @param {Object} opts - options
   * @param {boolean} [opts.floor=true] - floor numerical values
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("y d s") //=> "1 6 2"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("yy dd sss") //=> "01 06 002"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("M S") //=> "12 518402000"
   * @return {string}
   */
  toFormat(t, n = {}) {
    const r = {
      ...n,
      floor: n.round !== !1 && n.floor !== !1
    };
    return this.isValid ? Et.create(this.loc, r).formatDurationFromString(this, t) : $l;
  }
  /**
   * Returns a string representation of a Duration with all units included.
   * To modify its behavior, use `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options
   * @param {Object} opts - Formatting options. Accepts the same keys as the options parameter of the native `Intl.NumberFormat` constructor, as well as `listStyle`.
   * @param {string} [opts.listStyle='narrow'] - How to format the merged list. Corresponds to the `style` property of the options parameter of the native `Intl.ListFormat` constructor.
   * @example
   * ```js
   * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })
   * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'
   * dur.toHuman({ listStyle: "long" }) //=> '1 day, 5 hours, and 6 minutes'
   * dur.toHuman({ unitDisplay: "short" }) //=> '1 day, 5 hr, 6 min'
   * ```
   */
  toHuman(t = {}) {
    if (!this.isValid) return $l;
    const n = br.map((r) => {
      const i = this.values[r];
      return Ce(i) ? null : this.loc.numberFormatter({ style: "unit", unitDisplay: "long", ...t, unit: r.slice(0, -1) }).format(i);
    }).filter((r) => r);
    return this.loc.listFormatter({ type: "conjunction", style: t.listStyle || "narrow", ...t }).format(n);
  }
  /**
   * Returns a JavaScript object with this Duration's values.
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }
   * @return {Object}
   */
  toObject() {
    return this.isValid ? { ...this.values } : {};
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'
   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'
   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'
   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'
   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'
   * @return {string}
   */
  toISO() {
    if (!this.isValid) return null;
    let t = "P";
    return this.years !== 0 && (t += this.years + "Y"), (this.months !== 0 || this.quarters !== 0) && (t += this.months + this.quarters * 3 + "M"), this.weeks !== 0 && (t += this.weeks + "W"), this.days !== 0 && (t += this.days + "D"), (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) && (t += "T"), this.hours !== 0 && (t += this.hours + "H"), this.minutes !== 0 && (t += this.minutes + "M"), (this.seconds !== 0 || this.milliseconds !== 0) && (t += Ca(this.seconds + this.milliseconds / 1e3, 3) + "S"), t === "P" && (t += "T0S"), t;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.
   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'
   * @return {string}
   */
  toISOTime(t = {}) {
    if (!this.isValid) return null;
    const n = this.toMillis();
    return n < 0 || n >= 864e5 ? null : (t = {
      suppressMilliseconds: !1,
      suppressSeconds: !1,
      includePrefix: !1,
      format: "extended",
      ...t,
      includeOffset: !1
    }, de.fromMillis(n, { zone: "UTC" }).toISOTime(t));
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.
   * @return {string}
   */
  toJSON() {
    return this.toISO();
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.
   * @return {string}
   */
  toString() {
    return this.toISO();
  }
  /**
   * Returns a string representation of this Duration appropriate for the REPL.
   * @return {string}
   */
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return this.isValid ? `Duration { values: ${JSON.stringify(this.values)} }` : `Duration { Invalid, reason: ${this.invalidReason} }`;
  }
  /**
   * Returns an milliseconds value of this Duration.
   * @return {number}
   */
  toMillis() {
    return this.isValid ? yd(this.matrix, this.values) : NaN;
  }
  /**
   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}
   * @return {number}
   */
  valueOf() {
    return this.toMillis();
  }
  /**
   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  plus(t) {
    if (!this.isValid) return this;
    const n = Pe.fromDurationLike(t), r = {};
    for (const i of br)
      (ti(n.values, i) || ti(this.values, i)) && (r[i] = n.get(i) + this.get(i));
    return Un(this, { values: r }, !0);
  }
  /**
   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  minus(t) {
    if (!this.isValid) return this;
    const n = Pe.fromDurationLike(t);
    return this.plus(n.negate());
  }
  /**
   * Scale this Duration by the specified amount. Return a newly-constructed Duration.
   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === "hours" ? x * 2 : x) //=> { hours: 2, minutes: 30 }
   * @return {Duration}
   */
  mapUnits(t) {
    if (!this.isValid) return this;
    const n = {};
    for (const r of Object.keys(this.values))
      n[r] = rd(t(this.values[r], r));
    return Un(this, { values: n }, !0);
  }
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2
   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0
   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3
   * @return {number}
   */
  get(t) {
    return this[Pe.normalizeUnit(t)];
  }
  /**
   * "Set" the values of specified units. Return a newly-constructed Duration.
   * @param {Object} values - a mapping of units to numbers
   * @example dur.set({ years: 2017 })
   * @example dur.set({ hours: 8, minutes: 30 })
   * @return {Duration}
   */
  set(t) {
    if (!this.isValid) return this;
    const n = { ...this.values, ...Ku(t, Pe.normalizeUnit) };
    return Un(this, { values: n });
  }
  /**
   * "Set" the locale and/or numberingSystem.  Returns a newly-constructed Duration.
   * @example dur.reconfigure({ locale: 'en-GB' })
   * @return {Duration}
   */
  reconfigure({ locale: t, numberingSystem: n, conversionAccuracy: r, matrix: i } = {}) {
    const s = { loc: this.loc.clone({ locale: t, numberingSystem: n }), matrix: i, conversionAccuracy: r };
    return Un(this, s);
  }
  /**
   * Return the length of the duration in the specified unit.
   * @param {string} unit - a unit such as 'minutes' or 'days'
   * @example Duration.fromObject({years: 1}).as('days') //=> 365
   * @example Duration.fromObject({years: 1}).as('months') //=> 12
   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5
   * @return {number}
   */
  as(t) {
    return this.isValid ? this.shiftTo(t).get(t) : NaN;
  }
  /**
   * Reduce this Duration to its canonical representation in its current units.
   * Assuming the overall value of the Duration is positive, this means:
   * - excessive values for lower-order units are converted to higher-order units (if possible, see first and second example)
   * - negative lower-order units are converted to higher order units (there must be such a higher order unit, otherwise
   *   the overall value would be negative, see third example)
   * - fractional values for higher-order units are converted to lower-order units (if possible, see fourth example)
   *
   * If the overall value is negative, the result of this method is equivalent to `this.negate().normalize().negate()`.
   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }
   * @example Duration.fromObject({ days: 5000 }).normalize().toObject() //=> { days: 5000 }
   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }
   * @example Duration.fromObject({ years: 2.5, days: 0, hours: 0 }).normalize().toObject() //=> { years: 2, days: 182, hours: 12 }
   * @return {Duration}
   */
  normalize() {
    if (!this.isValid) return this;
    const t = this.toObject();
    return Zl(this.matrix, t), Un(this, { values: t }, !0);
  }
  /**
   * Rescale units to its largest representation
   * @example Duration.fromObject({ milliseconds: 90000 }).rescale().toObject() //=> { minutes: 1, seconds: 30 }
   * @return {Duration}
   */
  rescale() {
    if (!this.isValid) return this;
    const t = Ng(this.normalize().shiftToAll().toObject());
    return Un(this, { values: t }, !0);
  }
  /**
   * Convert this Duration into its representation in a different set of units.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }
   * @return {Duration}
   */
  shiftTo(...t) {
    if (!this.isValid) return this;
    if (t.length === 0)
      return this;
    t = t.map((s) => Pe.normalizeUnit(s));
    const n = {}, r = {}, i = this.toObject();
    let u;
    for (const s of br)
      if (t.indexOf(s) >= 0) {
        u = s;
        let o = 0;
        for (const c in r)
          o += this.matrix[c][s] * r[c], r[c] = 0;
        rr(i[s]) && (o += i[s]);
        const a = Math.trunc(o);
        n[s] = a, r[s] = (o * 1e3 - a * 1e3) / 1e3;
      } else rr(i[s]) && (r[s] = i[s]);
    for (const s in r)
      r[s] !== 0 && (n[u] += s === u ? r[s] : r[s] / this.matrix[u][s]);
    return Zl(this.matrix, n), Un(this, { values: n }, !0);
  }
  /**
   * Shift this Duration to all available units.
   * Same as shiftTo("years", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds")
   * @return {Duration}
   */
  shiftToAll() {
    return this.isValid ? this.shiftTo(
      "years",
      "months",
      "weeks",
      "days",
      "hours",
      "minutes",
      "seconds",
      "milliseconds"
    ) : this;
  }
  /**
   * Return the negative of this Duration.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }
   * @return {Duration}
   */
  negate() {
    if (!this.isValid) return this;
    const t = {};
    for (const n of Object.keys(this.values))
      t[n] = this.values[n] === 0 ? 0 : -this.values[n];
    return Un(this, { values: t }, !0);
  }
  /**
   * Get the years.
   * @type {number}
   */
  get years() {
    return this.isValid ? this.values.years || 0 : NaN;
  }
  /**
   * Get the quarters.
   * @type {number}
   */
  get quarters() {
    return this.isValid ? this.values.quarters || 0 : NaN;
  }
  /**
   * Get the months.
   * @type {number}
   */
  get months() {
    return this.isValid ? this.values.months || 0 : NaN;
  }
  /**
   * Get the weeks
   * @type {number}
   */
  get weeks() {
    return this.isValid ? this.values.weeks || 0 : NaN;
  }
  /**
   * Get the days.
   * @type {number}
   */
  get days() {
    return this.isValid ? this.values.days || 0 : NaN;
  }
  /**
   * Get the hours.
   * @type {number}
   */
  get hours() {
    return this.isValid ? this.values.hours || 0 : NaN;
  }
  /**
   * Get the minutes.
   * @type {number}
   */
  get minutes() {
    return this.isValid ? this.values.minutes || 0 : NaN;
  }
  /**
   * Get the seconds.
   * @return {number}
   */
  get seconds() {
    return this.isValid ? this.values.seconds || 0 : NaN;
  }
  /**
   * Get the milliseconds.
   * @return {number}
   */
  get milliseconds() {
    return this.isValid ? this.values.milliseconds || 0 : NaN;
  }
  /**
   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations
   * on invalid DateTimes or Intervals.
   * @return {boolean}
   */
  get isValid() {
    return this.invalid === null;
  }
  /**
   * Returns an error code if this Duration became invalid, or null if the Duration is valid
   * @return {string}
   */
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  /**
   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid
   * @type {string}
   */
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  /**
   * Equality check
   * Two Durations are equal iff they have the same units and the same values for each unit.
   * @param {Duration} other
   * @return {boolean}
   */
  equals(t) {
    if (!this.isValid || !t.isValid || !this.loc.equals(t.loc))
      return !1;
    function n(r, i) {
      return r === void 0 || r === 0 ? i === void 0 || i === 0 : r === i;
    }
    for (const r of br)
      if (!n(this.values[r], t.values[r]))
        return !1;
    return !0;
  }
}
const Mr = "Invalid Interval";
function Ig(e, t) {
  return !e || !e.isValid ? Qe.invalid("missing or invalid start") : !t || !t.isValid ? Qe.invalid("missing or invalid end") : t < e ? Qe.invalid(
    "end before start",
    `The end of an interval must be after its start, but you had start=${e.toISO()} and end=${t.toISO()}`
  ) : null;
}
class Qe {
  /**
   * @private
   */
  constructor(t) {
    this.s = t.start, this.e = t.end, this.invalid = t.invalid || null, this.isLuxonInterval = !0;
  }
  /**
   * Create an invalid Interval.
   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Interval}
   */
  static invalid(t, n = null) {
    if (!t)
      throw new vt("need to specify a reason the Interval is invalid");
    const r = t instanceof cn ? t : new cn(t, n);
    if (Je.throwOnInvalid)
      throw new nb(r);
    return new Qe({ invalid: r });
  }
  /**
   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.
   * @param {DateTime|Date|Object} start
   * @param {DateTime|Date|Object} end
   * @return {Interval}
   */
  static fromDateTimes(t, n) {
    const r = mi(t), i = mi(n), u = Ig(r, i);
    return u ?? new Qe({
      start: r,
      end: i
    });
  }
  /**
   * Create an Interval from a start DateTime and a Duration to extend to.
   * @param {DateTime|Date|Object} start
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  static after(t, n) {
    const r = Pe.fromDurationLike(n), i = mi(t);
    return Qe.fromDateTimes(i, i.plus(r));
  }
  /**
   * Create an Interval from an end DateTime and a Duration to extend backwards to.
   * @param {DateTime|Date|Object} end
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  static before(t, n) {
    const r = Pe.fromDurationLike(n), i = mi(t);
    return Qe.fromDateTimes(i.minus(r), i);
  }
  /**
   * Create an Interval from an ISO 8601 string.
   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.
   * @param {string} text - the ISO string to parse
   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {Interval}
   */
  static fromISO(t, n) {
    const [r, i] = (t || "").split("/", 2);
    if (r && i) {
      let u, s;
      try {
        u = de.fromISO(r, n), s = u.isValid;
      } catch {
        s = !1;
      }
      let o, a;
      try {
        o = de.fromISO(i, n), a = o.isValid;
      } catch {
        a = !1;
      }
      if (s && a)
        return Qe.fromDateTimes(u, o);
      if (s) {
        const c = Pe.fromISO(i, n);
        if (c.isValid)
          return Qe.after(u, c);
      } else if (a) {
        const c = Pe.fromISO(r, n);
        if (c.isValid)
          return Qe.before(o, c);
      }
    }
    return Qe.invalid("unparsable", `the input "${t}" can't be parsed as ISO 8601`);
  }
  /**
   * Check if an object is an Interval. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  static isInterval(t) {
    return t && t.isLuxonInterval || !1;
  }
  /**
   * Returns the start of the Interval
   * @type {DateTime}
   */
  get start() {
    return this.isValid ? this.s : null;
  }
  /**
   * Returns the end of the Interval
   * @type {DateTime}
   */
  get end() {
    return this.isValid ? this.e : null;
  }
  /**
   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.
   * @type {boolean}
   */
  get isValid() {
    return this.invalidReason === null;
  }
  /**
   * Returns an error code if this Interval is invalid, or null if the Interval is valid
   * @type {string}
   */
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  /**
   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid
   * @type {string}
   */
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  /**
   * Returns the length of the Interval in the specified unit.
   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.
   * @return {number}
   */
  length(t = "milliseconds") {
    return this.isValid ? this.toDuration(t).get(t) : NaN;
  }
  /**
   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.
   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'
   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'
   * @param {string} [unit='milliseconds'] - the unit of time to count.
   * @param {Object} opts - options
   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; this operation will always use the locale of the start DateTime
   * @return {number}
   */
  count(t = "milliseconds", n) {
    if (!this.isValid) return NaN;
    const r = this.start.startOf(t, n);
    let i;
    return n != null && n.useLocaleWeeks ? i = this.end.reconfigure({ locale: r.locale }) : i = this.end, i = i.startOf(t, n), Math.floor(i.diff(r, t).get(t)) + (i.valueOf() !== this.end.valueOf());
  }
  /**
   * Returns whether this Interval's start and end are both in the same unit of time
   * @param {string} unit - the unit of time to check sameness on
   * @return {boolean}
   */
  hasSame(t) {
    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, t) : !1;
  }
  /**
   * Return whether this Interval has the same start and end DateTimes.
   * @return {boolean}
   */
  isEmpty() {
    return this.s.valueOf() === this.e.valueOf();
  }
  /**
   * Return whether this Interval's start is after the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  isAfter(t) {
    return this.isValid ? this.s > t : !1;
  }
  /**
   * Return whether this Interval's end is before the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  isBefore(t) {
    return this.isValid ? this.e <= t : !1;
  }
  /**
   * Return whether this Interval contains the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  contains(t) {
    return this.isValid ? this.s <= t && this.e > t : !1;
  }
  /**
   * "Sets" the start and/or end dates. Returns a newly-constructed Interval.
   * @param {Object} values - the values to set
   * @param {DateTime} values.start - the starting DateTime
   * @param {DateTime} values.end - the ending DateTime
   * @return {Interval}
   */
  set({ start: t, end: n } = {}) {
    return this.isValid ? Qe.fromDateTimes(t || this.s, n || this.e) : this;
  }
  /**
   * Split this Interval at each of the specified DateTimes
   * @param {...DateTime} dateTimes - the unit of time to count.
   * @return {Array}
   */
  splitAt(...t) {
    if (!this.isValid) return [];
    const n = t.map(mi).filter((s) => this.contains(s)).sort((s, o) => s.toMillis() - o.toMillis()), r = [];
    let { s: i } = this, u = 0;
    for (; i < this.e; ) {
      const s = n[u] || this.e, o = +s > +this.e ? this.e : s;
      r.push(Qe.fromDateTimes(i, o)), i = o, u += 1;
    }
    return r;
  }
  /**
   * Split this Interval into smaller Intervals, each of the specified length.
   * Left over time is grouped into a smaller interval
   * @param {Duration|Object|number} duration - The length of each resulting interval.
   * @return {Array}
   */
  splitBy(t) {
    const n = Pe.fromDurationLike(t);
    if (!this.isValid || !n.isValid || n.as("milliseconds") === 0)
      return [];
    let { s: r } = this, i = 1, u;
    const s = [];
    for (; r < this.e; ) {
      const o = this.start.plus(n.mapUnits((a) => a * i));
      u = +o > +this.e ? this.e : o, s.push(Qe.fromDateTimes(r, u)), r = u, i += 1;
    }
    return s;
  }
  /**
   * Split this Interval into the specified number of smaller intervals.
   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.
   * @return {Array}
   */
  divideEqually(t) {
    return this.isValid ? this.splitBy(this.length() / t).slice(0, t) : [];
  }
  /**
   * Return whether this Interval overlaps with the specified Interval
   * @param {Interval} other
   * @return {boolean}
   */
  overlaps(t) {
    return this.e > t.s && this.s < t.e;
  }
  /**
   * Return whether this Interval's end is adjacent to the specified Interval's start.
   * @param {Interval} other
   * @return {boolean}
   */
  abutsStart(t) {
    return this.isValid ? +this.e == +t.s : !1;
  }
  /**
   * Return whether this Interval's start is adjacent to the specified Interval's end.
   * @param {Interval} other
   * @return {boolean}
   */
  abutsEnd(t) {
    return this.isValid ? +t.e == +this.s : !1;
  }
  /**
   * Returns true if this Interval fully contains the specified Interval, specifically if the intersect (of this Interval and the other Interval) is equal to the other Interval; false otherwise.
   * @param {Interval} other
   * @return {boolean}
   */
  engulfs(t) {
    return this.isValid ? this.s <= t.s && this.e >= t.e : !1;
  }
  /**
   * Return whether this Interval has the same start and end as the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  equals(t) {
    return !this.isValid || !t.isValid ? !1 : this.s.equals(t.s) && this.e.equals(t.e);
  }
  /**
   * Return an Interval representing the intersection of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.
   * Returns null if the intersection is empty, meaning, the intervals don't intersect.
   * @param {Interval} other
   * @return {Interval}
   */
  intersection(t) {
    if (!this.isValid) return this;
    const n = this.s > t.s ? this.s : t.s, r = this.e < t.e ? this.e : t.e;
    return n >= r ? null : Qe.fromDateTimes(n, r);
  }
  /**
   * Return an Interval representing the union of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.
   * @param {Interval} other
   * @return {Interval}
   */
  union(t) {
    if (!this.isValid) return this;
    const n = this.s < t.s ? this.s : t.s, r = this.e > t.e ? this.e : t.e;
    return Qe.fromDateTimes(n, r);
  }
  /**
   * Merge an array of Intervals into a equivalent minimal set of Intervals.
   * Combines overlapping and adjacent Intervals.
   * @param {Array} intervals
   * @return {Array}
   */
  static merge(t) {
    const [n, r] = t.sort((i, u) => i.s - u.s).reduce(
      ([i, u], s) => u ? u.overlaps(s) || u.abutsStart(s) ? [i, u.union(s)] : [i.concat([u]), s] : [i, s],
      [[], null]
    );
    return r && n.push(r), n;
  }
  /**
   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.
   * @param {Array} intervals
   * @return {Array}
   */
  static xor(t) {
    let n = null, r = 0;
    const i = [], u = t.map((a) => [
      { time: a.s, type: "s" },
      { time: a.e, type: "e" }
    ]), s = Array.prototype.concat(...u), o = s.sort((a, c) => a.time - c.time);
    for (const a of o)
      r += a.type === "s" ? 1 : -1, r === 1 ? n = a.time : (n && +n != +a.time && i.push(Qe.fromDateTimes(n, a.time)), n = null);
    return Qe.merge(i);
  }
  /**
   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.
   * @param {...Interval} intervals
   * @return {Array}
   */
  difference(...t) {
    return Qe.xor([this].concat(t)).map((n) => this.intersection(n)).filter((n) => n && !n.isEmpty());
  }
  /**
   * Returns a string representation of this Interval appropriate for debugging.
   * @return {string}
   */
  toString() {
    return this.isValid ? `[${this.s.toISO()} – ${this.e.toISO()})` : Mr;
  }
  /**
   * Returns a string representation of this Interval appropriate for the REPL.
   * @return {string}
   */
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return this.isValid ? `Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }` : `Interval { Invalid, reason: ${this.invalidReason} }`;
  }
  /**
   * Returns a localized string representing this Interval. Accepts the same options as the
   * Intl.DateTimeFormat constructor and any presets defined by Luxon, such as
   * {@link DateTime.DATE_FULL} or {@link DateTime.TIME_SIMPLE}. The exact behavior of this method
   * is browser-specific, but in general it will return an appropriate representation of the
   * Interval in the assigned locale. Defaults to the system's locale if no locale has been
   * specified.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {Object} [formatOpts=DateTime.DATE_SHORT] - Either a DateTime preset or
   * Intl.DateTimeFormat constructor options.
   * @param {Object} opts - Options to override the configuration of the start DateTime.
   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(); //=> 11/7/2022 – 11/8/2022
   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL); //=> November 7 – 8, 2022
   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL, { locale: 'fr-FR' }); //=> 7–8 novembre 2022
   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString(DateTime.TIME_SIMPLE); //=> 6:00 – 8:00 PM
   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> Mon, Nov 07, 6:00 – 8:00 p
   * @return {string}
   */
  toLocaleString(t = Zu, n = {}) {
    return this.isValid ? Et.create(this.s.loc.clone(n), t).formatInterval(this) : Mr;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Interval.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime#toISO}
   * @return {string}
   */
  toISO(t) {
    return this.isValid ? `${this.s.toISO(t)}/${this.e.toISO(t)}` : Mr;
  }
  /**
   * Returns an ISO 8601-compliant string representation of date of this Interval.
   * The time components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {string}
   */
  toISODate() {
    return this.isValid ? `${this.s.toISODate()}/${this.e.toISODate()}` : Mr;
  }
  /**
   * Returns an ISO 8601-compliant string representation of time of this Interval.
   * The date components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime#toISO}
   * @return {string}
   */
  toISOTime(t) {
    return this.isValid ? `${this.s.toISOTime(t)}/${this.e.toISOTime(t)}` : Mr;
  }
  /**
   * Returns a string representation of this Interval formatted according to the specified format
   * string. **You may not want this.** See {@link Interval#toLocaleString} for a more flexible
   * formatting tool.
   * @param {string} dateFormat - The format string. This string formats the start and end time.
   * See {@link DateTime#toFormat} for details.
   * @param {Object} opts - Options.
   * @param {string} [opts.separator =  ' – '] - A separator to place between the start and end
   * representations.
   * @return {string}
   */
  toFormat(t, { separator: n = " – " } = {}) {
    return this.isValid ? `${this.s.toFormat(t)}${n}${this.e.toFormat(t)}` : Mr;
  }
  /**
   * Return a Duration representing the time spanned by this interval.
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }
   * @return {Duration}
   */
  toDuration(t, n) {
    return this.isValid ? this.e.diff(this.s, t, n) : Pe.invalid(this.invalidReason);
  }
  /**
   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes
   * @param {function} mapFn
   * @return {Interval}
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))
   */
  mapEndpoints(t) {
    return Qe.fromDateTimes(t(this.s), t(this.e));
  }
}
class bu {
  /**
   * Return whether the specified zone contains a DST.
   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.
   * @return {boolean}
   */
  static hasDST(t = Je.defaultZone) {
    const n = de.now().setZone(t).set({ month: 12 });
    return !t.isUniversal && n.offset !== n.set({ month: 6 }).offset;
  }
  /**
   * Return whether the specified zone is a valid IANA specifier.
   * @param {string} zone - Zone to check
   * @return {boolean}
   */
  static isValidIANAZone(t) {
    return Ln.isValidZone(t);
  }
  /**
   * Converts the input into a {@link Zone} instance.
   *
   * * If `input` is already a Zone instance, it is returned unchanged.
   * * If `input` is a string containing a valid time zone name, a Zone instance
   *   with that name is returned.
   * * If `input` is a string that doesn't refer to a known time zone, a Zone
   *   instance with {@link Zone#isValid} == false is returned.
   * * If `input is a number, a Zone instance with the specified fixed offset
   *   in minutes is returned.
   * * If `input` is `null` or `undefined`, the default zone is returned.
   * @param {string|Zone|number} [input] - the value to be converted
   * @return {Zone}
   */
  static normalizeZone(t) {
    return Jn(t, Je.defaultZone);
  }
  /**
   * Get the weekday on which the week starts according to the given locale.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @returns {number} the start of the week, 1 for Monday through 7 for Sunday
   */
  static getStartOfWeek({ locale: t = null, locObj: n = null } = {}) {
    return (n || He.create(t)).getStartOfWeek();
  }
  /**
   * Get the minimum number of days necessary in a week before it is considered part of the next year according
   * to the given locale.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @returns {number}
   */
  static getMinimumDaysInFirstWeek({ locale: t = null, locObj: n = null } = {}) {
    return (n || He.create(t)).getMinDaysInFirstWeek();
  }
  /**
   * Get the weekdays, which are considered the weekend according to the given locale
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @returns {number[]} an array of weekdays, 1 for Monday through 7 for Sunday
   */
  static getWeekendWeekdays({ locale: t = null, locObj: n = null } = {}) {
    return (n || He.create(t)).getWeekendDays().slice();
  }
  /**
   * Return an array of standalone month names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @example Info.months()[0] //=> 'January'
   * @example Info.months('short')[0] //=> 'Jan'
   * @example Info.months('numeric')[0] //=> '1'
   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'
   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'
   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'
   * @return {Array}
   */
  static months(t = "long", { locale: n = null, numberingSystem: r = null, locObj: i = null, outputCalendar: u = "gregory" } = {}) {
    return (i || He.create(n, r, u)).months(t);
  }
  /**
   * Return an array of format month names.
   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that
   * changes the string.
   * See {@link Info#months}
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @return {Array}
   */
  static monthsFormat(t = "long", { locale: n = null, numberingSystem: r = null, locObj: i = null, outputCalendar: u = "gregory" } = {}) {
    return (i || He.create(n, r, u)).months(t, !0);
  }
  /**
   * Return an array of standalone week names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @example Info.weekdays()[0] //=> 'Monday'
   * @example Info.weekdays('short')[0] //=> 'Mon'
   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'
   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'
   * @return {Array}
   */
  static weekdays(t = "long", { locale: n = null, numberingSystem: r = null, locObj: i = null } = {}) {
    return (i || He.create(n, r, null)).weekdays(t);
  }
  /**
   * Return an array of format week names.
   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that
   * changes the string.
   * See {@link Info#weekdays}
   * @param {string} [length='long'] - the length of the month representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale=null] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @return {Array}
   */
  static weekdaysFormat(t = "long", { locale: n = null, numberingSystem: r = null, locObj: i = null } = {}) {
    return (i || He.create(n, r, null)).weekdays(t, !0);
  }
  /**
   * Return an array of meridiems.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.meridiems() //=> [ 'AM', 'PM' ]
   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]
   * @return {Array}
   */
  static meridiems({ locale: t = null } = {}) {
    return He.create(t).meridiems();
  }
  /**
   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.
   * @param {string} [length='short'] - the length of the era representation, such as "short" or "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.eras() //=> [ 'BC', 'AD' ]
   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]
   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]
   * @return {Array}
   */
  static eras(t = "short", { locale: n = null } = {}) {
    return He.create(n, null, "gregory").eras(t);
  }
  /**
   * Return the set of available features in this environment.
   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.
   * Keys:
   * * `relative`: whether this environment supports relative time formatting
   * * `localeWeek`: whether this environment supports different weekdays for the start of the week based on the locale
   * @example Info.features() //=> { relative: false, localeWeek: true }
   * @return {Object}
   */
  static features() {
    return { relative: ed(), localeWeek: td() };
  }
}
function Gl(e, t) {
  const n = (i) => i.toUTC(0, { keepLocalTime: !0 }).startOf("day").valueOf(), r = n(t) - n(e);
  return Math.floor(Pe.fromMillis(r).as("days"));
}
function Lg(e, t, n) {
  const r = [
    ["years", (a, c) => c.year - a.year],
    ["quarters", (a, c) => c.quarter - a.quarter + (c.year - a.year) * 4],
    ["months", (a, c) => c.month - a.month + (c.year - a.year) * 12],
    [
      "weeks",
      (a, c) => {
        const l = Gl(a, c);
        return (l - l % 7) / 7;
      }
    ],
    ["days", Gl]
  ], i = {}, u = e;
  let s, o;
  for (const [a, c] of r)
    n.indexOf(a) >= 0 && (s = a, i[a] = c(e, t), o = u.plus(i), o > t ? (i[a]--, e = u.plus(i), e > t && (o = e, i[a]--, e = u.plus(i))) : e = o);
  return [e, i, o, s];
}
function zg(e, t, n, r) {
  let [i, u, s, o] = Lg(e, t, n);
  const a = t - i, c = n.filter(
    (f) => ["hours", "minutes", "seconds", "milliseconds"].indexOf(f) >= 0
  );
  c.length === 0 && (s < t && (s = i.plus({ [o]: 1 })), s !== i && (u[o] = (u[o] || 0) + a / (s - i)));
  const l = Pe.fromObject(u, r);
  return c.length > 0 ? Pe.fromMillis(a, r).shiftTo(...c).plus(l) : l;
}
const Pg = "missing Intl.DateTimeFormat.formatToParts support";
function je(e, t = (n) => n) {
  return { regex: e, deser: ([n]) => t(Sb(n)) };
}
const Rg = " ", _d = `[ ${Rg}]`, xd = new RegExp(_d, "g");
function jg(e) {
  return e.replace(/\./g, "\\.?").replace(xd, _d);
}
function Yl(e) {
  return e.replace(/\./g, "").replace(xd, " ").toLowerCase();
}
function an(e, t) {
  return e === null ? null : {
    regex: RegExp(e.map(jg).join("|")),
    deser: ([n]) => e.findIndex((r) => Yl(n) === Yl(r)) + t
  };
}
function Kl(e, t) {
  return { regex: e, deser: ([, n, r]) => Ss(n, r), groups: t };
}
function gu(e) {
  return { regex: e, deser: ([t]) => t };
}
function Bg(e) {
  return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
}
function Vg(e, t) {
  const n = on(t), r = on(t, "{2}"), i = on(t, "{3}"), u = on(t, "{4}"), s = on(t, "{6}"), o = on(t, "{1,2}"), a = on(t, "{1,3}"), c = on(t, "{1,6}"), l = on(t, "{1,9}"), f = on(t, "{2,4}"), m = on(t, "{4,6}"), p = (C) => ({ regex: RegExp(Bg(C.val)), deser: ([L]) => L, literal: !0 }), E = ((C) => {
    if (e.literal)
      return p(C);
    switch (C.val) {
      case "G":
        return an(t.eras("short"), 0);
      case "GG":
        return an(t.eras("long"), 0);
      case "y":
        return je(c);
      case "yy":
        return je(f, Wo);
      case "yyyy":
        return je(u);
      case "yyyyy":
        return je(m);
      case "yyyyyy":
        return je(s);
      case "M":
        return je(o);
      case "MM":
        return je(r);
      case "MMM":
        return an(t.months("short", !0), 1);
      case "MMMM":
        return an(t.months("long", !0), 1);
      case "L":
        return je(o);
      case "LL":
        return je(r);
      case "LLL":
        return an(t.months("short", !1), 1);
      case "LLLL":
        return an(t.months("long", !1), 1);
      case "d":
        return je(o);
      case "dd":
        return je(r);
      case "o":
        return je(a);
      case "ooo":
        return je(i);
      case "HH":
        return je(r);
      case "H":
        return je(o);
      case "hh":
        return je(r);
      case "h":
        return je(o);
      case "mm":
        return je(r);
      case "m":
        return je(o);
      case "q":
        return je(o);
      case "qq":
        return je(r);
      case "s":
        return je(o);
      case "ss":
        return je(r);
      case "S":
        return je(a);
      case "SSS":
        return je(i);
      case "u":
        return gu(l);
      case "uu":
        return gu(o);
      case "uuu":
        return je(n);
      case "a":
        return an(t.meridiems(), 0);
      case "kkkk":
        return je(u);
      case "kk":
        return je(f, Wo);
      case "W":
        return je(o);
      case "WW":
        return je(r);
      case "E":
      case "c":
        return je(n);
      case "EEE":
        return an(t.weekdays("short", !1), 1);
      case "EEEE":
        return an(t.weekdays("long", !1), 1);
      case "ccc":
        return an(t.weekdays("short", !0), 1);
      case "cccc":
        return an(t.weekdays("long", !0), 1);
      case "Z":
      case "ZZ":
        return Kl(new RegExp(`([+-]${o.source})(?::(${r.source}))?`), 2);
      case "ZZZ":
        return Kl(new RegExp(`([+-]${o.source})(${r.source})?`), 2);
      case "z":
        return gu(/[a-z_+-/]{1,256}?/i);
      case " ":
        return gu(/[^\S\n\r]/);
      default:
        return p(C);
    }
  })(e) || {
    invalidReason: Pg
  };
  return E.token = e, E;
}
const Hg = {
  year: {
    "2-digit": "yy",
    numeric: "yyyyy"
  },
  month: {
    numeric: "M",
    "2-digit": "MM",
    short: "MMM",
    long: "MMMM"
  },
  day: {
    numeric: "d",
    "2-digit": "dd"
  },
  weekday: {
    short: "EEE",
    long: "EEEE"
  },
  dayperiod: "a",
  dayPeriod: "a",
  hour12: {
    numeric: "h",
    "2-digit": "hh"
  },
  hour24: {
    numeric: "H",
    "2-digit": "HH"
  },
  minute: {
    numeric: "m",
    "2-digit": "mm"
  },
  second: {
    numeric: "s",
    "2-digit": "ss"
  },
  timeZoneName: {
    long: "ZZZZZ",
    short: "ZZZ"
  }
};
function Ug(e, t, n) {
  const { type: r, value: i } = e;
  if (r === "literal") {
    const a = /^\s+$/.test(i);
    return {
      literal: !a,
      val: a ? " " : i
    };
  }
  const u = t[r];
  let s = r;
  r === "hour" && (t.hour12 != null ? s = t.hour12 ? "hour12" : "hour24" : t.hourCycle != null ? t.hourCycle === "h11" || t.hourCycle === "h12" ? s = "hour12" : s = "hour24" : s = n.hour12 ? "hour12" : "hour24");
  let o = Hg[s];
  if (typeof o == "object" && (o = o[u]), o)
    return {
      literal: !1,
      val: o
    };
}
function qg(e) {
  return [`^${e.map((n) => n.regex).reduce((n, r) => `${n}(${r.source})`, "")}$`, e];
}
function Wg(e, t, n) {
  const r = e.match(t);
  if (r) {
    const i = {};
    let u = 1;
    for (const s in n)
      if (ti(n, s)) {
        const o = n[s], a = o.groups ? o.groups + 1 : 1;
        !o.literal && o.token && (i[o.token.val[0]] = o.deser(r.slice(u, u + a))), u += a;
      }
    return [r, i];
  } else
    return [r, {}];
}
function $g(e) {
  const t = (u) => {
    switch (u) {
      case "S":
        return "millisecond";
      case "s":
        return "second";
      case "m":
        return "minute";
      case "h":
      case "H":
        return "hour";
      case "d":
        return "day";
      case "o":
        return "ordinal";
      case "L":
      case "M":
        return "month";
      case "y":
        return "year";
      case "E":
      case "c":
        return "weekday";
      case "W":
        return "weekNumber";
      case "k":
        return "weekYear";
      case "q":
        return "quarter";
      default:
        return null;
    }
  };
  let n = null, r;
  return Ce(e.z) || (n = Ln.create(e.z)), Ce(e.Z) || (n || (n = new Nt(e.Z)), r = e.Z), Ce(e.q) || (e.M = (e.q - 1) * 3 + 1), Ce(e.h) || (e.h < 12 && e.a === 1 ? e.h += 12 : e.h === 12 && e.a === 0 && (e.h = 0)), e.G === 0 && e.y && (e.y = -e.y), Ce(e.u) || (e.S = Ea(e.u)), [Object.keys(e).reduce((u, s) => {
    const o = t(s);
    return o && (u[o] = e[s]), u;
  }, {}), n, r];
}
let uo = null;
function Zg() {
  return uo || (uo = de.fromMillis(1555555555555)), uo;
}
function Gg(e, t) {
  if (e.literal)
    return e;
  const n = Et.macroTokenToFormatOpts(e.val), r = Ed(n, t);
  return r == null || r.includes(void 0) ? e : r;
}
function vd(e, t) {
  return Array.prototype.concat(...e.map((n) => Gg(n, t)));
}
class kd {
  constructor(t, n) {
    if (this.locale = t, this.format = n, this.tokens = vd(Et.parseFormat(n), t), this.units = this.tokens.map((r) => Vg(r, t)), this.disqualifyingUnit = this.units.find((r) => r.invalidReason), !this.disqualifyingUnit) {
      const [r, i] = qg(this.units);
      this.regex = RegExp(r, "i"), this.handlers = i;
    }
  }
  explainFromTokens(t) {
    if (this.isValid) {
      const [n, r] = Wg(t, this.regex, this.handlers), [i, u, s] = r ? $g(r) : [null, null, void 0];
      if (ti(r, "a") && ti(r, "H"))
        throw new jr(
          "Can't include meridiem when specifying 24-hour format"
        );
      return {
        input: t,
        tokens: this.tokens,
        regex: this.regex,
        rawMatches: n,
        matches: r,
        result: i,
        zone: u,
        specificOffset: s
      };
    } else
      return { input: t, tokens: this.tokens, invalidReason: this.invalidReason };
  }
  get isValid() {
    return !this.disqualifyingUnit;
  }
  get invalidReason() {
    return this.disqualifyingUnit ? this.disqualifyingUnit.invalidReason : null;
  }
}
function wd(e, t, n) {
  return new kd(e, n).explainFromTokens(t);
}
function Yg(e, t, n) {
  const { result: r, zone: i, specificOffset: u, invalidReason: s } = wd(e, t, n);
  return [r, i, u, s];
}
function Ed(e, t) {
  if (!e)
    return null;
  const r = Et.create(t, e).dtFormatter(Zg()), i = r.formatToParts(), u = r.resolvedOptions();
  return i.map((s) => Ug(s, e, u));
}
const so = "Invalid DateTime", Kg = 864e13;
function _i(e) {
  return new cn("unsupported zone", `the zone "${e.name}" is not supported`);
}
function oo(e) {
  return e.weekData === null && (e.weekData = Gu(e.c)), e.weekData;
}
function ao(e) {
  return e.localWeekData === null && (e.localWeekData = Gu(
    e.c,
    e.loc.getMinDaysInFirstWeek(),
    e.loc.getStartOfWeek()
  )), e.localWeekData;
}
function mr(e, t) {
  const n = {
    ts: e.ts,
    zone: e.zone,
    c: e.c,
    o: e.o,
    loc: e.loc,
    invalid: e.invalid
  };
  return new de({ ...n, ...t, old: n });
}
function Cd(e, t, n) {
  let r = e - t * 60 * 1e3;
  const i = n.offset(r);
  if (t === i)
    return [r, t];
  r -= (i - t) * 60 * 1e3;
  const u = n.offset(r);
  return i === u ? [r, i] : [e - Math.min(i, u) * 60 * 1e3, Math.max(i, u)];
}
function yu(e, t) {
  e += t * 60 * 1e3;
  const n = new Date(e);
  return {
    year: n.getUTCFullYear(),
    month: n.getUTCMonth() + 1,
    day: n.getUTCDate(),
    hour: n.getUTCHours(),
    minute: n.getUTCMinutes(),
    second: n.getUTCSeconds(),
    millisecond: n.getUTCMilliseconds()
  };
}
function Ou(e, t, n) {
  return Cd(Cs(e), t, n);
}
function Jl(e, t) {
  const n = e.o, r = e.c.year + Math.trunc(t.years), i = e.c.month + Math.trunc(t.months) + Math.trunc(t.quarters) * 3, u = {
    ...e.c,
    year: r,
    month: i,
    day: Math.min(e.c.day, Yu(r, i)) + Math.trunc(t.days) + Math.trunc(t.weeks) * 7
  }, s = Pe.fromObject({
    years: t.years - Math.trunc(t.years),
    quarters: t.quarters - Math.trunc(t.quarters),
    months: t.months - Math.trunc(t.months),
    weeks: t.weeks - Math.trunc(t.weeks),
    days: t.days - Math.trunc(t.days),
    hours: t.hours,
    minutes: t.minutes,
    seconds: t.seconds,
    milliseconds: t.milliseconds
  }).as("milliseconds"), o = Cs(u);
  let [a, c] = Cd(o, n, e.zone);
  return s !== 0 && (a += s, c = e.zone.offset(a)), { ts: a, o: c };
}
function Nr(e, t, n, r, i, u) {
  const { setZone: s, zone: o } = n;
  if (e && Object.keys(e).length !== 0 || t) {
    const a = t || o, c = de.fromObject(e, {
      ...n,
      zone: a,
      specificOffset: u
    });
    return s ? c : c.setZone(o);
  } else
    return de.invalid(
      new cn("unparsable", `the input "${i}" can't be parsed as ${r}`)
    );
}
function _u(e, t, n = !0) {
  return e.isValid ? Et.create(He.create("en-US"), {
    allowZ: n,
    forceSimple: !0
  }).formatDateTimeFromString(e, t) : null;
}
function lo(e, t) {
  const n = e.c.year > 9999 || e.c.year < 0;
  let r = "";
  return n && e.c.year >= 0 && (r += "+"), r += rt(e.c.year, n ? 6 : 4), t ? (r += "-", r += rt(e.c.month), r += "-", r += rt(e.c.day)) : (r += rt(e.c.month), r += rt(e.c.day)), r;
}
function Xl(e, t, n, r, i, u) {
  let s = rt(e.c.hour);
  return t ? (s += ":", s += rt(e.c.minute), (e.c.millisecond !== 0 || e.c.second !== 0 || !n) && (s += ":")) : s += rt(e.c.minute), (e.c.millisecond !== 0 || e.c.second !== 0 || !n) && (s += rt(e.c.second), (e.c.millisecond !== 0 || !r) && (s += ".", s += rt(e.c.millisecond, 3))), i && (e.isOffsetFixed && e.offset === 0 && !u ? s += "Z" : e.o < 0 ? (s += "-", s += rt(Math.trunc(-e.o / 60)), s += ":", s += rt(Math.trunc(-e.o % 60))) : (s += "+", s += rt(Math.trunc(e.o / 60)), s += ":", s += rt(Math.trunc(e.o % 60)))), u && (s += "[" + e.zone.ianaName + "]"), s;
}
const Sd = {
  month: 1,
  day: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}, Jg = {
  weekNumber: 1,
  weekday: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}, Xg = {
  ordinal: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}, Td = ["year", "month", "day", "hour", "minute", "second", "millisecond"], Qg = [
  "weekYear",
  "weekNumber",
  "weekday",
  "hour",
  "minute",
  "second",
  "millisecond"
], e2 = ["year", "ordinal", "hour", "minute", "second", "millisecond"];
function t2(e) {
  const t = {
    year: "year",
    years: "year",
    month: "month",
    months: "month",
    day: "day",
    days: "day",
    hour: "hour",
    hours: "hour",
    minute: "minute",
    minutes: "minute",
    quarter: "quarter",
    quarters: "quarter",
    second: "second",
    seconds: "second",
    millisecond: "millisecond",
    milliseconds: "millisecond",
    weekday: "weekday",
    weekdays: "weekday",
    weeknumber: "weekNumber",
    weeksnumber: "weekNumber",
    weeknumbers: "weekNumber",
    weekyear: "weekYear",
    weekyears: "weekYear",
    ordinal: "ordinal"
  }[e.toLowerCase()];
  if (!t) throw new O0(e);
  return t;
}
function Ql(e) {
  switch (e.toLowerCase()) {
    case "localweekday":
    case "localweekdays":
      return "localWeekday";
    case "localweeknumber":
    case "localweeknumbers":
      return "localWeekNumber";
    case "localweekyear":
    case "localweekyears":
      return "localWeekYear";
    default:
      return t2(e);
  }
}
function n2(e) {
  return Au[e] || (Du === void 0 && (Du = Je.now()), Au[e] = e.offset(Du)), Au[e];
}
function ec(e, t) {
  const n = Jn(t.zone, Je.defaultZone);
  if (!n.isValid)
    return de.invalid(_i(n));
  const r = He.fromObject(t);
  let i, u;
  if (Ce(e.year))
    i = Je.now();
  else {
    for (const a of Td)
      Ce(e[a]) && (e[a] = Sd[a]);
    const s = X0(e) || Q0(e);
    if (s)
      return de.invalid(s);
    const o = n2(n);
    [i, u] = Ou(e, o, n);
  }
  return new de({ ts: i, zone: n, loc: r, o: u });
}
function tc(e, t, n) {
  const r = Ce(n.round) ? !0 : n.round, i = (s, o) => (s = Ca(s, r || n.calendary ? 0 : 2, !0), t.loc.clone(n).relFormatter(n).format(s, o)), u = (s) => n.calendary ? t.hasSame(e, s) ? 0 : t.startOf(s).diff(e.startOf(s), s).get(s) : t.diff(e, s).get(s);
  if (n.unit)
    return i(u(n.unit), n.unit);
  for (const s of n.units) {
    const o = u(s);
    if (Math.abs(o) >= 1)
      return i(o, s);
  }
  return i(e > t ? -0 : 0, n.units[n.units.length - 1]);
}
function nc(e) {
  let t = {}, n;
  return e.length > 0 && typeof e[e.length - 1] == "object" ? (t = e[e.length - 1], n = Array.from(e).slice(0, e.length - 1)) : n = Array.from(e), [t, n];
}
let Du, Au = {};
class de {
  /**
   * @access private
   */
  constructor(t) {
    const n = t.zone || Je.defaultZone;
    let r = t.invalid || (Number.isNaN(t.ts) ? new cn("invalid input") : null) || (n.isValid ? null : _i(n));
    this.ts = Ce(t.ts) ? Je.now() : t.ts;
    let i = null, u = null;
    if (!r)
      if (t.old && t.old.ts === this.ts && t.old.zone.equals(n))
        [i, u] = [t.old.c, t.old.o];
      else {
        const o = rr(t.o) && !t.old ? t.o : n.offset(this.ts);
        i = yu(this.ts, o), r = Number.isNaN(i.year) ? new cn("invalid input") : null, i = r ? null : i, u = r ? null : o;
      }
    this._zone = n, this.loc = t.loc || He.create(), this.invalid = r, this.weekData = null, this.localWeekData = null, this.c = i, this.o = u, this.isLuxonDateTime = !0;
  }
  // CONSTRUCT
  /**
   * Create a DateTime for the current instant, in the system's time zone.
   *
   * Use Settings to override these default values if needed.
   * @example DateTime.now().toISO() //~> now in the ISO format
   * @return {DateTime}
   */
  static now() {
    return new de({});
  }
  /**
   * Create a local DateTime
   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month, 1-indexed
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.local()                                  //~> now
   * @example DateTime.local({ zone: "America/New_York" })      //~> now, in US east coast time
   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00
   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00
   * @example DateTime.local(2017, 3, 12, { locale: "fr" })     //~> 2017-03-12T00:00:00, with a French locale
   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00
   * @example DateTime.local(2017, 3, 12, 5, { zone: "utc" })   //~> 2017-03-12T05:00:00, in UTC
   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00
   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10
   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765
   * @return {DateTime}
   */
  static local() {
    const [t, n] = nc(arguments), [r, i, u, s, o, a, c] = n;
    return ec({ year: r, month: i, day: u, hour: s, minute: o, second: a, millisecond: c }, t);
  }
  /**
   * Create a DateTime in UTC
   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @param {Object} options - configuration options for the DateTime
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance
   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance
   * @param {string} [options.weekSettings] - the week settings to set on the resulting DateTime instance
   * @example DateTime.utc()                                              //~> now
   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z
   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z
   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: "fr" })          //~> 2017-03-12T05:45:00Z with a French locale
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: "fr" }) //~> 2017-03-12T05:45:10.765Z with a French locale
   * @return {DateTime}
   */
  static utc() {
    const [t, n] = nc(arguments), [r, i, u, s, o, a, c] = n;
    return t.zone = Nt.utcInstance, ec({ year: r, month: i, day: u, hour: s, minute: o, second: a, millisecond: c }, t);
  }
  /**
   * Create a DateTime from a JavaScript Date object. Uses the default zone.
   * @param {Date} date - a JavaScript Date object
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @return {DateTime}
   */
  static fromJSDate(t, n = {}) {
    const r = Fb(t) ? t.valueOf() : NaN;
    if (Number.isNaN(r))
      return de.invalid("invalid input");
    const i = Jn(n.zone, Je.defaultZone);
    return i.isValid ? new de({
      ts: r,
      zone: i,
      loc: He.fromObject(n)
    }) : de.invalid(_i(i));
  }
  /**
   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} milliseconds - a number of milliseconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @param {string} options.weekSettings - the week settings to set on the resulting DateTime instance
   * @return {DateTime}
   */
  static fromMillis(t, n = {}) {
    if (rr(t))
      return t < -864e13 || t > Kg ? de.invalid("Timestamp out of range") : new de({
        ts: t,
        zone: Jn(n.zone, Je.defaultZone),
        loc: He.fromObject(n)
      });
    throw new vt(
      `fromMillis requires a numerical input, but received a ${typeof t} with value ${t}`
    );
  }
  /**
   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} seconds - a number of seconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @param {string} options.weekSettings - the week settings to set on the resulting DateTime instance
   * @return {DateTime}
   */
  static fromSeconds(t, n = {}) {
    if (rr(t))
      return new de({
        ts: t * 1e3,
        zone: Jn(n.zone, Je.defaultZone),
        loc: He.fromObject(n)
      });
    throw new vt("fromSeconds requires a numerical input");
  }
  /**
   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.year - a year, such as 1987
   * @param {number} obj.month - a month, 1-12
   * @param {number} obj.day - a day of the month, 1-31, depending on the month
   * @param {number} obj.ordinal - day of the year, 1-365 or 366
   * @param {number} obj.weekYear - an ISO week year
   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year
   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday
   * @param {number} obj.localWeekYear - a week year, according to the locale
   * @param {number} obj.localWeekNumber - a week number, between 1 and 52 or 53, depending on the year, according to the locale
   * @param {number} obj.localWeekday - a weekday, 1-7, where 1 is the first and 7 is the last day of the week, according to the locale
   * @param {number} obj.hour - hour of the day, 0-23
   * @param {number} obj.minute - minute of the hour, 0-59
   * @param {number} obj.second - second of the minute, 0-59
   * @param {number} obj.millisecond - millisecond of the second, 0-999
   * @param {Object} opts - options for creating this DateTime
   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()
   * @param {string} [opts.locale='system\'s locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'
   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })
   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'
   * @example DateTime.fromObject({ localWeekYear: 2022, localWeekNumber: 1, localWeekday: 1 }, { locale: "en-US" }).toISODate() //=> '2021-12-26'
   * @return {DateTime}
   */
  static fromObject(t, n = {}) {
    t = t || {};
    const r = Jn(n.zone, Je.defaultZone);
    if (!r.isValid)
      return de.invalid(_i(r));
    const i = He.fromObject(n), u = Ku(t, Ql), { minDaysInFirstWeek: s, startOfWeek: o } = Vl(u, i), a = Je.now(), c = Ce(n.specificOffset) ? r.offset(a) : n.specificOffset, l = !Ce(u.ordinal), f = !Ce(u.year), m = !Ce(u.month) || !Ce(u.day), p = f || m, h = u.weekYear || u.weekNumber;
    if ((p || l) && h)
      throw new jr(
        "Can't mix weekYear/weekNumber units with year/month/day or ordinals"
      );
    if (m && l)
      throw new jr("Can't mix ordinal dates with month/day");
    const E = h || u.weekday && !p;
    let C, L, T = yu(a, c);
    E ? (C = Qg, L = Jg, T = Gu(T, s, o)) : l ? (C = e2, L = Xg, T = io(T)) : (C = Td, L = Sd);
    let b = !1;
    for (const j of C) {
      const ae = u[j];
      Ce(ae) ? b ? u[j] = L[j] : u[j] = T[j] : b = !0;
    }
    const _ = E ? Ob(u, s, o) : l ? Db(u) : X0(u), S = _ || Q0(u);
    if (S)
      return de.invalid(S);
    const F = E ? jl(u, s, o) : l ? Bl(u) : u, [W, Q] = Ou(F, c, r), R = new de({
      ts: W,
      zone: r,
      o: Q,
      loc: i
    });
    return u.weekday && p && t.weekday !== R.weekday ? de.invalid(
      "mismatched weekday",
      `you can't specify both a weekday of ${u.weekday} and a date of ${R.toISO()}`
    ) : R.isValid ? R : de.invalid(R.invalid);
  }
  /**
   * Create a DateTime from an ISO 8601 string
   * @param {string} text - the ISO string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance
   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance
   * @param {string} [opts.weekSettings] - the week settings to set on the resulting DateTime instance
   * @example DateTime.fromISO('2016-05-25T09:08:34.123')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})
   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})
   * @example DateTime.fromISO('2016-W05-4')
   * @return {DateTime}
   */
  static fromISO(t, n = {}) {
    const [r, i] = xg(t);
    return Nr(r, i, n, "ISO 8601", t);
  }
  /**
   * Create a DateTime from an RFC 2822 string
   * @param {string} text - the RFC 2822 string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')
   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')
   * @return {DateTime}
   */
  static fromRFC2822(t, n = {}) {
    const [r, i] = vg(t);
    return Nr(r, i, n, "RFC 2822", t);
  }
  /**
   * Create a DateTime from an HTTP header date
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @param {string} text - the HTTP header date
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')
   * @return {DateTime}
   */
  static fromHTTP(t, n = {}) {
    const [r, i] = kg(t);
    return Nr(r, i, n, "HTTP", n);
  }
  /**
   * Create a DateTime from an input string and format string.
   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @return {DateTime}
   */
  static fromFormat(t, n, r = {}) {
    if (Ce(t) || Ce(n))
      throw new vt("fromFormat requires an input string and a format");
    const { locale: i = null, numberingSystem: u = null } = r, s = He.fromOpts({
      locale: i,
      numberingSystem: u,
      defaultToEN: !0
    }), [o, a, c, l] = Yg(s, t, n);
    return l ? de.invalid(l) : Nr(o, a, r, `format ${n}`, t, c);
  }
  /**
   * @deprecated use fromFormat instead
   */
  static fromString(t, n, r = {}) {
    return de.fromFormat(t, n, r);
  }
  /**
   * Create a DateTime from a SQL date, time, or datetime
   * Defaults to en-US if no locale has been specified, regardless of the system's locale
   * @param {string} text - the string to parse
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @example DateTime.fromSQL('2017-05-15')
   * @example DateTime.fromSQL('2017-05-15 09:12:34')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })
   * @example DateTime.fromSQL('09:12:34.342')
   * @return {DateTime}
   */
  static fromSQL(t, n = {}) {
    const [r, i] = Dg(t);
    return Nr(r, i, n, "SQL", t);
  }
  /**
   * Create an invalid DateTime.
   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent.
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {DateTime}
   */
  static invalid(t, n = null) {
    if (!t)
      throw new vt("need to specify a reason the DateTime is invalid");
    const r = t instanceof cn ? t : new cn(t, n);
    if (Je.throwOnInvalid)
      throw new tb(r);
    return new de({ invalid: r });
  }
  /**
   * Check if an object is an instance of DateTime. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  static isDateTime(t) {
    return t && t.isLuxonDateTime || !1;
  }
  /**
   * Produce the format string for a set of options
   * @param formatOpts
   * @param localeOpts
   * @returns {string}
   */
  static parseFormatForOpts(t, n = {}) {
    const r = Ed(t, He.fromObject(n));
    return r ? r.map((i) => i ? i.val : null).join("") : null;
  }
  /**
   * Produce the the fully expanded format token for the locale
   * Does NOT quote characters, so quoted tokens will not round trip correctly
   * @param fmt
   * @param localeOpts
   * @returns {string}
   */
  static expandFormat(t, n = {}) {
    return vd(Et.parseFormat(t), He.fromObject(n)).map((i) => i.val).join("");
  }
  static resetCache() {
    Du = void 0, Au = {};
  }
  // INFO
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7
   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4
   * @return {number}
   */
  get(t) {
    return this[t];
  }
  /**
   * Returns whether the DateTime is valid. Invalid DateTimes occur when:
   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30
   * * The DateTime was created by an operation on another invalid date
   * @type {boolean}
   */
  get isValid() {
    return this.invalid === null;
  }
  /**
   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid
   * @type {string}
   */
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  /**
   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid
   * @type {string}
   */
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  /**
   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime
   *
   * @type {string}
   */
  get locale() {
    return this.isValid ? this.loc.locale : null;
  }
  /**
   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime
   *
   * @type {string}
   */
  get numberingSystem() {
    return this.isValid ? this.loc.numberingSystem : null;
  }
  /**
   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime
   *
   * @type {string}
   */
  get outputCalendar() {
    return this.isValid ? this.loc.outputCalendar : null;
  }
  /**
   * Get the time zone associated with this DateTime.
   * @type {Zone}
   */
  get zone() {
    return this._zone;
  }
  /**
   * Get the name of the time zone.
   * @type {string}
   */
  get zoneName() {
    return this.isValid ? this.zone.name : null;
  }
  /**
   * Get the year
   * @example DateTime.local(2017, 5, 25).year //=> 2017
   * @type {number}
   */
  get year() {
    return this.isValid ? this.c.year : NaN;
  }
  /**
   * Get the quarter
   * @example DateTime.local(2017, 5, 25).quarter //=> 2
   * @type {number}
   */
  get quarter() {
    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
  }
  /**
   * Get the month (1-12).
   * @example DateTime.local(2017, 5, 25).month //=> 5
   * @type {number}
   */
  get month() {
    return this.isValid ? this.c.month : NaN;
  }
  /**
   * Get the day of the month (1-30ish).
   * @example DateTime.local(2017, 5, 25).day //=> 25
   * @type {number}
   */
  get day() {
    return this.isValid ? this.c.day : NaN;
  }
  /**
   * Get the hour of the day (0-23).
   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9
   * @type {number}
   */
  get hour() {
    return this.isValid ? this.c.hour : NaN;
  }
  /**
   * Get the minute of the hour (0-59).
   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30
   * @type {number}
   */
  get minute() {
    return this.isValid ? this.c.minute : NaN;
  }
  /**
   * Get the second of the minute (0-59).
   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52
   * @type {number}
   */
  get second() {
    return this.isValid ? this.c.second : NaN;
  }
  /**
   * Get the millisecond of the second (0-999).
   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654
   * @type {number}
   */
  get millisecond() {
    return this.isValid ? this.c.millisecond : NaN;
  }
  /**
   * Get the week year
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015
   * @type {number}
   */
  get weekYear() {
    return this.isValid ? oo(this).weekYear : NaN;
  }
  /**
   * Get the week number of the week year (1-52ish).
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21
   * @type {number}
   */
  get weekNumber() {
    return this.isValid ? oo(this).weekNumber : NaN;
  }
  /**
   * Get the day of the week.
   * 1 is Monday and 7 is Sunday
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2014, 11, 31).weekday //=> 4
   * @type {number}
   */
  get weekday() {
    return this.isValid ? oo(this).weekday : NaN;
  }
  /**
   * Returns true if this date is on a weekend according to the locale, false otherwise
   * @returns {boolean}
   */
  get isWeekend() {
    return this.isValid && this.loc.getWeekendDays().includes(this.weekday);
  }
  /**
   * Get the day of the week according to the locale.
   * 1 is the first day of the week and 7 is the last day of the week.
   * If the locale assigns Sunday as the first day of the week, then a date which is a Sunday will return 1,
   * @returns {number}
   */
  get localWeekday() {
    return this.isValid ? ao(this).weekday : NaN;
  }
  /**
   * Get the week number of the week year according to the locale. Different locales assign week numbers differently,
   * because the week can start on different days of the week (see localWeekday) and because a different number of days
   * is required for a week to count as the first week of a year.
   * @returns {number}
   */
  get localWeekNumber() {
    return this.isValid ? ao(this).weekNumber : NaN;
  }
  /**
   * Get the week year according to the locale. Different locales assign week numbers (and therefor week years)
   * differently, see localWeekNumber.
   * @returns {number}
   */
  get localWeekYear() {
    return this.isValid ? ao(this).weekYear : NaN;
  }
  /**
   * Get the ordinal (meaning the day of the year)
   * @example DateTime.local(2017, 5, 25).ordinal //=> 145
   * @type {number|DateTime}
   */
  get ordinal() {
    return this.isValid ? io(this.c).ordinal : NaN;
  }
  /**
   * Get the human readable short month name, such as 'Oct'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct
   * @type {string}
   */
  get monthShort() {
    return this.isValid ? bu.months("short", { locObj: this.loc })[this.month - 1] : null;
  }
  /**
   * Get the human readable long month name, such as 'October'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).monthLong //=> October
   * @type {string}
   */
  get monthLong() {
    return this.isValid ? bu.months("long", { locObj: this.loc })[this.month - 1] : null;
  }
  /**
   * Get the human readable short weekday, such as 'Mon'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon
   * @type {string}
   */
  get weekdayShort() {
    return this.isValid ? bu.weekdays("short", { locObj: this.loc })[this.weekday - 1] : null;
  }
  /**
   * Get the human readable long weekday, such as 'Monday'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday
   * @type {string}
   */
  get weekdayLong() {
    return this.isValid ? bu.weekdays("long", { locObj: this.loc })[this.weekday - 1] : null;
  }
  /**
   * Get the UTC offset of this DateTime in minutes
   * @example DateTime.now().offset //=> -240
   * @example DateTime.utc().offset //=> 0
   * @type {number}
   */
  get offset() {
    return this.isValid ? +this.o : NaN;
  }
  /**
   * Get the short human name for the zone's current offset, for example "EST" or "EDT".
   * Defaults to the system's locale if no locale has been specified
   * @type {string}
   */
  get offsetNameShort() {
    return this.isValid ? this.zone.offsetName(this.ts, {
      format: "short",
      locale: this.locale
    }) : null;
  }
  /**
   * Get the long human name for the zone's current offset, for example "Eastern Standard Time" or "Eastern Daylight Time".
   * Defaults to the system's locale if no locale has been specified
   * @type {string}
   */
  get offsetNameLong() {
    return this.isValid ? this.zone.offsetName(this.ts, {
      format: "long",
      locale: this.locale
    }) : null;
  }
  /**
   * Get whether this zone's offset ever changes, as in a DST.
   * @type {boolean}
   */
  get isOffsetFixed() {
    return this.isValid ? this.zone.isUniversal : null;
  }
  /**
   * Get whether the DateTime is in a DST.
   * @type {boolean}
   */
  get isInDST() {
    return this.isOffsetFixed ? !1 : this.offset > this.set({ month: 1, day: 1 }).offset || this.offset > this.set({ month: 5 }).offset;
  }
  /**
   * Get those DateTimes which have the same local time as this DateTime, but a different offset from UTC
   * in this DateTime's zone. During DST changes local time can be ambiguous, for example
   * `2023-10-29T02:30:00` in `Europe/Berlin` can have offset `+01:00` or `+02:00`.
   * This method will return both possible DateTimes if this DateTime's local time is ambiguous.
   * @returns {DateTime[]}
   */
  getPossibleOffsets() {
    if (!this.isValid || this.isOffsetFixed)
      return [this];
    const t = 864e5, n = 6e4, r = Cs(this.c), i = this.zone.offset(r - t), u = this.zone.offset(r + t), s = this.zone.offset(r - i * n), o = this.zone.offset(r - u * n);
    if (s === o)
      return [this];
    const a = r - s * n, c = r - o * n, l = yu(a, s), f = yu(c, o);
    return l.hour === f.hour && l.minute === f.minute && l.second === f.second && l.millisecond === f.millisecond ? [mr(this, { ts: a }), mr(this, { ts: c })] : [this];
  }
  /**
   * Returns true if this DateTime is in a leap year, false otherwise
   * @example DateTime.local(2016).isInLeapYear //=> true
   * @example DateTime.local(2013).isInLeapYear //=> false
   * @type {boolean}
   */
  get isInLeapYear() {
    return Ji(this.year);
  }
  /**
   * Returns the number of days in this DateTime's month
   * @example DateTime.local(2016, 2).daysInMonth //=> 29
   * @example DateTime.local(2016, 3).daysInMonth //=> 31
   * @type {number}
   */
  get daysInMonth() {
    return Yu(this.year, this.month);
  }
  /**
   * Returns the number of days in this DateTime's year
   * @example DateTime.local(2016).daysInYear //=> 366
   * @example DateTime.local(2013).daysInYear //=> 365
   * @type {number}
   */
  get daysInYear() {
    return this.isValid ? Zr(this.year) : NaN;
  }
  /**
   * Returns the number of weeks in this DateTime's year
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2004).weeksInWeekYear //=> 53
   * @example DateTime.local(2013).weeksInWeekYear //=> 52
   * @type {number}
   */
  get weeksInWeekYear() {
    return this.isValid ? ji(this.weekYear) : NaN;
  }
  /**
   * Returns the number of weeks in this DateTime's local week year
   * @example DateTime.local(2020, 6, {locale: 'en-US'}).weeksInLocalWeekYear //=> 52
   * @example DateTime.local(2020, 6, {locale: 'de-DE'}).weeksInLocalWeekYear //=> 53
   * @type {number}
   */
  get weeksInLocalWeekYear() {
    return this.isValid ? ji(
      this.localWeekYear,
      this.loc.getMinDaysInFirstWeek(),
      this.loc.getStartOfWeek()
    ) : NaN;
  }
  /**
   * Returns the resolved Intl options for this DateTime.
   * This is useful in understanding the behavior of formatting methods
   * @param {Object} opts - the same options as toLocaleString
   * @return {Object}
   */
  resolvedLocaleOptions(t = {}) {
    const { locale: n, numberingSystem: r, calendar: i } = Et.create(
      this.loc.clone(t),
      t
    ).resolvedOptions(this);
    return { locale: n, numberingSystem: r, outputCalendar: i };
  }
  // TRANSFORM
  /**
   * "Set" the DateTime's zone to UTC. Returns a newly-constructed DateTime.
   *
   * Equivalent to {@link DateTime#setZone}('utc')
   * @param {number} [offset=0] - optionally, an offset from UTC in minutes
   * @param {Object} [opts={}] - options to pass to `setZone()`
   * @return {DateTime}
   */
  toUTC(t = 0, n = {}) {
    return this.setZone(Nt.instance(t), n);
  }
  /**
   * "Set" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.
   *
   * Equivalent to `setZone('local')`
   * @return {DateTime}
   */
  toLocal() {
    return this.setZone(Je.defaultZone);
  }
  /**
   * "Set" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.
   *
   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.
   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.
   * @param {Object} opts - options
   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.
   * @return {DateTime}
   */
  setZone(t, { keepLocalTime: n = !1, keepCalendarTime: r = !1 } = {}) {
    if (t = Jn(t, Je.defaultZone), t.equals(this.zone))
      return this;
    if (t.isValid) {
      let i = this.ts;
      if (n || r) {
        const u = t.offset(this.ts), s = this.toObject();
        [i] = Ou(s, u, t);
      }
      return mr(this, { ts: i, zone: t });
    } else
      return de.invalid(_i(t));
  }
  /**
   * "Set" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.
   * @param {Object} properties - the properties to set
   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })
   * @return {DateTime}
   */
  reconfigure({ locale: t, numberingSystem: n, outputCalendar: r } = {}) {
    const i = this.loc.clone({ locale: t, numberingSystem: n, outputCalendar: r });
    return mr(this, { loc: i });
  }
  /**
   * "Set" the locale. Returns a newly-constructed DateTime.
   * Just a convenient alias for reconfigure({ locale })
   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')
   * @return {DateTime}
   */
  setLocale(t) {
    return this.reconfigure({ locale: t });
  }
  /**
   * "Set" the values of specified units. Returns a newly-constructed DateTime.
   * You can only set units with this method; for "setting" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.
   *
   * This method also supports setting locale-based week units, i.e. `localWeekday`, `localWeekNumber` and `localWeekYear`.
   * They cannot be mixed with ISO-week units like `weekday`.
   * @param {Object} values - a mapping of units to numbers
   * @example dt.set({ year: 2017 })
   * @example dt.set({ hour: 8, minute: 30 })
   * @example dt.set({ weekday: 5 })
   * @example dt.set({ year: 2005, ordinal: 234 })
   * @return {DateTime}
   */
  set(t) {
    if (!this.isValid) return this;
    const n = Ku(t, Ql), { minDaysInFirstWeek: r, startOfWeek: i } = Vl(n, this.loc), u = !Ce(n.weekYear) || !Ce(n.weekNumber) || !Ce(n.weekday), s = !Ce(n.ordinal), o = !Ce(n.year), a = !Ce(n.month) || !Ce(n.day), c = o || a, l = n.weekYear || n.weekNumber;
    if ((c || s) && l)
      throw new jr(
        "Can't mix weekYear/weekNumber units with year/month/day or ordinals"
      );
    if (a && s)
      throw new jr("Can't mix ordinal dates with month/day");
    let f;
    u ? f = jl(
      { ...Gu(this.c, r, i), ...n },
      r,
      i
    ) : Ce(n.ordinal) ? (f = { ...this.toObject(), ...n }, Ce(n.day) && (f.day = Math.min(Yu(f.year, f.month), f.day))) : f = Bl({ ...io(this.c), ...n });
    const [m, p] = Ou(f, this.o, this.zone);
    return mr(this, { ts: m, o: p });
  }
  /**
   * Add a period of time to this DateTime and return the resulting DateTime
   *
   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @example DateTime.now().plus(123) //~> in 123 milliseconds
   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes
   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow
   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday
   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min
   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min
   * @return {DateTime}
   */
  plus(t) {
    if (!this.isValid) return this;
    const n = Pe.fromDurationLike(t);
    return mr(this, Jl(this, n));
  }
  /**
   * Subtract a period of time to this DateTime and return the resulting DateTime
   * See {@link DateTime#plus}
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   @return {DateTime}
   */
  minus(t) {
    if (!this.isValid) return this;
    const n = Pe.fromDurationLike(t).negate();
    return mr(this, Jl(this, n));
  }
  /**
   * "Set" this DateTime to the beginning of a unit of time.
   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @param {Object} opts - options
   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week
   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'
   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'
   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'
   * @return {DateTime}
   */
  startOf(t, { useLocaleWeeks: n = !1 } = {}) {
    if (!this.isValid) return this;
    const r = {}, i = Pe.normalizeUnit(t);
    switch (i) {
      case "years":
        r.month = 1;
      case "quarters":
      case "months":
        r.day = 1;
      case "weeks":
      case "days":
        r.hour = 0;
      case "hours":
        r.minute = 0;
      case "minutes":
        r.second = 0;
      case "seconds":
        r.millisecond = 0;
        break;
    }
    if (i === "weeks")
      if (n) {
        const u = this.loc.getStartOfWeek(), { weekday: s } = this;
        s < u && (r.weekNumber = this.weekNumber - 1), r.weekday = u;
      } else
        r.weekday = 1;
    if (i === "quarters") {
      const u = Math.ceil(this.month / 3);
      r.month = (u - 1) * 3 + 1;
    }
    return this.set(r);
  }
  /**
   * "Set" this DateTime to the end (meaning the last millisecond) of a unit of time
   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @param {Object} opts - options
   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week
   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'
   * @return {DateTime}
   */
  endOf(t, n) {
    return this.isValid ? this.plus({ [t]: 1 }).startOf(t, n).minus(1) : this;
  }
  // OUTPUT
  /**
   * Returns a string representation of this DateTime formatted according to the specified format string.
   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @param {string} fmt - the format string
   * @param {Object} opts - opts to override the configuration options on this DateTime
   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'
   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'
   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: "fr" }) //=> '2017 avr. 22'
   * @example DateTime.now().toFormat("HH 'hours and' mm 'minutes'") //=> '20 hours and 55 minutes'
   * @return {string}
   */
  toFormat(t, n = {}) {
    return this.isValid ? Et.create(this.loc.redefaultToEN(n)).formatDateTimeFromString(this, t) : so;
  }
  /**
   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.
   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation
   * of the DateTime in the assigned locale.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options
   * @param {Object} opts - opts to override the configuration options on this DateTime
   * @example DateTime.now().toLocaleString(); //=> 4/20/2017
   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL, { locale: 'fr' }); //=> '28 août 2022'
   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'
   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'
   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'
   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'
   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'
   * @return {string}
   */
  toLocaleString(t = Zu, n = {}) {
    return this.isValid ? Et.create(this.loc.clone(n), t).formatDateTime(this) : so;
  }
  /**
   * Returns an array of format "parts", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts
   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.
   * @example DateTime.now().toLocaleParts(); //=> [
   *                                   //=>   { type: 'day', value: '25' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'month', value: '05' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'year', value: '1982' }
   *                                   //=> ]
   */
  toLocaleParts(t = {}) {
    return this.isValid ? Et.create(this.loc.clone(t), t).formatDateTimeParts(this) : [];
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.extendedZone=false] - add the time zone format extension
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'
   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'
   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'
   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'
   * @return {string}
   */
  toISO({
    format: t = "extended",
    suppressSeconds: n = !1,
    suppressMilliseconds: r = !1,
    includeOffset: i = !0,
    extendedZone: u = !1
  } = {}) {
    if (!this.isValid)
      return null;
    const s = t === "extended";
    let o = lo(this, s);
    return o += "T", o += Xl(this, s, n, r, i, u), o;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's date component
   * @param {Object} opts - options
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'
   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'
   * @return {string}
   */
  toISODate({ format: t = "extended" } = {}) {
    return this.isValid ? lo(this, t === "extended") : null;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's week date
   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'
   * @return {string}
   */
  toISOWeekDate() {
    return _u(this, "kkkk-'W'WW-c");
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's time component
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'
   * @return {string}
   */
  toISOTime({
    suppressMilliseconds: t = !1,
    suppressSeconds: n = !1,
    includeOffset: r = !0,
    includePrefix: i = !1,
    extendedZone: u = !1,
    format: s = "extended"
  } = {}) {
    return this.isValid ? (i ? "T" : "") + Xl(
      this,
      s === "extended",
      n,
      t,
      r,
      u
    ) : null;
  }
  /**
   * Returns an RFC 2822-compatible string representation of this DateTime
   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'
   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'
   * @return {string}
   */
  toRFC2822() {
    return _u(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", !1);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.
   * Specifically, the string conforms to RFC 1123.
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'
   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'
   * @return {string}
   */
  toHTTP() {
    return _u(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Date
   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'
   * @return {string}
   */
  toSQLDate() {
    return this.isValid ? lo(this, !0) : null;
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Time
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'
   * @example DateTime.utc().toSQL() //=> '05:15:16.345'
   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'
   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'
   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'
   * @return {string}
   */
  toSQLTime({ includeOffset: t = !0, includeZone: n = !1, includeOffsetSpace: r = !0 } = {}) {
    let i = "HH:mm:ss.SSS";
    return (n || t) && (r && (i += " "), n ? i += "z" : t && (i += "ZZ")), _u(this, i, !0);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'
   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'
   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'
   * @return {string}
   */
  toSQL(t = {}) {
    return this.isValid ? `${this.toSQLDate()} ${this.toSQLTime(t)}` : null;
  }
  /**
   * Returns a string representation of this DateTime appropriate for debugging
   * @return {string}
   */
  toString() {
    return this.isValid ? this.toISO() : so;
  }
  /**
   * Returns a string representation of this DateTime appropriate for the REPL.
   * @return {string}
   */
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return this.isValid ? `DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }` : `DateTime { Invalid, reason: ${this.invalidReason} }`;
  }
  /**
   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}
   * @return {number}
   */
  valueOf() {
    return this.toMillis();
  }
  /**
   * Returns the epoch milliseconds of this DateTime.
   * @return {number}
   */
  toMillis() {
    return this.isValid ? this.ts : NaN;
  }
  /**
   * Returns the epoch seconds of this DateTime.
   * @return {number}
   */
  toSeconds() {
    return this.isValid ? this.ts / 1e3 : NaN;
  }
  /**
   * Returns the epoch seconds (as a whole number) of this DateTime.
   * @return {number}
   */
  toUnixInteger() {
    return this.isValid ? Math.floor(this.ts / 1e3) : NaN;
  }
  /**
   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.
   * @return {string}
   */
  toJSON() {
    return this.toISO();
  }
  /**
   * Returns a BSON serializable equivalent to this DateTime.
   * @return {Date}
   */
  toBSON() {
    return this.toJSDate();
  }
  /**
   * Returns a JavaScript object with this DateTime's year, month, day, and so on.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }
   * @return {Object}
   */
  toObject(t = {}) {
    if (!this.isValid) return {};
    const n = { ...this.c };
    return t.includeConfig && (n.outputCalendar = this.outputCalendar, n.numberingSystem = this.loc.numberingSystem, n.locale = this.loc.locale), n;
  }
  /**
   * Returns a JavaScript Date equivalent to this DateTime.
   * @return {Date}
   */
  toJSDate() {
    return new Date(this.isValid ? this.ts : NaN);
  }
  // COMPARE
  /**
   * Return the difference between two DateTimes as a Duration.
   * @param {DateTime} otherDateTime - the DateTime to compare this one to
   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example
   * var i1 = DateTime.fromISO('1982-05-25T09:45'),
   *     i2 = DateTime.fromISO('1983-10-14T10:30');
   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }
   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }
   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }
   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }
   * @return {Duration}
   */
  diff(t, n = "milliseconds", r = {}) {
    if (!this.isValid || !t.isValid)
      return Pe.invalid("created by diffing an invalid DateTime");
    const i = { locale: this.locale, numberingSystem: this.numberingSystem, ...r }, u = Mb(n).map(Pe.normalizeUnit), s = t.valueOf() > this.valueOf(), o = s ? this : t, a = s ? t : this, c = zg(o, a, u, i);
    return s ? c.negate() : c;
  }
  /**
   * Return the difference between this DateTime and right now.
   * See {@link DateTime#diff}
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  diffNow(t = "milliseconds", n = {}) {
    return this.diff(de.now(), t, n);
  }
  /**
   * Return an Interval spanning between this DateTime and another DateTime
   * @param {DateTime} otherDateTime - the other end point of the Interval
   * @return {Interval}
   */
  until(t) {
    return this.isValid ? Qe.fromDateTimes(this, t) : this;
  }
  /**
   * Return whether this DateTime is in the same unit of time as another DateTime.
   * Higher-order units must also be identical for this function to return `true`.
   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.
   * @param {DateTime} otherDateTime - the other DateTime
   * @param {string} unit - the unit of time to check sameness on
   * @param {Object} opts - options
   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; only the locale of this DateTime is used
   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day
   * @return {boolean}
   */
  hasSame(t, n, r) {
    if (!this.isValid) return !1;
    const i = t.valueOf(), u = this.setZone(t.zone, { keepLocalTime: !0 });
    return u.startOf(n, r) <= i && i <= u.endOf(n, r);
  }
  /**
   * Equality check
   * Two DateTimes are equal if and only if they represent the same millisecond, have the same zone and location, and are both valid.
   * To compare just the millisecond values, use `+dt1 === +dt2`.
   * @param {DateTime} other - the other DateTime
   * @return {boolean}
   */
  equals(t) {
    return this.isValid && t.isValid && this.valueOf() === t.valueOf() && this.zone.equals(t.zone) && this.loc.equals(t.loc);
  }
  /**
   * Returns a string representation of a this time relative to now, such as "in two days". Can only internationalize if your
   * platform supports Intl.RelativeTimeFormat. Rounds down by default.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} [options.style="long"] - the style of units, must be "long", "short", or "narrow"
   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of "years", "quarters", "months", "weeks", "days", "hours", "minutes", or "seconds"
   * @param {boolean} [options.round=true] - whether to round the numbers in the output.
   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> "in 1 day"
   * @example DateTime.now().setLocale("es").toRelative({ days: 1 }) //=> "dentro de 1 día"
   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: "fr" }) //=> "dans 23 heures"
   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> "2 days ago"
   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: "hours" }) //=> "48 hours ago"
   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> "1.5 days ago"
   */
  toRelative(t = {}) {
    if (!this.isValid) return null;
    const n = t.base || de.fromObject({}, { zone: this.zone }), r = t.padding ? this < n ? -t.padding : t.padding : 0;
    let i = ["years", "months", "days", "hours", "minutes", "seconds"], u = t.unit;
    return Array.isArray(t.unit) && (i = t.unit, u = void 0), tc(n, this.plus(r), {
      ...t,
      numeric: "always",
      units: i,
      unit: u
    });
  }
  /**
   * Returns a string representation of this date relative to today, such as "yesterday" or "next month".
   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", or "days"
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> "tomorrow"
   * @example DateTime.now().setLocale("es").plus({ days: 1 }).toRelative() //=> ""mañana"
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: "fr" }) //=> "demain"
   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> "2 days ago"
   */
  toRelativeCalendar(t = {}) {
    return this.isValid ? tc(t.base || de.fromObject({}, { zone: this.zone }), this, {
      ...t,
      numeric: "auto",
      units: ["years", "months", "days"],
      calendary: !0
    }) : null;
  }
  /**
   * Return the min of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum
   * @return {DateTime} the min DateTime, or undefined if called with no argument
   */
  static min(...t) {
    if (!t.every(de.isDateTime))
      throw new vt("min requires all arguments be DateTimes");
    return Hl(t, (n) => n.valueOf(), Math.min);
  }
  /**
   * Return the max of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum
   * @return {DateTime} the max DateTime, or undefined if called with no argument
   */
  static max(...t) {
    if (!t.every(de.isDateTime))
      throw new vt("max requires all arguments be DateTimes");
    return Hl(t, (n) => n.valueOf(), Math.max);
  }
  // MISC
  /**
   * Explain how a string would be parsed by fromFormat()
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see description)
   * @param {Object} options - options taken by fromFormat()
   * @return {Object}
   */
  static fromFormatExplain(t, n, r = {}) {
    const { locale: i = null, numberingSystem: u = null } = r, s = He.fromOpts({
      locale: i,
      numberingSystem: u,
      defaultToEN: !0
    });
    return wd(s, t, n);
  }
  /**
   * @deprecated use fromFormatExplain instead
   */
  static fromStringExplain(t, n, r = {}) {
    return de.fromFormatExplain(t, n, r);
  }
  /**
   * Build a parser for `fmt` using the given locale. This parser can be passed
   * to {@link DateTime.fromFormatParser} to a parse a date in this format. This
   * can be used to optimize cases where many dates need to be parsed in a
   * specific format.
   *
   * @param {String} fmt - the format the string is expected to be in (see
   * description)
   * @param {Object} options - options used to set locale and numberingSystem
   * for parser
   * @returns {TokenParser} - opaque object to be used
   */
  static buildFormatParser(t, n = {}) {
    const { locale: r = null, numberingSystem: i = null } = n, u = He.fromOpts({
      locale: r,
      numberingSystem: i,
      defaultToEN: !0
    });
    return new kd(u, t);
  }
  /**
   * Create a DateTime from an input string and format parser.
   *
   * The format parser must have been created with the same locale as this call.
   *
   * @param {String} text - the string to parse
   * @param {TokenParser} formatParser - parser from {@link DateTime.buildFormatParser}
   * @param {Object} opts - options taken by fromFormat()
   * @returns {DateTime}
   */
  static fromFormatParser(t, n, r = {}) {
    if (Ce(t) || Ce(n))
      throw new vt(
        "fromFormatParser requires an input string and a format parser"
      );
    const { locale: i = null, numberingSystem: u = null } = r, s = He.fromOpts({
      locale: i,
      numberingSystem: u,
      defaultToEN: !0
    });
    if (!s.equals(n.locale))
      throw new vt(
        `fromFormatParser called with a locale of ${s}, but the format parser was created for ${n.locale}`
      );
    const { result: o, zone: a, specificOffset: c, invalidReason: l } = n.explainFromTokens(t);
    return l ? de.invalid(l) : Nr(
      o,
      a,
      r,
      `format ${n.format}`,
      t,
      c
    );
  }
  // FORMAT PRESETS
  /**
   * {@link DateTime#toLocaleString} format like 10/14/1983
   * @type {Object}
   */
  static get DATE_SHORT() {
    return Zu;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'
   * @type {Object}
   */
  static get DATE_MED() {
    return D0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'
   * @type {Object}
   */
  static get DATE_MED_WITH_WEEKDAY() {
    return ib;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'October 14, 1983'
   * @type {Object}
   */
  static get DATE_FULL() {
    return A0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'
   * @type {Object}
   */
  static get DATE_HUGE() {
    return F0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_SIMPLE() {
    return M0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_WITH_SECONDS() {
    return N0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_WITH_SHORT_OFFSET() {
    return I0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_WITH_LONG_OFFSET() {
    return L0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_SIMPLE() {
    return z0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_WITH_SECONDS() {
    return P0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_WITH_SHORT_OFFSET() {
    return R0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_WITH_LONG_OFFSET() {
    return j0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_SHORT() {
    return B0;
  }
  /**
   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_SHORT_WITH_SECONDS() {
    return V0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_MED() {
    return H0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_MED_WITH_SECONDS() {
    return U0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_MED_WITH_WEEKDAY() {
    return ub;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_FULL() {
    return q0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_FULL_WITH_SECONDS() {
    return W0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_HUGE() {
    return $0;
  }
  /**
   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_HUGE_WITH_SECONDS() {
    return Z0;
  }
}
function mi(e) {
  if (de.isDateTime(e))
    return e;
  if (e && e.valueOf && rr(e.valueOf()))
    return de.fromJSDate(e);
  if (e && typeof e == "object")
    return de.fromObject(e);
  throw new vt(
    `Unknown datetime argument: ${e}, of type ${typeof e}`
  );
}
const rc = {};
function r2(e) {
  let t = rc[e];
  if (t)
    return t;
  t = rc[e] = [];
  for (let n = 0; n < 128; n++) {
    const r = String.fromCharCode(n);
    t.push(r);
  }
  for (let n = 0; n < e.length; n++) {
    const r = e.charCodeAt(n);
    t[r] = "%" + ("0" + r.toString(16).toUpperCase()).slice(-2);
  }
  return t;
}
function ni(e, t) {
  typeof t != "string" && (t = ni.defaultChars);
  const n = r2(t);
  return e.replace(/(%[a-f0-9]{2})+/gi, function(r) {
    let i = "";
    for (let u = 0, s = r.length; u < s; u += 3) {
      const o = parseInt(r.slice(u + 1, u + 3), 16);
      if (o < 128) {
        i += n[o];
        continue;
      }
      if ((o & 224) === 192 && u + 3 < s) {
        const a = parseInt(r.slice(u + 4, u + 6), 16);
        if ((a & 192) === 128) {
          const c = o << 6 & 1984 | a & 63;
          c < 128 ? i += "��" : i += String.fromCharCode(c), u += 3;
          continue;
        }
      }
      if ((o & 240) === 224 && u + 6 < s) {
        const a = parseInt(r.slice(u + 4, u + 6), 16), c = parseInt(r.slice(u + 7, u + 9), 16);
        if ((a & 192) === 128 && (c & 192) === 128) {
          const l = o << 12 & 61440 | a << 6 & 4032 | c & 63;
          l < 2048 || l >= 55296 && l <= 57343 ? i += "���" : i += String.fromCharCode(l), u += 6;
          continue;
        }
      }
      if ((o & 248) === 240 && u + 9 < s) {
        const a = parseInt(r.slice(u + 4, u + 6), 16), c = parseInt(r.slice(u + 7, u + 9), 16), l = parseInt(r.slice(u + 10, u + 12), 16);
        if ((a & 192) === 128 && (c & 192) === 128 && (l & 192) === 128) {
          let f = o << 18 & 1835008 | a << 12 & 258048 | c << 6 & 4032 | l & 63;
          f < 65536 || f > 1114111 ? i += "����" : (f -= 65536, i += String.fromCharCode(55296 + (f >> 10), 56320 + (f & 1023))), u += 9;
          continue;
        }
      }
      i += "�";
    }
    return i;
  });
}
ni.defaultChars = ";/?:@&=+$,#";
ni.componentChars = "";
const ic = {};
function i2(e) {
  let t = ic[e];
  if (t)
    return t;
  t = ic[e] = [];
  for (let n = 0; n < 128; n++) {
    const r = String.fromCharCode(n);
    /^[0-9a-z]$/i.test(r) ? t.push(r) : t.push("%" + ("0" + n.toString(16).toUpperCase()).slice(-2));
  }
  for (let n = 0; n < e.length; n++)
    t[e.charCodeAt(n)] = e[n];
  return t;
}
function eu(e, t, n) {
  typeof t != "string" && (n = t, t = eu.defaultChars), typeof n > "u" && (n = !0);
  const r = i2(t);
  let i = "";
  for (let u = 0, s = e.length; u < s; u++) {
    const o = e.charCodeAt(u);
    if (n && o === 37 && u + 2 < s && /^[0-9a-f]{2}$/i.test(e.slice(u + 1, u + 3))) {
      i += e.slice(u, u + 3), u += 2;
      continue;
    }
    if (o < 128) {
      i += r[o];
      continue;
    }
    if (o >= 55296 && o <= 57343) {
      if (o >= 55296 && o <= 56319 && u + 1 < s) {
        const a = e.charCodeAt(u + 1);
        if (a >= 56320 && a <= 57343) {
          i += encodeURIComponent(e[u] + e[u + 1]), u++;
          continue;
        }
      }
      i += "%EF%BF%BD";
      continue;
    }
    i += encodeURIComponent(e[u]);
  }
  return i;
}
eu.defaultChars = ";/?:@&=+$,-_.!~*'()#";
eu.componentChars = "-_.!~*'()";
function Da(e) {
  let t = "";
  return t += e.protocol || "", t += e.slashes ? "//" : "", t += e.auth ? e.auth + "@" : "", e.hostname && e.hostname.indexOf(":") !== -1 ? t += "[" + e.hostname + "]" : t += e.hostname || "", t += e.port ? ":" + e.port : "", t += e.pathname || "", t += e.search || "", t += e.hash || "", t;
}
function Ju() {
  this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
}
const u2 = /^([a-z0-9.+-]+:)/i, s2 = /:[0-9]*$/, o2 = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, a2 = ["<", ">", '"', "`", " ", "\r", `
`, "	"], l2 = ["{", "}", "|", "\\", "^", "`"].concat(a2), c2 = ["'"].concat(l2), uc = ["%", "/", "?", ";", "#"].concat(c2), sc = ["/", "?", "#"], f2 = 255, oc = /^[+a-z0-9A-Z_-]{0,63}$/, d2 = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, ac = {
  javascript: !0,
  "javascript:": !0
}, lc = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
};
function Aa(e, t) {
  if (e && e instanceof Ju) return e;
  const n = new Ju();
  return n.parse(e, t), n;
}
Ju.prototype.parse = function(e, t) {
  let n, r, i, u = e;
  if (u = u.trim(), !t && e.split("#").length === 1) {
    const c = o2.exec(u);
    if (c)
      return this.pathname = c[1], c[2] && (this.search = c[2]), this;
  }
  let s = u2.exec(u);
  if (s && (s = s[0], n = s.toLowerCase(), this.protocol = s, u = u.substr(s.length)), (t || s || u.match(/^\/\/[^@\/]+@[^@\/]+/)) && (i = u.substr(0, 2) === "//", i && !(s && ac[s]) && (u = u.substr(2), this.slashes = !0)), !ac[s] && (i || s && !lc[s])) {
    let c = -1;
    for (let h = 0; h < sc.length; h++)
      r = u.indexOf(sc[h]), r !== -1 && (c === -1 || r < c) && (c = r);
    let l, f;
    c === -1 ? f = u.lastIndexOf("@") : f = u.lastIndexOf("@", c), f !== -1 && (l = u.slice(0, f), u = u.slice(f + 1), this.auth = l), c = -1;
    for (let h = 0; h < uc.length; h++)
      r = u.indexOf(uc[h]), r !== -1 && (c === -1 || r < c) && (c = r);
    c === -1 && (c = u.length), u[c - 1] === ":" && c--;
    const m = u.slice(0, c);
    u = u.slice(c), this.parseHost(m), this.hostname = this.hostname || "";
    const p = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!p) {
      const h = this.hostname.split(/\./);
      for (let E = 0, C = h.length; E < C; E++) {
        const L = h[E];
        if (L && !L.match(oc)) {
          let T = "";
          for (let b = 0, _ = L.length; b < _; b++)
            L.charCodeAt(b) > 127 ? T += "x" : T += L[b];
          if (!T.match(oc)) {
            const b = h.slice(0, E), _ = h.slice(E + 1), S = L.match(d2);
            S && (b.push(S[1]), _.unshift(S[2])), _.length && (u = _.join(".") + u), this.hostname = b.join(".");
            break;
          }
        }
      }
    }
    this.hostname.length > f2 && (this.hostname = ""), p && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
  }
  const o = u.indexOf("#");
  o !== -1 && (this.hash = u.substr(o), u = u.slice(0, o));
  const a = u.indexOf("?");
  return a !== -1 && (this.search = u.substr(a), u = u.slice(0, a)), u && (this.pathname = u), lc[n] && this.hostname && !this.pathname && (this.pathname = ""), this;
};
Ju.prototype.parseHost = function(e) {
  let t = s2.exec(e);
  t && (t = t[0], t !== ":" && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e);
};
const h2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: ni,
  encode: eu,
  format: Da,
  parse: Aa
}, Symbol.toStringTag, { value: "Module" })), Od = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/, Dd = /[\0-\x1F\x7F-\x9F]/, p2 = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/, Fa = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, Ad = /[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/, Fd = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/, m2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Any: Od,
  Cc: Dd,
  Cf: p2,
  P: Fa,
  S: Ad,
  Z: Fd
}, Symbol.toStringTag, { value: "Module" })), b2 = new Uint16Array(
  // prettier-ignore
  'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((e) => e.charCodeAt(0))
), g2 = new Uint16Array(
  // prettier-ignore
  "Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((e) => e.charCodeAt(0))
);
var co;
const y2 = /* @__PURE__ */ new Map([
  [0, 65533],
  // C1 Unicode control character reference replacements
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]), _2 = (
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
  (co = String.fromCodePoint) !== null && co !== void 0 ? co : function(e) {
    let t = "";
    return e > 65535 && (e -= 65536, t += String.fromCharCode(e >>> 10 & 1023 | 55296), e = 56320 | e & 1023), t += String.fromCharCode(e), t;
  }
);
function x2(e) {
  var t;
  return e >= 55296 && e <= 57343 || e > 1114111 ? 65533 : (t = y2.get(e)) !== null && t !== void 0 ? t : e;
}
var gt;
(function(e) {
  e[e.NUM = 35] = "NUM", e[e.SEMI = 59] = "SEMI", e[e.EQUALS = 61] = "EQUALS", e[e.ZERO = 48] = "ZERO", e[e.NINE = 57] = "NINE", e[e.LOWER_A = 97] = "LOWER_A", e[e.LOWER_F = 102] = "LOWER_F", e[e.LOWER_X = 120] = "LOWER_X", e[e.LOWER_Z = 122] = "LOWER_Z", e[e.UPPER_A = 65] = "UPPER_A", e[e.UPPER_F = 70] = "UPPER_F", e[e.UPPER_Z = 90] = "UPPER_Z";
})(gt || (gt = {}));
const v2 = 32;
var Qn;
(function(e) {
  e[e.VALUE_LENGTH = 49152] = "VALUE_LENGTH", e[e.BRANCH_LENGTH = 16256] = "BRANCH_LENGTH", e[e.JUMP_TABLE = 127] = "JUMP_TABLE";
})(Qn || (Qn = {}));
function $o(e) {
  return e >= gt.ZERO && e <= gt.NINE;
}
function k2(e) {
  return e >= gt.UPPER_A && e <= gt.UPPER_F || e >= gt.LOWER_A && e <= gt.LOWER_F;
}
function w2(e) {
  return e >= gt.UPPER_A && e <= gt.UPPER_Z || e >= gt.LOWER_A && e <= gt.LOWER_Z || $o(e);
}
function E2(e) {
  return e === gt.EQUALS || w2(e);
}
var bt;
(function(e) {
  e[e.EntityStart = 0] = "EntityStart", e[e.NumericStart = 1] = "NumericStart", e[e.NumericDecimal = 2] = "NumericDecimal", e[e.NumericHex = 3] = "NumericHex", e[e.NamedEntity = 4] = "NamedEntity";
})(bt || (bt = {}));
var Xn;
(function(e) {
  e[e.Legacy = 0] = "Legacy", e[e.Strict = 1] = "Strict", e[e.Attribute = 2] = "Attribute";
})(Xn || (Xn = {}));
class C2 {
  constructor(t, n, r) {
    this.decodeTree = t, this.emitCodePoint = n, this.errors = r, this.state = bt.EntityStart, this.consumed = 1, this.result = 0, this.treeIndex = 0, this.excess = 1, this.decodeMode = Xn.Strict;
  }
  /** Resets the instance to make it reusable. */
  startEntity(t) {
    this.decodeMode = t, this.state = bt.EntityStart, this.result = 0, this.treeIndex = 0, this.excess = 1, this.consumed = 1;
  }
  /**
   * Write an entity to the decoder. This can be called multiple times with partial entities.
   * If the entity is incomplete, the decoder will return -1.
   *
   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
   * entity is incomplete, and resume when the next string is written.
   *
   * @param string The string containing the entity (or a continuation of the entity).
   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  write(t, n) {
    switch (this.state) {
      case bt.EntityStart:
        return t.charCodeAt(n) === gt.NUM ? (this.state = bt.NumericStart, this.consumed += 1, this.stateNumericStart(t, n + 1)) : (this.state = bt.NamedEntity, this.stateNamedEntity(t, n));
      case bt.NumericStart:
        return this.stateNumericStart(t, n);
      case bt.NumericDecimal:
        return this.stateNumericDecimal(t, n);
      case bt.NumericHex:
        return this.stateNumericHex(t, n);
      case bt.NamedEntity:
        return this.stateNamedEntity(t, n);
    }
  }
  /**
   * Switches between the numeric decimal and hexadecimal states.
   *
   * Equivalent to the `Numeric character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericStart(t, n) {
    return n >= t.length ? -1 : (t.charCodeAt(n) | v2) === gt.LOWER_X ? (this.state = bt.NumericHex, this.consumed += 1, this.stateNumericHex(t, n + 1)) : (this.state = bt.NumericDecimal, this.stateNumericDecimal(t, n));
  }
  addToNumericResult(t, n, r, i) {
    if (n !== r) {
      const u = r - n;
      this.result = this.result * Math.pow(i, u) + parseInt(t.substr(n, u), i), this.consumed += u;
    }
  }
  /**
   * Parses a hexadecimal numeric entity.
   *
   * Equivalent to the `Hexademical character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericHex(t, n) {
    const r = n;
    for (; n < t.length; ) {
      const i = t.charCodeAt(n);
      if ($o(i) || k2(i))
        n += 1;
      else
        return this.addToNumericResult(t, r, n, 16), this.emitNumericEntity(i, 3);
    }
    return this.addToNumericResult(t, r, n, 16), -1;
  }
  /**
   * Parses a decimal numeric entity.
   *
   * Equivalent to the `Decimal character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericDecimal(t, n) {
    const r = n;
    for (; n < t.length; ) {
      const i = t.charCodeAt(n);
      if ($o(i))
        n += 1;
      else
        return this.addToNumericResult(t, r, n, 10), this.emitNumericEntity(i, 2);
    }
    return this.addToNumericResult(t, r, n, 10), -1;
  }
  /**
   * Validate and emit a numeric entity.
   *
   * Implements the logic from the `Hexademical character reference start
   * state` and `Numeric character reference end state` in the HTML spec.
   *
   * @param lastCp The last code point of the entity. Used to see if the
   *               entity was terminated with a semicolon.
   * @param expectedLength The minimum number of characters that should be
   *                       consumed. Used to validate that at least one digit
   *                       was consumed.
   * @returns The number of characters that were consumed.
   */
  emitNumericEntity(t, n) {
    var r;
    if (this.consumed <= n)
      return (r = this.errors) === null || r === void 0 || r.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
    if (t === gt.SEMI)
      this.consumed += 1;
    else if (this.decodeMode === Xn.Strict)
      return 0;
    return this.emitCodePoint(x2(this.result), this.consumed), this.errors && (t !== gt.SEMI && this.errors.missingSemicolonAfterCharacterReference(), this.errors.validateNumericCharacterReference(this.result)), this.consumed;
  }
  /**
   * Parses a named entity.
   *
   * Equivalent to the `Named character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNamedEntity(t, n) {
    const { decodeTree: r } = this;
    let i = r[this.treeIndex], u = (i & Qn.VALUE_LENGTH) >> 14;
    for (; n < t.length; n++, this.excess++) {
      const s = t.charCodeAt(n);
      if (this.treeIndex = S2(r, i, this.treeIndex + Math.max(1, u), s), this.treeIndex < 0)
        return this.result === 0 || // If we are parsing an attribute
        this.decodeMode === Xn.Attribute && // We shouldn't have consumed any characters after the entity,
        (u === 0 || // And there should be no invalid characters.
        E2(s)) ? 0 : this.emitNotTerminatedNamedEntity();
      if (i = r[this.treeIndex], u = (i & Qn.VALUE_LENGTH) >> 14, u !== 0) {
        if (s === gt.SEMI)
          return this.emitNamedEntityData(this.treeIndex, u, this.consumed + this.excess);
        this.decodeMode !== Xn.Strict && (this.result = this.treeIndex, this.consumed += this.excess, this.excess = 0);
      }
    }
    return -1;
  }
  /**
   * Emit a named entity that was not terminated with a semicolon.
   *
   * @returns The number of characters consumed.
   */
  emitNotTerminatedNamedEntity() {
    var t;
    const { result: n, decodeTree: r } = this, i = (r[n] & Qn.VALUE_LENGTH) >> 14;
    return this.emitNamedEntityData(n, i, this.consumed), (t = this.errors) === null || t === void 0 || t.missingSemicolonAfterCharacterReference(), this.consumed;
  }
  /**
   * Emit a named entity.
   *
   * @param result The index of the entity in the decode tree.
   * @param valueLength The number of bytes in the entity.
   * @param consumed The number of characters consumed.
   *
   * @returns The number of characters consumed.
   */
  emitNamedEntityData(t, n, r) {
    const { decodeTree: i } = this;
    return this.emitCodePoint(n === 1 ? i[t] & ~Qn.VALUE_LENGTH : i[t + 1], r), n === 3 && this.emitCodePoint(i[t + 2], r), r;
  }
  /**
   * Signal to the parser that the end of the input was reached.
   *
   * Remaining data will be emitted and relevant errors will be produced.
   *
   * @returns The number of characters consumed.
   */
  end() {
    var t;
    switch (this.state) {
      case bt.NamedEntity:
        return this.result !== 0 && (this.decodeMode !== Xn.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
      case bt.NumericDecimal:
        return this.emitNumericEntity(0, 2);
      case bt.NumericHex:
        return this.emitNumericEntity(0, 3);
      case bt.NumericStart:
        return (t = this.errors) === null || t === void 0 || t.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
      case bt.EntityStart:
        return 0;
    }
  }
}
function Md(e) {
  let t = "";
  const n = new C2(e, (r) => t += _2(r));
  return function(i, u) {
    let s = 0, o = 0;
    for (; (o = i.indexOf("&", o)) >= 0; ) {
      t += i.slice(s, o), n.startEntity(u);
      const c = n.write(
        i,
        // Skip the "&"
        o + 1
      );
      if (c < 0) {
        s = o + n.end();
        break;
      }
      s = o + c, o = c === 0 ? s + 1 : s;
    }
    const a = t + i.slice(s);
    return t = "", a;
  };
}
function S2(e, t, n, r) {
  const i = (t & Qn.BRANCH_LENGTH) >> 7, u = t & Qn.JUMP_TABLE;
  if (i === 0)
    return u !== 0 && r === u ? n : -1;
  if (u) {
    const a = r - u;
    return a < 0 || a >= i ? -1 : e[n + a] - 1;
  }
  let s = n, o = s + i - 1;
  for (; s <= o; ) {
    const a = s + o >>> 1, c = e[a];
    if (c < r)
      s = a + 1;
    else if (c > r)
      o = a - 1;
    else
      return e[a + i];
  }
  return -1;
}
const T2 = Md(b2);
Md(g2);
function Nd(e, t = Xn.Legacy) {
  return T2(e, t);
}
function O2(e) {
  return Object.prototype.toString.call(e);
}
function Ma(e) {
  return O2(e) === "[object String]";
}
const D2 = Object.prototype.hasOwnProperty;
function A2(e, t) {
  return D2.call(e, t);
}
function Os(e) {
  return Array.prototype.slice.call(arguments, 1).forEach(function(n) {
    if (n) {
      if (typeof n != "object")
        throw new TypeError(n + "must be object");
      Object.keys(n).forEach(function(r) {
        e[r] = n[r];
      });
    }
  }), e;
}
function Id(e, t, n) {
  return [].concat(e.slice(0, t), n, e.slice(t + 1));
}
function Na(e) {
  return !(e >= 55296 && e <= 57343 || e >= 64976 && e <= 65007 || (e & 65535) === 65535 || (e & 65535) === 65534 || e >= 0 && e <= 8 || e === 11 || e >= 14 && e <= 31 || e >= 127 && e <= 159 || e > 1114111);
}
function Xu(e) {
  if (e > 65535) {
    e -= 65536;
    const t = 55296 + (e >> 10), n = 56320 + (e & 1023);
    return String.fromCharCode(t, n);
  }
  return String.fromCharCode(e);
}
const Ld = /\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g, F2 = /&([a-z#][a-z0-9]{1,31});/gi, M2 = new RegExp(Ld.source + "|" + F2.source, "gi"), N2 = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;
function I2(e, t) {
  if (t.charCodeAt(0) === 35 && N2.test(t)) {
    const r = t[1].toLowerCase() === "x" ? parseInt(t.slice(2), 16) : parseInt(t.slice(1), 10);
    return Na(r) ? Xu(r) : e;
  }
  const n = Nd(e);
  return n !== e ? n : e;
}
function L2(e) {
  return e.indexOf("\\") < 0 ? e : e.replace(Ld, "$1");
}
function ri(e) {
  return e.indexOf("\\") < 0 && e.indexOf("&") < 0 ? e : e.replace(M2, function(t, n, r) {
    return n || I2(t, r);
  });
}
const z2 = /[&<>"]/, P2 = /[&<>"]/g, R2 = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function j2(e) {
  return R2[e];
}
function ar(e) {
  return z2.test(e) ? e.replace(P2, j2) : e;
}
const B2 = /[.?*+^$[\]\\(){}|-]/g;
function V2(e) {
  return e.replace(B2, "\\$&");
}
function Ge(e) {
  switch (e) {
    case 9:
    case 32:
      return !0;
  }
  return !1;
}
function Bi(e) {
  if (e >= 8192 && e <= 8202)
    return !0;
  switch (e) {
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 32:
    case 160:
    case 5760:
    case 8239:
    case 8287:
    case 12288:
      return !0;
  }
  return !1;
}
function Vi(e) {
  return Fa.test(e) || Ad.test(e);
}
function Hi(e) {
  switch (e) {
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 124:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
function Ds(e) {
  return e = e.trim().replace(/\s+/g, " "), "ẞ".toLowerCase() === "Ṿ" && (e = e.replace(/ẞ/g, "ß")), e.toLowerCase().toUpperCase();
}
const H2 = { mdurl: h2, ucmicro: m2 }, U2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  arrayReplaceAt: Id,
  assign: Os,
  escapeHtml: ar,
  escapeRE: V2,
  fromCodePoint: Xu,
  has: A2,
  isMdAsciiPunct: Hi,
  isPunctChar: Vi,
  isSpace: Ge,
  isString: Ma,
  isValidEntityCode: Na,
  isWhiteSpace: Bi,
  lib: H2,
  normalizeReference: Ds,
  unescapeAll: ri,
  unescapeMd: L2
}, Symbol.toStringTag, { value: "Module" }));
function q2(e, t, n) {
  let r, i, u, s;
  const o = e.posMax, a = e.pos;
  for (e.pos = t + 1, r = 1; e.pos < o; ) {
    if (u = e.src.charCodeAt(e.pos), u === 93 && (r--, r === 0)) {
      i = !0;
      break;
    }
    if (s = e.pos, e.md.inline.skipToken(e), u === 91) {
      if (s === e.pos - 1)
        r++;
      else if (n)
        return e.pos = a, -1;
    }
  }
  let c = -1;
  return i && (c = e.pos), e.pos = a, c;
}
function W2(e, t, n) {
  let r, i = t;
  const u = {
    ok: !1,
    pos: 0,
    str: ""
  };
  if (e.charCodeAt(i) === 60) {
    for (i++; i < n; ) {
      if (r = e.charCodeAt(i), r === 10 || r === 60)
        return u;
      if (r === 62)
        return u.pos = i + 1, u.str = ri(e.slice(t + 1, i)), u.ok = !0, u;
      if (r === 92 && i + 1 < n) {
        i += 2;
        continue;
      }
      i++;
    }
    return u;
  }
  let s = 0;
  for (; i < n && (r = e.charCodeAt(i), !(r === 32 || r < 32 || r === 127)); ) {
    if (r === 92 && i + 1 < n) {
      if (e.charCodeAt(i + 1) === 32)
        break;
      i += 2;
      continue;
    }
    if (r === 40 && (s++, s > 32))
      return u;
    if (r === 41) {
      if (s === 0)
        break;
      s--;
    }
    i++;
  }
  return t === i || s !== 0 || (u.str = ri(e.slice(t, i)), u.pos = i, u.ok = !0), u;
}
function $2(e, t, n, r) {
  let i, u = t;
  const s = {
    // if `true`, this is a valid link title
    ok: !1,
    // if `true`, this link can be continued on the next line
    can_continue: !1,
    // if `ok`, it's the position of the first character after the closing marker
    pos: 0,
    // if `ok`, it's the unescaped title
    str: "",
    // expected closing marker character code
    marker: 0
  };
  if (r)
    s.str = r.str, s.marker = r.marker;
  else {
    if (u >= n)
      return s;
    let o = e.charCodeAt(u);
    if (o !== 34 && o !== 39 && o !== 40)
      return s;
    t++, u++, o === 40 && (o = 41), s.marker = o;
  }
  for (; u < n; ) {
    if (i = e.charCodeAt(u), i === s.marker)
      return s.pos = u + 1, s.str += ri(e.slice(t, u)), s.ok = !0, s;
    if (i === 40 && s.marker === 41)
      return s;
    i === 92 && u + 1 < n && u++, u++;
  }
  return s.can_continue = !0, s.str += ri(e.slice(t, u)), s;
}
const Z2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  parseLinkDestination: W2,
  parseLinkLabel: q2,
  parseLinkTitle: $2
}, Symbol.toStringTag, { value: "Module" })), Sn = {};
Sn.code_inline = function(e, t, n, r, i) {
  const u = e[t];
  return "<code" + i.renderAttrs(u) + ">" + ar(u.content) + "</code>";
};
Sn.code_block = function(e, t, n, r, i) {
  const u = e[t];
  return "<pre" + i.renderAttrs(u) + "><code>" + ar(e[t].content) + `</code></pre>
`;
};
Sn.fence = function(e, t, n, r, i) {
  const u = e[t], s = u.info ? ri(u.info).trim() : "";
  let o = "", a = "";
  if (s) {
    const l = s.split(/(\s+)/g);
    o = l[0], a = l.slice(2).join("");
  }
  let c;
  if (n.highlight ? c = n.highlight(u.content, o, a) || ar(u.content) : c = ar(u.content), c.indexOf("<pre") === 0)
    return c + `
`;
  if (s) {
    const l = u.attrIndex("class"), f = u.attrs ? u.attrs.slice() : [];
    l < 0 ? f.push(["class", n.langPrefix + o]) : (f[l] = f[l].slice(), f[l][1] += " " + n.langPrefix + o);
    const m = {
      attrs: f
    };
    return `<pre><code${i.renderAttrs(m)}>${c}</code></pre>
`;
  }
  return `<pre><code${i.renderAttrs(u)}>${c}</code></pre>
`;
};
Sn.image = function(e, t, n, r, i) {
  const u = e[t];
  return u.attrs[u.attrIndex("alt")][1] = i.renderInlineAsText(u.children, n, r), i.renderToken(e, t, n);
};
Sn.hardbreak = function(e, t, n) {
  return n.xhtmlOut ? `<br />
` : `<br>
`;
};
Sn.softbreak = function(e, t, n) {
  return n.breaks ? n.xhtmlOut ? `<br />
` : `<br>
` : `
`;
};
Sn.text = function(e, t) {
  return ar(e[t].content);
};
Sn.html_block = function(e, t) {
  return e[t].content;
};
Sn.html_inline = function(e, t) {
  return e[t].content;
};
function ci() {
  this.rules = Os({}, Sn);
}
ci.prototype.renderAttrs = function(t) {
  let n, r, i;
  if (!t.attrs)
    return "";
  for (i = "", n = 0, r = t.attrs.length; n < r; n++)
    i += " " + ar(t.attrs[n][0]) + '="' + ar(t.attrs[n][1]) + '"';
  return i;
};
ci.prototype.renderToken = function(t, n, r) {
  const i = t[n];
  let u = "";
  if (i.hidden)
    return "";
  i.block && i.nesting !== -1 && n && t[n - 1].hidden && (u += `
`), u += (i.nesting === -1 ? "</" : "<") + i.tag, u += this.renderAttrs(i), i.nesting === 0 && r.xhtmlOut && (u += " /");
  let s = !1;
  if (i.block && (s = !0, i.nesting === 1 && n + 1 < t.length)) {
    const o = t[n + 1];
    (o.type === "inline" || o.hidden || o.nesting === -1 && o.tag === i.tag) && (s = !1);
  }
  return u += s ? `>
` : ">", u;
};
ci.prototype.renderInline = function(e, t, n) {
  let r = "";
  const i = this.rules;
  for (let u = 0, s = e.length; u < s; u++) {
    const o = e[u].type;
    typeof i[o] < "u" ? r += i[o](e, u, t, n, this) : r += this.renderToken(e, u, t);
  }
  return r;
};
ci.prototype.renderInlineAsText = function(e, t, n) {
  let r = "";
  for (let i = 0, u = e.length; i < u; i++)
    switch (e[i].type) {
      case "text":
        r += e[i].content;
        break;
      case "image":
        r += this.renderInlineAsText(e[i].children, t, n);
        break;
      case "html_inline":
      case "html_block":
        r += e[i].content;
        break;
      case "softbreak":
      case "hardbreak":
        r += `
`;
        break;
    }
  return r;
};
ci.prototype.render = function(e, t, n) {
  let r = "";
  const i = this.rules;
  for (let u = 0, s = e.length; u < s; u++) {
    const o = e[u].type;
    o === "inline" ? r += this.renderInline(e[u].children, t, n) : typeof i[o] < "u" ? r += i[o](e, u, t, n, this) : r += this.renderToken(e, u, t, n);
  }
  return r;
};
function Vt() {
  this.__rules__ = [], this.__cache__ = null;
}
Vt.prototype.__find__ = function(e) {
  for (let t = 0; t < this.__rules__.length; t++)
    if (this.__rules__[t].name === e)
      return t;
  return -1;
};
Vt.prototype.__compile__ = function() {
  const e = this, t = [""];
  e.__rules__.forEach(function(n) {
    n.enabled && n.alt.forEach(function(r) {
      t.indexOf(r) < 0 && t.push(r);
    });
  }), e.__cache__ = {}, t.forEach(function(n) {
    e.__cache__[n] = [], e.__rules__.forEach(function(r) {
      r.enabled && (n && r.alt.indexOf(n) < 0 || e.__cache__[n].push(r.fn));
    });
  });
};
Vt.prototype.at = function(e, t, n) {
  const r = this.__find__(e), i = n || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + e);
  this.__rules__[r].fn = t, this.__rules__[r].alt = i.alt || [], this.__cache__ = null;
};
Vt.prototype.before = function(e, t, n, r) {
  const i = this.__find__(e), u = r || {};
  if (i === -1)
    throw new Error("Parser rule not found: " + e);
  this.__rules__.splice(i, 0, {
    name: t,
    enabled: !0,
    fn: n,
    alt: u.alt || []
  }), this.__cache__ = null;
};
Vt.prototype.after = function(e, t, n, r) {
  const i = this.__find__(e), u = r || {};
  if (i === -1)
    throw new Error("Parser rule not found: " + e);
  this.__rules__.splice(i + 1, 0, {
    name: t,
    enabled: !0,
    fn: n,
    alt: u.alt || []
  }), this.__cache__ = null;
};
Vt.prototype.push = function(e, t, n) {
  const r = n || {};
  this.__rules__.push({
    name: e,
    enabled: !0,
    fn: t,
    alt: r.alt || []
  }), this.__cache__ = null;
};
Vt.prototype.enable = function(e, t) {
  Array.isArray(e) || (e = [e]);
  const n = [];
  return e.forEach(function(r) {
    const i = this.__find__(r);
    if (i < 0) {
      if (t)
        return;
      throw new Error("Rules manager: invalid rule name " + r);
    }
    this.__rules__[i].enabled = !0, n.push(r);
  }, this), this.__cache__ = null, n;
};
Vt.prototype.enableOnly = function(e, t) {
  Array.isArray(e) || (e = [e]), this.__rules__.forEach(function(n) {
    n.enabled = !1;
  }), this.enable(e, t);
};
Vt.prototype.disable = function(e, t) {
  Array.isArray(e) || (e = [e]);
  const n = [];
  return e.forEach(function(r) {
    const i = this.__find__(r);
    if (i < 0) {
      if (t)
        return;
      throw new Error("Rules manager: invalid rule name " + r);
    }
    this.__rules__[i].enabled = !1, n.push(r);
  }, this), this.__cache__ = null, n;
};
Vt.prototype.getRules = function(e) {
  return this.__cache__ === null && this.__compile__(), this.__cache__[e] || [];
};
function pn(e, t, n) {
  this.type = e, this.tag = t, this.attrs = null, this.map = null, this.nesting = n, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = !1, this.hidden = !1;
}
pn.prototype.attrIndex = function(t) {
  if (!this.attrs)
    return -1;
  const n = this.attrs;
  for (let r = 0, i = n.length; r < i; r++)
    if (n[r][0] === t)
      return r;
  return -1;
};
pn.prototype.attrPush = function(t) {
  this.attrs ? this.attrs.push(t) : this.attrs = [t];
};
pn.prototype.attrSet = function(t, n) {
  const r = this.attrIndex(t), i = [t, n];
  r < 0 ? this.attrPush(i) : this.attrs[r] = i;
};
pn.prototype.attrGet = function(t) {
  const n = this.attrIndex(t);
  let r = null;
  return n >= 0 && (r = this.attrs[n][1]), r;
};
pn.prototype.attrJoin = function(t, n) {
  const r = this.attrIndex(t);
  r < 0 ? this.attrPush([t, n]) : this.attrs[r][1] = this.attrs[r][1] + " " + n;
};
function zd(e, t, n) {
  this.src = e, this.env = n, this.tokens = [], this.inlineMode = !1, this.md = t;
}
zd.prototype.Token = pn;
const G2 = /\r\n?|\n/g, Y2 = /\0/g;
function K2(e) {
  let t;
  t = e.src.replace(G2, `
`), t = t.replace(Y2, "�"), e.src = t;
}
function J2(e) {
  let t;
  e.inlineMode ? (t = new e.Token("inline", "", 0), t.content = e.src, t.map = [0, 1], t.children = [], e.tokens.push(t)) : e.md.block.parse(e.src, e.md, e.env, e.tokens);
}
function X2(e) {
  const t = e.tokens;
  for (let n = 0, r = t.length; n < r; n++) {
    const i = t[n];
    i.type === "inline" && e.md.inline.parse(i.content, e.md, e.env, i.children);
  }
}
function Q2(e) {
  return /^<a[>\s]/i.test(e);
}
function ey(e) {
  return /^<\/a\s*>/i.test(e);
}
function ty(e) {
  const t = e.tokens;
  if (e.md.options.linkify)
    for (let n = 0, r = t.length; n < r; n++) {
      if (t[n].type !== "inline" || !e.md.linkify.pretest(t[n].content))
        continue;
      let i = t[n].children, u = 0;
      for (let s = i.length - 1; s >= 0; s--) {
        const o = i[s];
        if (o.type === "link_close") {
          for (s--; i[s].level !== o.level && i[s].type !== "link_open"; )
            s--;
          continue;
        }
        if (o.type === "html_inline" && (Q2(o.content) && u > 0 && u--, ey(o.content) && u++), !(u > 0) && o.type === "text" && e.md.linkify.test(o.content)) {
          const a = o.content;
          let c = e.md.linkify.match(a);
          const l = [];
          let f = o.level, m = 0;
          c.length > 0 && c[0].index === 0 && s > 0 && i[s - 1].type === "text_special" && (c = c.slice(1));
          for (let p = 0; p < c.length; p++) {
            const h = c[p].url, E = e.md.normalizeLink(h);
            if (!e.md.validateLink(E))
              continue;
            let C = c[p].text;
            c[p].schema ? c[p].schema === "mailto:" && !/^mailto:/i.test(C) ? C = e.md.normalizeLinkText("mailto:" + C).replace(/^mailto:/, "") : C = e.md.normalizeLinkText(C) : C = e.md.normalizeLinkText("http://" + C).replace(/^http:\/\//, "");
            const L = c[p].index;
            if (L > m) {
              const S = new e.Token("text", "", 0);
              S.content = a.slice(m, L), S.level = f, l.push(S);
            }
            const T = new e.Token("link_open", "a", 1);
            T.attrs = [["href", E]], T.level = f++, T.markup = "linkify", T.info = "auto", l.push(T);
            const b = new e.Token("text", "", 0);
            b.content = C, b.level = f, l.push(b);
            const _ = new e.Token("link_close", "a", -1);
            _.level = --f, _.markup = "linkify", _.info = "auto", l.push(_), m = c[p].lastIndex;
          }
          if (m < a.length) {
            const p = new e.Token("text", "", 0);
            p.content = a.slice(m), p.level = f, l.push(p);
          }
          t[n].children = i = Id(i, s, l);
        }
      }
    }
}
const Pd = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, ny = /\((c|tm|r)\)/i, ry = /\((c|tm|r)\)/ig, iy = {
  c: "©",
  r: "®",
  tm: "™"
};
function uy(e, t) {
  return iy[t.toLowerCase()];
}
function sy(e) {
  let t = 0;
  for (let n = e.length - 1; n >= 0; n--) {
    const r = e[n];
    r.type === "text" && !t && (r.content = r.content.replace(ry, uy)), r.type === "link_open" && r.info === "auto" && t--, r.type === "link_close" && r.info === "auto" && t++;
  }
}
function oy(e) {
  let t = 0;
  for (let n = e.length - 1; n >= 0; n--) {
    const r = e[n];
    r.type === "text" && !t && Pd.test(r.content) && (r.content = r.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–")), r.type === "link_open" && r.info === "auto" && t--, r.type === "link_close" && r.info === "auto" && t++;
  }
}
function ay(e) {
  let t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type === "inline" && (ny.test(e.tokens[t].content) && sy(e.tokens[t].children), Pd.test(e.tokens[t].content) && oy(e.tokens[t].children));
}
const ly = /['"]/, cc = /['"]/g, fc = "’";
function xu(e, t, n) {
  return e.slice(0, t) + n + e.slice(t + 1);
}
function cy(e, t) {
  let n;
  const r = [];
  for (let i = 0; i < e.length; i++) {
    const u = e[i], s = e[i].level;
    for (n = r.length - 1; n >= 0 && !(r[n].level <= s); n--)
      ;
    if (r.length = n + 1, u.type !== "text")
      continue;
    let o = u.content, a = 0, c = o.length;
    e:
      for (; a < c; ) {
        cc.lastIndex = a;
        const l = cc.exec(o);
        if (!l)
          break;
        let f = !0, m = !0;
        a = l.index + 1;
        const p = l[0] === "'";
        let h = 32;
        if (l.index - 1 >= 0)
          h = o.charCodeAt(l.index - 1);
        else
          for (n = i - 1; n >= 0 && !(e[n].type === "softbreak" || e[n].type === "hardbreak"); n--)
            if (e[n].content) {
              h = e[n].content.charCodeAt(e[n].content.length - 1);
              break;
            }
        let E = 32;
        if (a < c)
          E = o.charCodeAt(a);
        else
          for (n = i + 1; n < e.length && !(e[n].type === "softbreak" || e[n].type === "hardbreak"); n++)
            if (e[n].content) {
              E = e[n].content.charCodeAt(0);
              break;
            }
        const C = Hi(h) || Vi(String.fromCharCode(h)), L = Hi(E) || Vi(String.fromCharCode(E)), T = Bi(h), b = Bi(E);
        if (b ? f = !1 : L && (T || C || (f = !1)), T ? m = !1 : C && (b || L || (m = !1)), E === 34 && l[0] === '"' && h >= 48 && h <= 57 && (m = f = !1), f && m && (f = C, m = L), !f && !m) {
          p && (u.content = xu(u.content, l.index, fc));
          continue;
        }
        if (m)
          for (n = r.length - 1; n >= 0; n--) {
            let _ = r[n];
            if (r[n].level < s)
              break;
            if (_.single === p && r[n].level === s) {
              _ = r[n];
              let S, F;
              p ? (S = t.md.options.quotes[2], F = t.md.options.quotes[3]) : (S = t.md.options.quotes[0], F = t.md.options.quotes[1]), u.content = xu(u.content, l.index, F), e[_.token].content = xu(
                e[_.token].content,
                _.pos,
                S
              ), a += F.length - 1, _.token === i && (a += S.length - 1), o = u.content, c = o.length, r.length = n;
              continue e;
            }
          }
        f ? r.push({
          token: i,
          pos: l.index,
          single: p,
          level: s
        }) : m && p && (u.content = xu(u.content, l.index, fc));
      }
  }
}
function fy(e) {
  if (e.md.options.typographer)
    for (let t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type !== "inline" || !ly.test(e.tokens[t].content) || cy(e.tokens[t].children, e);
}
function dy(e) {
  let t, n;
  const r = e.tokens, i = r.length;
  for (let u = 0; u < i; u++) {
    if (r[u].type !== "inline") continue;
    const s = r[u].children, o = s.length;
    for (t = 0; t < o; t++)
      s[t].type === "text_special" && (s[t].type = "text");
    for (t = n = 0; t < o; t++)
      s[t].type === "text" && t + 1 < o && s[t + 1].type === "text" ? s[t + 1].content = s[t].content + s[t + 1].content : (t !== n && (s[n] = s[t]), n++);
    t !== n && (s.length = n);
  }
}
const fo = [
  ["normalize", K2],
  ["block", J2],
  ["inline", X2],
  ["linkify", ty],
  ["replacements", ay],
  ["smartquotes", fy],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", dy]
];
function Ia() {
  this.ruler = new Vt();
  for (let e = 0; e < fo.length; e++)
    this.ruler.push(fo[e][0], fo[e][1]);
}
Ia.prototype.process = function(e) {
  const t = this.ruler.getRules("");
  for (let n = 0, r = t.length; n < r; n++)
    t[n](e);
};
Ia.prototype.State = zd;
function Tn(e, t, n, r) {
  this.src = e, this.md = t, this.env = n, this.tokens = r, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0;
  const i = this.src;
  for (let u = 0, s = 0, o = 0, a = 0, c = i.length, l = !1; s < c; s++) {
    const f = i.charCodeAt(s);
    if (!l)
      if (Ge(f)) {
        o++, f === 9 ? a += 4 - a % 4 : a++;
        continue;
      } else
        l = !0;
    (f === 10 || s === c - 1) && (f !== 10 && s++, this.bMarks.push(u), this.eMarks.push(s), this.tShift.push(o), this.sCount.push(a), this.bsCount.push(0), l = !1, o = 0, a = 0, u = s + 1);
  }
  this.bMarks.push(i.length), this.eMarks.push(i.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
}
Tn.prototype.push = function(e, t, n) {
  const r = new pn(e, t, n);
  return r.block = !0, n < 0 && this.level--, r.level = this.level, n > 0 && this.level++, this.tokens.push(r), r;
};
Tn.prototype.isEmpty = function(t) {
  return this.bMarks[t] + this.tShift[t] >= this.eMarks[t];
};
Tn.prototype.skipEmptyLines = function(t) {
  for (let n = this.lineMax; t < n && !(this.bMarks[t] + this.tShift[t] < this.eMarks[t]); t++)
    ;
  return t;
};
Tn.prototype.skipSpaces = function(t) {
  for (let n = this.src.length; t < n; t++) {
    const r = this.src.charCodeAt(t);
    if (!Ge(r))
      break;
  }
  return t;
};
Tn.prototype.skipSpacesBack = function(t, n) {
  if (t <= n)
    return t;
  for (; t > n; )
    if (!Ge(this.src.charCodeAt(--t)))
      return t + 1;
  return t;
};
Tn.prototype.skipChars = function(t, n) {
  for (let r = this.src.length; t < r && this.src.charCodeAt(t) === n; t++)
    ;
  return t;
};
Tn.prototype.skipCharsBack = function(t, n, r) {
  if (t <= r)
    return t;
  for (; t > r; )
    if (n !== this.src.charCodeAt(--t))
      return t + 1;
  return t;
};
Tn.prototype.getLines = function(t, n, r, i) {
  if (t >= n)
    return "";
  const u = new Array(n - t);
  for (let s = 0, o = t; o < n; o++, s++) {
    let a = 0;
    const c = this.bMarks[o];
    let l = c, f;
    for (o + 1 < n || i ? f = this.eMarks[o] + 1 : f = this.eMarks[o]; l < f && a < r; ) {
      const m = this.src.charCodeAt(l);
      if (Ge(m))
        m === 9 ? a += 4 - (a + this.bsCount[o]) % 4 : a++;
      else if (l - c < this.tShift[o])
        a++;
      else
        break;
      l++;
    }
    a > r ? u[s] = new Array(a - r + 1).join(" ") + this.src.slice(l, f) : u[s] = this.src.slice(l, f);
  }
  return u.join("");
};
Tn.prototype.Token = pn;
const hy = 65536;
function ho(e, t) {
  const n = e.bMarks[t] + e.tShift[t], r = e.eMarks[t];
  return e.src.slice(n, r);
}
function dc(e) {
  const t = [], n = e.length;
  let r = 0, i = e.charCodeAt(r), u = !1, s = 0, o = "";
  for (; r < n; )
    i === 124 && (u ? (o += e.substring(s, r - 1), s = r) : (t.push(o + e.substring(s, r)), o = "", s = r + 1)), u = i === 92, r++, i = e.charCodeAt(r);
  return t.push(o + e.substring(s)), t;
}
function py(e, t, n, r) {
  if (t + 2 > n)
    return !1;
  let i = t + 1;
  if (e.sCount[i] < e.blkIndent || e.sCount[i] - e.blkIndent >= 4)
    return !1;
  let u = e.bMarks[i] + e.tShift[i];
  if (u >= e.eMarks[i])
    return !1;
  const s = e.src.charCodeAt(u++);
  if (s !== 124 && s !== 45 && s !== 58 || u >= e.eMarks[i])
    return !1;
  const o = e.src.charCodeAt(u++);
  if (o !== 124 && o !== 45 && o !== 58 && !Ge(o) || s === 45 && Ge(o))
    return !1;
  for (; u < e.eMarks[i]; ) {
    const _ = e.src.charCodeAt(u);
    if (_ !== 124 && _ !== 45 && _ !== 58 && !Ge(_))
      return !1;
    u++;
  }
  let a = ho(e, t + 1), c = a.split("|");
  const l = [];
  for (let _ = 0; _ < c.length; _++) {
    const S = c[_].trim();
    if (!S) {
      if (_ === 0 || _ === c.length - 1)
        continue;
      return !1;
    }
    if (!/^:?-+:?$/.test(S))
      return !1;
    S.charCodeAt(S.length - 1) === 58 ? l.push(S.charCodeAt(0) === 58 ? "center" : "right") : S.charCodeAt(0) === 58 ? l.push("left") : l.push("");
  }
  if (a = ho(e, t).trim(), a.indexOf("|") === -1 || e.sCount[t] - e.blkIndent >= 4)
    return !1;
  c = dc(a), c.length && c[0] === "" && c.shift(), c.length && c[c.length - 1] === "" && c.pop();
  const f = c.length;
  if (f === 0 || f !== l.length)
    return !1;
  if (r)
    return !0;
  const m = e.parentType;
  e.parentType = "table";
  const p = e.md.block.ruler.getRules("blockquote"), h = e.push("table_open", "table", 1), E = [t, 0];
  h.map = E;
  const C = e.push("thead_open", "thead", 1);
  C.map = [t, t + 1];
  const L = e.push("tr_open", "tr", 1);
  L.map = [t, t + 1];
  for (let _ = 0; _ < c.length; _++) {
    const S = e.push("th_open", "th", 1);
    l[_] && (S.attrs = [["style", "text-align:" + l[_]]]);
    const F = e.push("inline", "", 0);
    F.content = c[_].trim(), F.children = [], e.push("th_close", "th", -1);
  }
  e.push("tr_close", "tr", -1), e.push("thead_close", "thead", -1);
  let T, b = 0;
  for (i = t + 2; i < n && !(e.sCount[i] < e.blkIndent); i++) {
    let _ = !1;
    for (let F = 0, W = p.length; F < W; F++)
      if (p[F](e, i, n, !0)) {
        _ = !0;
        break;
      }
    if (_ || (a = ho(e, i).trim(), !a) || e.sCount[i] - e.blkIndent >= 4 || (c = dc(a), c.length && c[0] === "" && c.shift(), c.length && c[c.length - 1] === "" && c.pop(), b += f - c.length, b > hy))
      break;
    if (i === t + 2) {
      const F = e.push("tbody_open", "tbody", 1);
      F.map = T = [t + 2, 0];
    }
    const S = e.push("tr_open", "tr", 1);
    S.map = [i, i + 1];
    for (let F = 0; F < f; F++) {
      const W = e.push("td_open", "td", 1);
      l[F] && (W.attrs = [["style", "text-align:" + l[F]]]);
      const Q = e.push("inline", "", 0);
      Q.content = c[F] ? c[F].trim() : "", Q.children = [], e.push("td_close", "td", -1);
    }
    e.push("tr_close", "tr", -1);
  }
  return T && (e.push("tbody_close", "tbody", -1), T[1] = i), e.push("table_close", "table", -1), E[1] = i, e.parentType = m, e.line = i, !0;
}
function my(e, t, n) {
  if (e.sCount[t] - e.blkIndent < 4)
    return !1;
  let r = t + 1, i = r;
  for (; r < n; ) {
    if (e.isEmpty(r)) {
      r++;
      continue;
    }
    if (e.sCount[r] - e.blkIndent >= 4) {
      r++, i = r;
      continue;
    }
    break;
  }
  e.line = i;
  const u = e.push("code_block", "code", 0);
  return u.content = e.getLines(t, i, 4 + e.blkIndent, !1) + `
`, u.map = [t, e.line], !0;
}
function by(e, t, n, r) {
  let i = e.bMarks[t] + e.tShift[t], u = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || i + 3 > u)
    return !1;
  const s = e.src.charCodeAt(i);
  if (s !== 126 && s !== 96)
    return !1;
  let o = i;
  i = e.skipChars(i, s);
  let a = i - o;
  if (a < 3)
    return !1;
  const c = e.src.slice(o, i), l = e.src.slice(i, u);
  if (s === 96 && l.indexOf(String.fromCharCode(s)) >= 0)
    return !1;
  if (r)
    return !0;
  let f = t, m = !1;
  for (; f++, !(f >= n || (i = o = e.bMarks[f] + e.tShift[f], u = e.eMarks[f], i < u && e.sCount[f] < e.blkIndent)); )
    if (e.src.charCodeAt(i) === s && !(e.sCount[f] - e.blkIndent >= 4) && (i = e.skipChars(i, s), !(i - o < a) && (i = e.skipSpaces(i), !(i < u)))) {
      m = !0;
      break;
    }
  a = e.sCount[t], e.line = f + (m ? 1 : 0);
  const p = e.push("fence", "code", 0);
  return p.info = l, p.content = e.getLines(t + 1, f, a, !0), p.markup = c, p.map = [t, e.line], !0;
}
function gy(e, t, n, r) {
  let i = e.bMarks[t] + e.tShift[t], u = e.eMarks[t];
  const s = e.lineMax;
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(i) !== 62)
    return !1;
  if (r)
    return !0;
  const o = [], a = [], c = [], l = [], f = e.md.block.ruler.getRules("blockquote"), m = e.parentType;
  e.parentType = "blockquote";
  let p = !1, h;
  for (h = t; h < n; h++) {
    const b = e.sCount[h] < e.blkIndent;
    if (i = e.bMarks[h] + e.tShift[h], u = e.eMarks[h], i >= u)
      break;
    if (e.src.charCodeAt(i++) === 62 && !b) {
      let S = e.sCount[h] + 1, F, W;
      e.src.charCodeAt(i) === 32 ? (i++, S++, W = !1, F = !0) : e.src.charCodeAt(i) === 9 ? (F = !0, (e.bsCount[h] + S) % 4 === 3 ? (i++, S++, W = !1) : W = !0) : F = !1;
      let Q = S;
      for (o.push(e.bMarks[h]), e.bMarks[h] = i; i < u; ) {
        const R = e.src.charCodeAt(i);
        if (Ge(R))
          R === 9 ? Q += 4 - (Q + e.bsCount[h] + (W ? 1 : 0)) % 4 : Q++;
        else
          break;
        i++;
      }
      p = i >= u, a.push(e.bsCount[h]), e.bsCount[h] = e.sCount[h] + 1 + (F ? 1 : 0), c.push(e.sCount[h]), e.sCount[h] = Q - S, l.push(e.tShift[h]), e.tShift[h] = i - e.bMarks[h];
      continue;
    }
    if (p)
      break;
    let _ = !1;
    for (let S = 0, F = f.length; S < F; S++)
      if (f[S](e, h, n, !0)) {
        _ = !0;
        break;
      }
    if (_) {
      e.lineMax = h, e.blkIndent !== 0 && (o.push(e.bMarks[h]), a.push(e.bsCount[h]), l.push(e.tShift[h]), c.push(e.sCount[h]), e.sCount[h] -= e.blkIndent);
      break;
    }
    o.push(e.bMarks[h]), a.push(e.bsCount[h]), l.push(e.tShift[h]), c.push(e.sCount[h]), e.sCount[h] = -1;
  }
  const E = e.blkIndent;
  e.blkIndent = 0;
  const C = e.push("blockquote_open", "blockquote", 1);
  C.markup = ">";
  const L = [t, 0];
  C.map = L, e.md.block.tokenize(e, t, h);
  const T = e.push("blockquote_close", "blockquote", -1);
  T.markup = ">", e.lineMax = s, e.parentType = m, L[1] = e.line;
  for (let b = 0; b < l.length; b++)
    e.bMarks[b + t] = o[b], e.tShift[b + t] = l[b], e.sCount[b + t] = c[b], e.bsCount[b + t] = a[b];
  return e.blkIndent = E, !0;
}
function yy(e, t, n, r) {
  const i = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  let u = e.bMarks[t] + e.tShift[t];
  const s = e.src.charCodeAt(u++);
  if (s !== 42 && s !== 45 && s !== 95)
    return !1;
  let o = 1;
  for (; u < i; ) {
    const c = e.src.charCodeAt(u++);
    if (c !== s && !Ge(c))
      return !1;
    c === s && o++;
  }
  if (o < 3)
    return !1;
  if (r)
    return !0;
  e.line = t + 1;
  const a = e.push("hr", "hr", 0);
  return a.map = [t, e.line], a.markup = Array(o + 1).join(String.fromCharCode(s)), !0;
}
function hc(e, t) {
  const n = e.eMarks[t];
  let r = e.bMarks[t] + e.tShift[t];
  const i = e.src.charCodeAt(r++);
  if (i !== 42 && i !== 45 && i !== 43)
    return -1;
  if (r < n) {
    const u = e.src.charCodeAt(r);
    if (!Ge(u))
      return -1;
  }
  return r;
}
function pc(e, t) {
  const n = e.bMarks[t] + e.tShift[t], r = e.eMarks[t];
  let i = n;
  if (i + 1 >= r)
    return -1;
  let u = e.src.charCodeAt(i++);
  if (u < 48 || u > 57)
    return -1;
  for (; ; ) {
    if (i >= r)
      return -1;
    if (u = e.src.charCodeAt(i++), u >= 48 && u <= 57) {
      if (i - n >= 10)
        return -1;
      continue;
    }
    if (u === 41 || u === 46)
      break;
    return -1;
  }
  return i < r && (u = e.src.charCodeAt(i), !Ge(u)) ? -1 : i;
}
function _y(e, t) {
  const n = e.level + 2;
  for (let r = t + 2, i = e.tokens.length - 2; r < i; r++)
    e.tokens[r].level === n && e.tokens[r].type === "paragraph_open" && (e.tokens[r + 2].hidden = !0, e.tokens[r].hidden = !0, r += 2);
}
function xy(e, t, n, r) {
  let i, u, s, o, a = t, c = !0;
  if (e.sCount[a] - e.blkIndent >= 4 || e.listIndent >= 0 && e.sCount[a] - e.listIndent >= 4 && e.sCount[a] < e.blkIndent)
    return !1;
  let l = !1;
  r && e.parentType === "paragraph" && e.sCount[a] >= e.blkIndent && (l = !0);
  let f, m, p;
  if ((p = pc(e, a)) >= 0) {
    if (f = !0, s = e.bMarks[a] + e.tShift[a], m = Number(e.src.slice(s, p - 1)), l && m !== 1) return !1;
  } else if ((p = hc(e, a)) >= 0)
    f = !1;
  else
    return !1;
  if (l && e.skipSpaces(p) >= e.eMarks[a])
    return !1;
  if (r)
    return !0;
  const h = e.src.charCodeAt(p - 1), E = e.tokens.length;
  f ? (o = e.push("ordered_list_open", "ol", 1), m !== 1 && (o.attrs = [["start", m]])) : o = e.push("bullet_list_open", "ul", 1);
  const C = [a, 0];
  o.map = C, o.markup = String.fromCharCode(h);
  let L = !1;
  const T = e.md.block.ruler.getRules("list"), b = e.parentType;
  for (e.parentType = "list"; a < n; ) {
    u = p, i = e.eMarks[a];
    const _ = e.sCount[a] + p - (e.bMarks[a] + e.tShift[a]);
    let S = _;
    for (; u < i; ) {
      const be = e.src.charCodeAt(u);
      if (be === 9)
        S += 4 - (S + e.bsCount[a]) % 4;
      else if (be === 32)
        S++;
      else
        break;
      u++;
    }
    const F = u;
    let W;
    F >= i ? W = 1 : W = S - _, W > 4 && (W = 1);
    const Q = _ + W;
    o = e.push("list_item_open", "li", 1), o.markup = String.fromCharCode(h);
    const R = [a, 0];
    o.map = R, f && (o.info = e.src.slice(s, p - 1));
    const j = e.tight, ae = e.tShift[a], Y = e.sCount[a], he = e.listIndent;
    if (e.listIndent = e.blkIndent, e.blkIndent = Q, e.tight = !0, e.tShift[a] = F - e.bMarks[a], e.sCount[a] = S, F >= i && e.isEmpty(a + 1) ? e.line = Math.min(e.line + 2, n) : e.md.block.tokenize(e, a, n, !0), (!e.tight || L) && (c = !1), L = e.line - a > 1 && e.isEmpty(e.line - 1), e.blkIndent = e.listIndent, e.listIndent = he, e.tShift[a] = ae, e.sCount[a] = Y, e.tight = j, o = e.push("list_item_close", "li", -1), o.markup = String.fromCharCode(h), a = e.line, R[1] = a, a >= n || e.sCount[a] < e.blkIndent || e.sCount[a] - e.blkIndent >= 4)
      break;
    let we = !1;
    for (let be = 0, ie = T.length; be < ie; be++)
      if (T[be](e, a, n, !0)) {
        we = !0;
        break;
      }
    if (we)
      break;
    if (f) {
      if (p = pc(e, a), p < 0)
        break;
      s = e.bMarks[a] + e.tShift[a];
    } else if (p = hc(e, a), p < 0)
      break;
    if (h !== e.src.charCodeAt(p - 1))
      break;
  }
  return f ? o = e.push("ordered_list_close", "ol", -1) : o = e.push("bullet_list_close", "ul", -1), o.markup = String.fromCharCode(h), C[1] = a, e.line = a, e.parentType = b, c && _y(e, E), !0;
}
function vy(e, t, n, r) {
  let i = e.bMarks[t] + e.tShift[t], u = e.eMarks[t], s = t + 1;
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(i) !== 91)
    return !1;
  function o(T) {
    const b = e.lineMax;
    if (T >= b || e.isEmpty(T))
      return null;
    let _ = !1;
    if (e.sCount[T] - e.blkIndent > 3 && (_ = !0), e.sCount[T] < 0 && (_ = !0), !_) {
      const W = e.md.block.ruler.getRules("reference"), Q = e.parentType;
      e.parentType = "reference";
      let R = !1;
      for (let j = 0, ae = W.length; j < ae; j++)
        if (W[j](e, T, b, !0)) {
          R = !0;
          break;
        }
      if (e.parentType = Q, R)
        return null;
    }
    const S = e.bMarks[T] + e.tShift[T], F = e.eMarks[T];
    return e.src.slice(S, F + 1);
  }
  let a = e.src.slice(i, u + 1);
  u = a.length;
  let c = -1;
  for (i = 1; i < u; i++) {
    const T = a.charCodeAt(i);
    if (T === 91)
      return !1;
    if (T === 93) {
      c = i;
      break;
    } else if (T === 10) {
      const b = o(s);
      b !== null && (a += b, u = a.length, s++);
    } else if (T === 92 && (i++, i < u && a.charCodeAt(i) === 10)) {
      const b = o(s);
      b !== null && (a += b, u = a.length, s++);
    }
  }
  if (c < 0 || a.charCodeAt(c + 1) !== 58)
    return !1;
  for (i = c + 2; i < u; i++) {
    const T = a.charCodeAt(i);
    if (T === 10) {
      const b = o(s);
      b !== null && (a += b, u = a.length, s++);
    } else if (!Ge(T)) break;
  }
  const l = e.md.helpers.parseLinkDestination(a, i, u);
  if (!l.ok)
    return !1;
  const f = e.md.normalizeLink(l.str);
  if (!e.md.validateLink(f))
    return !1;
  i = l.pos;
  const m = i, p = s, h = i;
  for (; i < u; i++) {
    const T = a.charCodeAt(i);
    if (T === 10) {
      const b = o(s);
      b !== null && (a += b, u = a.length, s++);
    } else if (!Ge(T)) break;
  }
  let E = e.md.helpers.parseLinkTitle(a, i, u);
  for (; E.can_continue; ) {
    const T = o(s);
    if (T === null) break;
    a += T, i = u, u = a.length, s++, E = e.md.helpers.parseLinkTitle(a, i, u, E);
  }
  let C;
  for (i < u && h !== i && E.ok ? (C = E.str, i = E.pos) : (C = "", i = m, s = p); i < u; ) {
    const T = a.charCodeAt(i);
    if (!Ge(T))
      break;
    i++;
  }
  if (i < u && a.charCodeAt(i) !== 10 && C)
    for (C = "", i = m, s = p; i < u; ) {
      const T = a.charCodeAt(i);
      if (!Ge(T))
        break;
      i++;
    }
  if (i < u && a.charCodeAt(i) !== 10)
    return !1;
  const L = Ds(a.slice(1, c));
  return L ? (r || (typeof e.env.references > "u" && (e.env.references = {}), typeof e.env.references[L] > "u" && (e.env.references[L] = { title: C, href: f }), e.line = s), !0) : !1;
}
const ky = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "search",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], wy = "[a-zA-Z_:][a-zA-Z0-9:._-]*", Ey = "[^\"'=<>`\\x00-\\x20]+", Cy = "'[^']*'", Sy = '"[^"]*"', Ty = "(?:" + Ey + "|" + Cy + "|" + Sy + ")", Oy = "(?:\\s+" + wy + "(?:\\s*=\\s*" + Ty + ")?)", Rd = "<[A-Za-z][A-Za-z0-9\\-]*" + Oy + "*\\s*\\/?>", jd = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", Dy = "<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->", Ay = "<[?][\\s\\S]*?[?]>", Fy = "<![A-Za-z][^>]*>", My = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>", Ny = new RegExp("^(?:" + Rd + "|" + jd + "|" + Dy + "|" + Ay + "|" + Fy + "|" + My + ")"), Iy = new RegExp("^(?:" + Rd + "|" + jd + ")"), Ir = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0],
  [/^<!--/, /-->/, !0],
  [/^<\?/, /\?>/, !0],
  [/^<![A-Z]/, />/, !0],
  [/^<!\[CDATA\[/, /\]\]>/, !0],
  [new RegExp("^</?(" + ky.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0],
  [new RegExp(Iy.source + "\\s*$"), /^$/, !1]
];
function Ly(e, t, n, r) {
  let i = e.bMarks[t] + e.tShift[t], u = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || !e.md.options.html || e.src.charCodeAt(i) !== 60)
    return !1;
  let s = e.src.slice(i, u), o = 0;
  for (; o < Ir.length && !Ir[o][0].test(s); o++)
    ;
  if (o === Ir.length)
    return !1;
  if (r)
    return Ir[o][2];
  let a = t + 1;
  if (!Ir[o][1].test(s)) {
    for (; a < n && !(e.sCount[a] < e.blkIndent); a++)
      if (i = e.bMarks[a] + e.tShift[a], u = e.eMarks[a], s = e.src.slice(i, u), Ir[o][1].test(s)) {
        s.length !== 0 && a++;
        break;
      }
  }
  e.line = a;
  const c = e.push("html_block", "", 0);
  return c.map = [t, a], c.content = e.getLines(t, a, e.blkIndent, !0), !0;
}
function zy(e, t, n, r) {
  let i = e.bMarks[t] + e.tShift[t], u = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  let s = e.src.charCodeAt(i);
  if (s !== 35 || i >= u)
    return !1;
  let o = 1;
  for (s = e.src.charCodeAt(++i); s === 35 && i < u && o <= 6; )
    o++, s = e.src.charCodeAt(++i);
  if (o > 6 || i < u && !Ge(s))
    return !1;
  if (r)
    return !0;
  u = e.skipSpacesBack(u, i);
  const a = e.skipCharsBack(u, 35, i);
  a > i && Ge(e.src.charCodeAt(a - 1)) && (u = a), e.line = t + 1;
  const c = e.push("heading_open", "h" + String(o), 1);
  c.markup = "########".slice(0, o), c.map = [t, e.line];
  const l = e.push("inline", "", 0);
  l.content = e.src.slice(i, u).trim(), l.map = [t, e.line], l.children = [];
  const f = e.push("heading_close", "h" + String(o), -1);
  return f.markup = "########".slice(0, o), !0;
}
function Py(e, t, n) {
  const r = e.md.block.ruler.getRules("paragraph");
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  const i = e.parentType;
  e.parentType = "paragraph";
  let u = 0, s, o = t + 1;
  for (; o < n && !e.isEmpty(o); o++) {
    if (e.sCount[o] - e.blkIndent > 3)
      continue;
    if (e.sCount[o] >= e.blkIndent) {
      let p = e.bMarks[o] + e.tShift[o];
      const h = e.eMarks[o];
      if (p < h && (s = e.src.charCodeAt(p), (s === 45 || s === 61) && (p = e.skipChars(p, s), p = e.skipSpaces(p), p >= h))) {
        u = s === 61 ? 1 : 2;
        break;
      }
    }
    if (e.sCount[o] < 0)
      continue;
    let m = !1;
    for (let p = 0, h = r.length; p < h; p++)
      if (r[p](e, o, n, !0)) {
        m = !0;
        break;
      }
    if (m)
      break;
  }
  if (!u)
    return !1;
  const a = e.getLines(t, o, e.blkIndent, !1).trim();
  e.line = o + 1;
  const c = e.push("heading_open", "h" + String(u), 1);
  c.markup = String.fromCharCode(s), c.map = [t, e.line];
  const l = e.push("inline", "", 0);
  l.content = a, l.map = [t, e.line - 1], l.children = [];
  const f = e.push("heading_close", "h" + String(u), -1);
  return f.markup = String.fromCharCode(s), e.parentType = i, !0;
}
function Ry(e, t, n) {
  const r = e.md.block.ruler.getRules("paragraph"), i = e.parentType;
  let u = t + 1;
  for (e.parentType = "paragraph"; u < n && !e.isEmpty(u); u++) {
    if (e.sCount[u] - e.blkIndent > 3 || e.sCount[u] < 0)
      continue;
    let c = !1;
    for (let l = 0, f = r.length; l < f; l++)
      if (r[l](e, u, n, !0)) {
        c = !0;
        break;
      }
    if (c)
      break;
  }
  const s = e.getLines(t, u, e.blkIndent, !1).trim();
  e.line = u;
  const o = e.push("paragraph_open", "p", 1);
  o.map = [t, e.line];
  const a = e.push("inline", "", 0);
  return a.content = s, a.map = [t, e.line], a.children = [], e.push("paragraph_close", "p", -1), e.parentType = i, !0;
}
const vu = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", py, ["paragraph", "reference"]],
  ["code", my],
  ["fence", by, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", gy, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", yy, ["paragraph", "reference", "blockquote", "list"]],
  ["list", xy, ["paragraph", "reference", "blockquote"]],
  ["reference", vy],
  ["html_block", Ly, ["paragraph", "reference", "blockquote"]],
  ["heading", zy, ["paragraph", "reference", "blockquote"]],
  ["lheading", Py],
  ["paragraph", Ry]
];
function As() {
  this.ruler = new Vt();
  for (let e = 0; e < vu.length; e++)
    this.ruler.push(vu[e][0], vu[e][1], { alt: (vu[e][2] || []).slice() });
}
As.prototype.tokenize = function(e, t, n) {
  const r = this.ruler.getRules(""), i = r.length, u = e.md.options.maxNesting;
  let s = t, o = !1;
  for (; s < n && (e.line = s = e.skipEmptyLines(s), !(s >= n || e.sCount[s] < e.blkIndent)); ) {
    if (e.level >= u) {
      e.line = n;
      break;
    }
    const a = e.line;
    let c = !1;
    for (let l = 0; l < i; l++)
      if (c = r[l](e, s, n, !1), c) {
        if (a >= e.line)
          throw new Error("block rule didn't increment state.line");
        break;
      }
    if (!c) throw new Error("none of the block rules matched");
    e.tight = !o, e.isEmpty(e.line - 1) && (o = !0), s = e.line, s < n && e.isEmpty(s) && (o = !0, s++, e.line = s);
  }
};
As.prototype.parse = function(e, t, n, r) {
  if (!e)
    return;
  const i = new this.State(e, t, n, r);
  this.tokenize(i, i.line, i.lineMax);
};
As.prototype.State = Tn;
function tu(e, t, n, r) {
  this.src = e, this.env = n, this.md = t, this.tokens = r, this.tokens_meta = Array(r.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = !1, this.linkLevel = 0;
}
tu.prototype.pushPending = function() {
  const e = new pn("text", "", 0);
  return e.content = this.pending, e.level = this.pendingLevel, this.tokens.push(e), this.pending = "", e;
};
tu.prototype.push = function(e, t, n) {
  this.pending && this.pushPending();
  const r = new pn(e, t, n);
  let i = null;
  return n < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), r.level = this.level, n > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], i = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(r), this.tokens_meta.push(i), r;
};
tu.prototype.scanDelims = function(e, t) {
  const n = this.posMax, r = this.src.charCodeAt(e), i = e > 0 ? this.src.charCodeAt(e - 1) : 32;
  let u = e;
  for (; u < n && this.src.charCodeAt(u) === r; )
    u++;
  const s = u - e, o = u < n ? this.src.charCodeAt(u) : 32, a = Hi(i) || Vi(String.fromCharCode(i)), c = Hi(o) || Vi(String.fromCharCode(o)), l = Bi(i), f = Bi(o), m = !f && (!c || l || a), p = !l && (!a || f || c);
  return { can_open: m && (t || !p || a), can_close: p && (t || !m || c), length: s };
};
tu.prototype.Token = pn;
function jy(e) {
  switch (e) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
function By(e, t) {
  let n = e.pos;
  for (; n < e.posMax && !jy(e.src.charCodeAt(n)); )
    n++;
  return n === e.pos ? !1 : (t || (e.pending += e.src.slice(e.pos, n)), e.pos = n, !0);
}
const Vy = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;
function Hy(e, t) {
  if (!e.md.options.linkify || e.linkLevel > 0) return !1;
  const n = e.pos, r = e.posMax;
  if (n + 3 > r || e.src.charCodeAt(n) !== 58 || e.src.charCodeAt(n + 1) !== 47 || e.src.charCodeAt(n + 2) !== 47) return !1;
  const i = e.pending.match(Vy);
  if (!i) return !1;
  const u = i[1], s = e.md.linkify.matchAtStart(e.src.slice(n - u.length));
  if (!s) return !1;
  let o = s.url;
  if (o.length <= u.length) return !1;
  o = o.replace(/\*+$/, "");
  const a = e.md.normalizeLink(o);
  if (!e.md.validateLink(a)) return !1;
  if (!t) {
    e.pending = e.pending.slice(0, -u.length);
    const c = e.push("link_open", "a", 1);
    c.attrs = [["href", a]], c.markup = "linkify", c.info = "auto";
    const l = e.push("text", "", 0);
    l.content = e.md.normalizeLinkText(o);
    const f = e.push("link_close", "a", -1);
    f.markup = "linkify", f.info = "auto";
  }
  return e.pos += o.length - u.length, !0;
}
function Uy(e, t) {
  let n = e.pos;
  if (e.src.charCodeAt(n) !== 10)
    return !1;
  const r = e.pending.length - 1, i = e.posMax;
  if (!t)
    if (r >= 0 && e.pending.charCodeAt(r) === 32)
      if (r >= 1 && e.pending.charCodeAt(r - 1) === 32) {
        let u = r - 1;
        for (; u >= 1 && e.pending.charCodeAt(u - 1) === 32; ) u--;
        e.pending = e.pending.slice(0, u), e.push("hardbreak", "br", 0);
      } else
        e.pending = e.pending.slice(0, -1), e.push("softbreak", "br", 0);
    else
      e.push("softbreak", "br", 0);
  for (n++; n < i && Ge(e.src.charCodeAt(n)); )
    n++;
  return e.pos = n, !0;
}
const La = [];
for (let e = 0; e < 256; e++)
  La.push(0);
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(e) {
  La[e.charCodeAt(0)] = 1;
});
function qy(e, t) {
  let n = e.pos;
  const r = e.posMax;
  if (e.src.charCodeAt(n) !== 92 || (n++, n >= r)) return !1;
  let i = e.src.charCodeAt(n);
  if (i === 10) {
    for (t || e.push("hardbreak", "br", 0), n++; n < r && (i = e.src.charCodeAt(n), !!Ge(i)); )
      n++;
    return e.pos = n, !0;
  }
  let u = e.src[n];
  if (i >= 55296 && i <= 56319 && n + 1 < r) {
    const o = e.src.charCodeAt(n + 1);
    o >= 56320 && o <= 57343 && (u += e.src[n + 1], n++);
  }
  const s = "\\" + u;
  if (!t) {
    const o = e.push("text_special", "", 0);
    i < 256 && La[i] !== 0 ? o.content = u : o.content = s, o.markup = s, o.info = "escape";
  }
  return e.pos = n + 1, !0;
}
function Wy(e, t) {
  let n = e.pos;
  if (e.src.charCodeAt(n) !== 96)
    return !1;
  const i = n;
  n++;
  const u = e.posMax;
  for (; n < u && e.src.charCodeAt(n) === 96; )
    n++;
  const s = e.src.slice(i, n), o = s.length;
  if (e.backticksScanned && (e.backticks[o] || 0) <= i)
    return t || (e.pending += s), e.pos += o, !0;
  let a = n, c;
  for (; (c = e.src.indexOf("`", a)) !== -1; ) {
    for (a = c + 1; a < u && e.src.charCodeAt(a) === 96; )
      a++;
    const l = a - c;
    if (l === o) {
      if (!t) {
        const f = e.push("code_inline", "code", 0);
        f.markup = s, f.content = e.src.slice(n, c).replace(/\n/g, " ").replace(/^ (.+) $/, "$1");
      }
      return e.pos = a, !0;
    }
    e.backticks[l] = c;
  }
  return e.backticksScanned = !0, t || (e.pending += s), e.pos += o, !0;
}
function $y(e, t) {
  const n = e.pos, r = e.src.charCodeAt(n);
  if (t || r !== 126)
    return !1;
  const i = e.scanDelims(e.pos, !0);
  let u = i.length;
  const s = String.fromCharCode(r);
  if (u < 2)
    return !1;
  let o;
  u % 2 && (o = e.push("text", "", 0), o.content = s, u--);
  for (let a = 0; a < u; a += 2)
    o = e.push("text", "", 0), o.content = s + s, e.delimiters.push({
      marker: r,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: e.tokens.length - 1,
      end: -1,
      open: i.can_open,
      close: i.can_close
    });
  return e.pos += i.length, !0;
}
function mc(e, t) {
  let n;
  const r = [], i = t.length;
  for (let u = 0; u < i; u++) {
    const s = t[u];
    if (s.marker !== 126 || s.end === -1)
      continue;
    const o = t[s.end];
    n = e.tokens[s.token], n.type = "s_open", n.tag = "s", n.nesting = 1, n.markup = "~~", n.content = "", n = e.tokens[o.token], n.type = "s_close", n.tag = "s", n.nesting = -1, n.markup = "~~", n.content = "", e.tokens[o.token - 1].type === "text" && e.tokens[o.token - 1].content === "~" && r.push(o.token - 1);
  }
  for (; r.length; ) {
    const u = r.pop();
    let s = u + 1;
    for (; s < e.tokens.length && e.tokens[s].type === "s_close"; )
      s++;
    s--, u !== s && (n = e.tokens[s], e.tokens[s] = e.tokens[u], e.tokens[u] = n);
  }
}
function Zy(e) {
  const t = e.tokens_meta, n = e.tokens_meta.length;
  mc(e, e.delimiters);
  for (let r = 0; r < n; r++)
    t[r] && t[r].delimiters && mc(e, t[r].delimiters);
}
const Bd = {
  tokenize: $y,
  postProcess: Zy
};
function Gy(e, t) {
  const n = e.pos, r = e.src.charCodeAt(n);
  if (t || r !== 95 && r !== 42)
    return !1;
  const i = e.scanDelims(e.pos, r === 42);
  for (let u = 0; u < i.length; u++) {
    const s = e.push("text", "", 0);
    s.content = String.fromCharCode(r), e.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker: r,
      // Total length of these series of delimiters.
      //
      length: i.length,
      // A position of the token this delimiter corresponds to.
      //
      token: e.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: i.can_open,
      close: i.can_close
    });
  }
  return e.pos += i.length, !0;
}
function bc(e, t) {
  const n = t.length;
  for (let r = n - 1; r >= 0; r--) {
    const i = t[r];
    if (i.marker !== 95 && i.marker !== 42 || i.end === -1)
      continue;
    const u = t[i.end], s = r > 0 && t[r - 1].end === i.end + 1 && // check that first two markers match and adjacent
    t[r - 1].marker === i.marker && t[r - 1].token === i.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    t[i.end + 1].token === u.token + 1, o = String.fromCharCode(i.marker), a = e.tokens[i.token];
    a.type = s ? "strong_open" : "em_open", a.tag = s ? "strong" : "em", a.nesting = 1, a.markup = s ? o + o : o, a.content = "";
    const c = e.tokens[u.token];
    c.type = s ? "strong_close" : "em_close", c.tag = s ? "strong" : "em", c.nesting = -1, c.markup = s ? o + o : o, c.content = "", s && (e.tokens[t[r - 1].token].content = "", e.tokens[t[i.end + 1].token].content = "", r--);
  }
}
function Yy(e) {
  const t = e.tokens_meta, n = e.tokens_meta.length;
  bc(e, e.delimiters);
  for (let r = 0; r < n; r++)
    t[r] && t[r].delimiters && bc(e, t[r].delimiters);
}
const Vd = {
  tokenize: Gy,
  postProcess: Yy
};
function Ky(e, t) {
  let n, r, i, u, s = "", o = "", a = e.pos, c = !0;
  if (e.src.charCodeAt(e.pos) !== 91)
    return !1;
  const l = e.pos, f = e.posMax, m = e.pos + 1, p = e.md.helpers.parseLinkLabel(e, e.pos, !0);
  if (p < 0)
    return !1;
  let h = p + 1;
  if (h < f && e.src.charCodeAt(h) === 40) {
    for (c = !1, h++; h < f && (n = e.src.charCodeAt(h), !(!Ge(n) && n !== 10)); h++)
      ;
    if (h >= f)
      return !1;
    if (a = h, i = e.md.helpers.parseLinkDestination(e.src, h, e.posMax), i.ok) {
      for (s = e.md.normalizeLink(i.str), e.md.validateLink(s) ? h = i.pos : s = "", a = h; h < f && (n = e.src.charCodeAt(h), !(!Ge(n) && n !== 10)); h++)
        ;
      if (i = e.md.helpers.parseLinkTitle(e.src, h, e.posMax), h < f && a !== h && i.ok)
        for (o = i.str, h = i.pos; h < f && (n = e.src.charCodeAt(h), !(!Ge(n) && n !== 10)); h++)
          ;
    }
    (h >= f || e.src.charCodeAt(h) !== 41) && (c = !0), h++;
  }
  if (c) {
    if (typeof e.env.references > "u")
      return !1;
    if (h < f && e.src.charCodeAt(h) === 91 ? (a = h + 1, h = e.md.helpers.parseLinkLabel(e, h), h >= 0 ? r = e.src.slice(a, h++) : h = p + 1) : h = p + 1, r || (r = e.src.slice(m, p)), u = e.env.references[Ds(r)], !u)
      return e.pos = l, !1;
    s = u.href, o = u.title;
  }
  if (!t) {
    e.pos = m, e.posMax = p;
    const E = e.push("link_open", "a", 1), C = [["href", s]];
    E.attrs = C, o && C.push(["title", o]), e.linkLevel++, e.md.inline.tokenize(e), e.linkLevel--, e.push("link_close", "a", -1);
  }
  return e.pos = h, e.posMax = f, !0;
}
function Jy(e, t) {
  let n, r, i, u, s, o, a, c, l = "";
  const f = e.pos, m = e.posMax;
  if (e.src.charCodeAt(e.pos) !== 33 || e.src.charCodeAt(e.pos + 1) !== 91)
    return !1;
  const p = e.pos + 2, h = e.md.helpers.parseLinkLabel(e, e.pos + 1, !1);
  if (h < 0)
    return !1;
  if (u = h + 1, u < m && e.src.charCodeAt(u) === 40) {
    for (u++; u < m && (n = e.src.charCodeAt(u), !(!Ge(n) && n !== 10)); u++)
      ;
    if (u >= m)
      return !1;
    for (c = u, o = e.md.helpers.parseLinkDestination(e.src, u, e.posMax), o.ok && (l = e.md.normalizeLink(o.str), e.md.validateLink(l) ? u = o.pos : l = ""), c = u; u < m && (n = e.src.charCodeAt(u), !(!Ge(n) && n !== 10)); u++)
      ;
    if (o = e.md.helpers.parseLinkTitle(e.src, u, e.posMax), u < m && c !== u && o.ok)
      for (a = o.str, u = o.pos; u < m && (n = e.src.charCodeAt(u), !(!Ge(n) && n !== 10)); u++)
        ;
    else
      a = "";
    if (u >= m || e.src.charCodeAt(u) !== 41)
      return e.pos = f, !1;
    u++;
  } else {
    if (typeof e.env.references > "u")
      return !1;
    if (u < m && e.src.charCodeAt(u) === 91 ? (c = u + 1, u = e.md.helpers.parseLinkLabel(e, u), u >= 0 ? i = e.src.slice(c, u++) : u = h + 1) : u = h + 1, i || (i = e.src.slice(p, h)), s = e.env.references[Ds(i)], !s)
      return e.pos = f, !1;
    l = s.href, a = s.title;
  }
  if (!t) {
    r = e.src.slice(p, h);
    const E = [];
    e.md.inline.parse(
      r,
      e.md,
      e.env,
      E
    );
    const C = e.push("image", "img", 0), L = [["src", l], ["alt", ""]];
    C.attrs = L, C.children = E, C.content = r, a && L.push(["title", a]);
  }
  return e.pos = u, e.posMax = m, !0;
}
const Xy = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, Qy = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/;
function e3(e, t) {
  let n = e.pos;
  if (e.src.charCodeAt(n) !== 60)
    return !1;
  const r = e.pos, i = e.posMax;
  for (; ; ) {
    if (++n >= i) return !1;
    const s = e.src.charCodeAt(n);
    if (s === 60) return !1;
    if (s === 62) break;
  }
  const u = e.src.slice(r + 1, n);
  if (Qy.test(u)) {
    const s = e.md.normalizeLink(u);
    if (!e.md.validateLink(s))
      return !1;
    if (!t) {
      const o = e.push("link_open", "a", 1);
      o.attrs = [["href", s]], o.markup = "autolink", o.info = "auto";
      const a = e.push("text", "", 0);
      a.content = e.md.normalizeLinkText(u);
      const c = e.push("link_close", "a", -1);
      c.markup = "autolink", c.info = "auto";
    }
    return e.pos += u.length + 2, !0;
  }
  if (Xy.test(u)) {
    const s = e.md.normalizeLink("mailto:" + u);
    if (!e.md.validateLink(s))
      return !1;
    if (!t) {
      const o = e.push("link_open", "a", 1);
      o.attrs = [["href", s]], o.markup = "autolink", o.info = "auto";
      const a = e.push("text", "", 0);
      a.content = e.md.normalizeLinkText(u);
      const c = e.push("link_close", "a", -1);
      c.markup = "autolink", c.info = "auto";
    }
    return e.pos += u.length + 2, !0;
  }
  return !1;
}
function t3(e) {
  return /^<a[>\s]/i.test(e);
}
function n3(e) {
  return /^<\/a\s*>/i.test(e);
}
function r3(e) {
  const t = e | 32;
  return t >= 97 && t <= 122;
}
function i3(e, t) {
  if (!e.md.options.html)
    return !1;
  const n = e.posMax, r = e.pos;
  if (e.src.charCodeAt(r) !== 60 || r + 2 >= n)
    return !1;
  const i = e.src.charCodeAt(r + 1);
  if (i !== 33 && i !== 63 && i !== 47 && !r3(i))
    return !1;
  const u = e.src.slice(r).match(Ny);
  if (!u)
    return !1;
  if (!t) {
    const s = e.push("html_inline", "", 0);
    s.content = u[0], t3(s.content) && e.linkLevel++, n3(s.content) && e.linkLevel--;
  }
  return e.pos += u[0].length, !0;
}
const u3 = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, s3 = /^&([a-z][a-z0-9]{1,31});/i;
function o3(e, t) {
  const n = e.pos, r = e.posMax;
  if (e.src.charCodeAt(n) !== 38 || n + 1 >= r) return !1;
  if (e.src.charCodeAt(n + 1) === 35) {
    const u = e.src.slice(n).match(u3);
    if (u) {
      if (!t) {
        const s = u[1][0].toLowerCase() === "x" ? parseInt(u[1].slice(1), 16) : parseInt(u[1], 10), o = e.push("text_special", "", 0);
        o.content = Na(s) ? Xu(s) : Xu(65533), o.markup = u[0], o.info = "entity";
      }
      return e.pos += u[0].length, !0;
    }
  } else {
    const u = e.src.slice(n).match(s3);
    if (u) {
      const s = Nd(u[0]);
      if (s !== u[0]) {
        if (!t) {
          const o = e.push("text_special", "", 0);
          o.content = s, o.markup = u[0], o.info = "entity";
        }
        return e.pos += u[0].length, !0;
      }
    }
  }
  return !1;
}
function gc(e) {
  const t = {}, n = e.length;
  if (!n) return;
  let r = 0, i = -2;
  const u = [];
  for (let s = 0; s < n; s++) {
    const o = e[s];
    if (u.push(0), (e[r].marker !== o.marker || i !== o.token - 1) && (r = s), i = o.token, o.length = o.length || 0, !o.close) continue;
    t.hasOwnProperty(o.marker) || (t[o.marker] = [-1, -1, -1, -1, -1, -1]);
    const a = t[o.marker][(o.open ? 3 : 0) + o.length % 3];
    let c = r - u[r] - 1, l = c;
    for (; c > a; c -= u[c] + 1) {
      const f = e[c];
      if (f.marker === o.marker && f.open && f.end < 0) {
        let m = !1;
        if ((f.close || o.open) && (f.length + o.length) % 3 === 0 && (f.length % 3 !== 0 || o.length % 3 !== 0) && (m = !0), !m) {
          const p = c > 0 && !e[c - 1].open ? u[c - 1] + 1 : 0;
          u[s] = s - c + p, u[c] = p, o.open = !1, f.end = s, f.close = !1, l = -1, i = -2;
          break;
        }
      }
    }
    l !== -1 && (t[o.marker][(o.open ? 3 : 0) + (o.length || 0) % 3] = l);
  }
}
function a3(e) {
  const t = e.tokens_meta, n = e.tokens_meta.length;
  gc(e.delimiters);
  for (let r = 0; r < n; r++)
    t[r] && t[r].delimiters && gc(t[r].delimiters);
}
function l3(e) {
  let t, n, r = 0;
  const i = e.tokens, u = e.tokens.length;
  for (t = n = 0; t < u; t++)
    i[t].nesting < 0 && r--, i[t].level = r, i[t].nesting > 0 && r++, i[t].type === "text" && t + 1 < u && i[t + 1].type === "text" ? i[t + 1].content = i[t].content + i[t + 1].content : (t !== n && (i[n] = i[t]), n++);
  t !== n && (i.length = n);
}
const po = [
  ["text", By],
  ["linkify", Hy],
  ["newline", Uy],
  ["escape", qy],
  ["backticks", Wy],
  ["strikethrough", Bd.tokenize],
  ["emphasis", Vd.tokenize],
  ["link", Ky],
  ["image", Jy],
  ["autolink", e3],
  ["html_inline", i3],
  ["entity", o3]
], mo = [
  ["balance_pairs", a3],
  ["strikethrough", Bd.postProcess],
  ["emphasis", Vd.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", l3]
];
function nu() {
  this.ruler = new Vt();
  for (let e = 0; e < po.length; e++)
    this.ruler.push(po[e][0], po[e][1]);
  this.ruler2 = new Vt();
  for (let e = 0; e < mo.length; e++)
    this.ruler2.push(mo[e][0], mo[e][1]);
}
nu.prototype.skipToken = function(e) {
  const t = e.pos, n = this.ruler.getRules(""), r = n.length, i = e.md.options.maxNesting, u = e.cache;
  if (typeof u[t] < "u") {
    e.pos = u[t];
    return;
  }
  let s = !1;
  if (e.level < i) {
    for (let o = 0; o < r; o++)
      if (e.level++, s = n[o](e, !0), e.level--, s) {
        if (t >= e.pos)
          throw new Error("inline rule didn't increment state.pos");
        break;
      }
  } else
    e.pos = e.posMax;
  s || e.pos++, u[t] = e.pos;
};
nu.prototype.tokenize = function(e) {
  const t = this.ruler.getRules(""), n = t.length, r = e.posMax, i = e.md.options.maxNesting;
  for (; e.pos < r; ) {
    const u = e.pos;
    let s = !1;
    if (e.level < i) {
      for (let o = 0; o < n; o++)
        if (s = t[o](e, !1), s) {
          if (u >= e.pos)
            throw new Error("inline rule didn't increment state.pos");
          break;
        }
    }
    if (s) {
      if (e.pos >= r)
        break;
      continue;
    }
    e.pending += e.src[e.pos++];
  }
  e.pending && e.pushPending();
};
nu.prototype.parse = function(e, t, n, r) {
  const i = new this.State(e, t, n, r);
  this.tokenize(i);
  const u = this.ruler2.getRules(""), s = u.length;
  for (let o = 0; o < s; o++)
    u[o](i);
};
nu.prototype.State = tu;
function c3(e) {
  const t = {};
  e = e || {}, t.src_Any = Od.source, t.src_Cc = Dd.source, t.src_Z = Fd.source, t.src_P = Fa.source, t.src_ZPCc = [t.src_Z, t.src_P, t.src_Cc].join("|"), t.src_ZCc = [t.src_Z, t.src_Cc].join("|");
  const n = "[><｜]";
  return t.src_pseudo_letter = "(?:(?!" + n + "|" + t.src_ZPCc + ")" + t.src_Any + ")", t.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", t.src_auth = "(?:(?:(?!" + t.src_ZCc + "|[@/\\[\\]()]).)+@)?", t.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", t.src_host_terminator = "(?=$|" + n + "|" + t.src_ZPCc + ")(?!" + (e["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + t.src_ZPCc + "))", t.src_path = "(?:[/?#](?:(?!" + t.src_ZCc + "|" + n + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + t.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + t.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + t.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + t.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + t.src_ZCc + "|[']).)+\\'|\\'(?=" + t.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + t.src_ZCc + "|[.]|$)|" + (e["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + // allow `,,,` in paths
  ",(?!" + t.src_ZCc + "|$)|;(?!" + t.src_ZCc + "|$)|\\!+(?!" + t.src_ZCc + "|[!]|$)|\\?(?!" + t.src_ZCc + "|[?]|$))+|\\/)?", t.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', t.src_xn = "xn--[a-z0-9\\-]{1,59}", t.src_domain_root = // Allow letters & digits (http://test1)
  "(?:" + t.src_xn + "|" + t.src_pseudo_letter + "{1,63})", t.src_domain = "(?:" + t.src_xn + "|(?:" + t.src_pseudo_letter + ")|(?:" + t.src_pseudo_letter + "(?:-|" + t.src_pseudo_letter + "){0,61}" + t.src_pseudo_letter + "))", t.src_host = "(?:(?:(?:(?:" + t.src_domain + ")\\.)*" + t.src_domain + "))", t.tpl_host_fuzzy = "(?:" + t.src_ip4 + "|(?:(?:(?:" + t.src_domain + ")\\.)+(?:%TLDS%)))", t.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + t.src_domain + ")\\.)+(?:%TLDS%))", t.src_host_strict = t.src_host + t.src_host_terminator, t.tpl_host_fuzzy_strict = t.tpl_host_fuzzy + t.src_host_terminator, t.src_host_port_strict = t.src_host + t.src_port + t.src_host_terminator, t.tpl_host_port_fuzzy_strict = t.tpl_host_fuzzy + t.src_port + t.src_host_terminator, t.tpl_host_port_no_ip_fuzzy_strict = t.tpl_host_no_ip_fuzzy + t.src_port + t.src_host_terminator, t.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + t.src_ZPCc + "|>|$))", t.tpl_email_fuzzy = "(^|" + n + '|"|\\(|' + t.src_ZCc + ")(" + t.src_email_name + "@" + t.tpl_host_fuzzy_strict + ")", t.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
  // but can start with > (markdown blockquote)
  "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t.src_ZPCc + "))((?![$+<=>^`|｜])" + t.tpl_host_port_fuzzy_strict + t.src_path + ")", t.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
  // but can start with > (markdown blockquote)
  "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t.src_ZPCc + "))((?![$+<=>^`|｜])" + t.tpl_host_port_no_ip_fuzzy_strict + t.src_path + ")", t;
}
function Zo(e) {
  return Array.prototype.slice.call(arguments, 1).forEach(function(n) {
    n && Object.keys(n).forEach(function(r) {
      e[r] = n[r];
    });
  }), e;
}
function Fs(e) {
  return Object.prototype.toString.call(e);
}
function f3(e) {
  return Fs(e) === "[object String]";
}
function d3(e) {
  return Fs(e) === "[object Object]";
}
function h3(e) {
  return Fs(e) === "[object RegExp]";
}
function yc(e) {
  return Fs(e) === "[object Function]";
}
function p3(e) {
  return e.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
const Hd = {
  fuzzyLink: !0,
  fuzzyEmail: !0,
  fuzzyIP: !1
};
function m3(e) {
  return Object.keys(e || {}).reduce(function(t, n) {
    return t || Hd.hasOwnProperty(n);
  }, !1);
}
const b3 = {
  "http:": {
    validate: function(e, t, n) {
      const r = e.slice(t);
      return n.re.http || (n.re.http = new RegExp(
        "^\\/\\/" + n.re.src_auth + n.re.src_host_port_strict + n.re.src_path,
        "i"
      )), n.re.http.test(r) ? r.match(n.re.http)[0].length : 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(e, t, n) {
      const r = e.slice(t);
      return n.re.no_http || (n.re.no_http = new RegExp(
        "^" + n.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
        // with code comments
        "(?:localhost|(?:(?:" + n.re.src_domain + ")\\.)+" + n.re.src_domain_root + ")" + n.re.src_port + n.re.src_host_terminator + n.re.src_path,
        "i"
      )), n.re.no_http.test(r) ? t >= 3 && e[t - 3] === ":" || t >= 3 && e[t - 3] === "/" ? 0 : r.match(n.re.no_http)[0].length : 0;
    }
  },
  "mailto:": {
    validate: function(e, t, n) {
      const r = e.slice(t);
      return n.re.mailto || (n.re.mailto = new RegExp(
        "^" + n.re.src_email_name + "@" + n.re.src_host_strict,
        "i"
      )), n.re.mailto.test(r) ? r.match(n.re.mailto)[0].length : 0;
    }
  }
}, g3 = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", y3 = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function _3(e) {
  e.__index__ = -1, e.__text_cache__ = "";
}
function x3(e) {
  return function(t, n) {
    const r = t.slice(n);
    return e.test(r) ? r.match(e)[0].length : 0;
  };
}
function _c() {
  return function(e, t) {
    t.normalize(e);
  };
}
function Qu(e) {
  const t = e.re = c3(e.__opts__), n = e.__tlds__.slice();
  e.onCompile(), e.__tlds_replaced__ || n.push(g3), n.push(t.src_xn), t.src_tlds = n.join("|");
  function r(o) {
    return o.replace("%TLDS%", t.src_tlds);
  }
  t.email_fuzzy = RegExp(r(t.tpl_email_fuzzy), "i"), t.link_fuzzy = RegExp(r(t.tpl_link_fuzzy), "i"), t.link_no_ip_fuzzy = RegExp(r(t.tpl_link_no_ip_fuzzy), "i"), t.host_fuzzy_test = RegExp(r(t.tpl_host_fuzzy_test), "i");
  const i = [];
  e.__compiled__ = {};
  function u(o, a) {
    throw new Error('(LinkifyIt) Invalid schema "' + o + '": ' + a);
  }
  Object.keys(e.__schemas__).forEach(function(o) {
    const a = e.__schemas__[o];
    if (a === null)
      return;
    const c = { validate: null, link: null };
    if (e.__compiled__[o] = c, d3(a)) {
      h3(a.validate) ? c.validate = x3(a.validate) : yc(a.validate) ? c.validate = a.validate : u(o, a), yc(a.normalize) ? c.normalize = a.normalize : a.normalize ? u(o, a) : c.normalize = _c();
      return;
    }
    if (f3(a)) {
      i.push(o);
      return;
    }
    u(o, a);
  }), i.forEach(function(o) {
    e.__compiled__[e.__schemas__[o]] && (e.__compiled__[o].validate = e.__compiled__[e.__schemas__[o]].validate, e.__compiled__[o].normalize = e.__compiled__[e.__schemas__[o]].normalize);
  }), e.__compiled__[""] = { validate: null, normalize: _c() };
  const s = Object.keys(e.__compiled__).filter(function(o) {
    return o.length > 0 && e.__compiled__[o];
  }).map(p3).join("|");
  e.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + t.src_ZPCc + "))(" + s + ")", "i"), e.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + t.src_ZPCc + "))(" + s + ")", "ig"), e.re.schema_at_start = RegExp("^" + e.re.schema_search.source, "i"), e.re.pretest = RegExp(
    "(" + e.re.schema_test.source + ")|(" + e.re.host_fuzzy_test.source + ")|@",
    "i"
  ), _3(e);
}
function v3(e, t) {
  const n = e.__index__, r = e.__last_index__, i = e.__text_cache__.slice(n, r);
  this.schema = e.__schema__.toLowerCase(), this.index = n + t, this.lastIndex = r + t, this.raw = i, this.text = i, this.url = i;
}
function Go(e, t) {
  const n = new v3(e, t);
  return e.__compiled__[n.schema].normalize(n, e), n;
}
function Wt(e, t) {
  if (!(this instanceof Wt))
    return new Wt(e, t);
  t || m3(e) && (t = e, e = {}), this.__opts__ = Zo({}, Hd, t), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = Zo({}, b3, e), this.__compiled__ = {}, this.__tlds__ = y3, this.__tlds_replaced__ = !1, this.re = {}, Qu(this);
}
Wt.prototype.add = function(t, n) {
  return this.__schemas__[t] = n, Qu(this), this;
};
Wt.prototype.set = function(t) {
  return this.__opts__ = Zo(this.__opts__, t), this;
};
Wt.prototype.test = function(t) {
  if (this.__text_cache__ = t, this.__index__ = -1, !t.length)
    return !1;
  let n, r, i, u, s, o, a, c, l;
  if (this.re.schema_test.test(t)) {
    for (a = this.re.schema_search, a.lastIndex = 0; (n = a.exec(t)) !== null; )
      if (u = this.testSchemaAt(t, n[2], a.lastIndex), u) {
        this.__schema__ = n[2], this.__index__ = n.index + n[1].length, this.__last_index__ = n.index + n[0].length + u;
        break;
      }
  }
  return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (c = t.search(this.re.host_fuzzy_test), c >= 0 && (this.__index__ < 0 || c < this.__index__) && (r = t.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (s = r.index + r[1].length, (this.__index__ < 0 || s < this.__index__) && (this.__schema__ = "", this.__index__ = s, this.__last_index__ = r.index + r[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (l = t.indexOf("@"), l >= 0 && (i = t.match(this.re.email_fuzzy)) !== null && (s = i.index + i[1].length, o = i.index + i[0].length, (this.__index__ < 0 || s < this.__index__ || s === this.__index__ && o > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = s, this.__last_index__ = o))), this.__index__ >= 0;
};
Wt.prototype.pretest = function(t) {
  return this.re.pretest.test(t);
};
Wt.prototype.testSchemaAt = function(t, n, r) {
  return this.__compiled__[n.toLowerCase()] ? this.__compiled__[n.toLowerCase()].validate(t, r, this) : 0;
};
Wt.prototype.match = function(t) {
  const n = [];
  let r = 0;
  this.__index__ >= 0 && this.__text_cache__ === t && (n.push(Go(this, r)), r = this.__last_index__);
  let i = r ? t.slice(r) : t;
  for (; this.test(i); )
    n.push(Go(this, r)), i = i.slice(this.__last_index__), r += this.__last_index__;
  return n.length ? n : null;
};
Wt.prototype.matchAtStart = function(t) {
  if (this.__text_cache__ = t, this.__index__ = -1, !t.length) return null;
  const n = this.re.schema_at_start.exec(t);
  if (!n) return null;
  const r = this.testSchemaAt(t, n[2], n[0].length);
  return r ? (this.__schema__ = n[2], this.__index__ = n.index + n[1].length, this.__last_index__ = n.index + n[0].length + r, Go(this, 0)) : null;
};
Wt.prototype.tlds = function(t, n) {
  return t = Array.isArray(t) ? t : [t], n ? (this.__tlds__ = this.__tlds__.concat(t).sort().filter(function(r, i, u) {
    return r !== u[i - 1];
  }).reverse(), Qu(this), this) : (this.__tlds__ = t.slice(), this.__tlds_replaced__ = !0, Qu(this), this);
};
Wt.prototype.normalize = function(t) {
  t.schema || (t.url = "http://" + t.url), t.schema === "mailto:" && !/^mailto:/i.test(t.url) && (t.url = "mailto:" + t.url);
};
Wt.prototype.onCompile = function() {
};
const Yr = 2147483647, kn = 36, za = 1, Ui = 26, k3 = 38, w3 = 700, Ud = 72, qd = 128, Wd = "-", E3 = /^xn--/, C3 = /[^\0-\x7F]/, S3 = /[\x2E\u3002\uFF0E\uFF61]/g, T3 = {
  overflow: "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
}, bo = kn - za, wn = Math.floor, go = String.fromCharCode;
function Kn(e) {
  throw new RangeError(T3[e]);
}
function O3(e, t) {
  const n = [];
  let r = e.length;
  for (; r--; )
    n[r] = t(e[r]);
  return n;
}
function $d(e, t) {
  const n = e.split("@");
  let r = "";
  n.length > 1 && (r = n[0] + "@", e = n[1]), e = e.replace(S3, ".");
  const i = e.split("."), u = O3(i, t).join(".");
  return r + u;
}
function Zd(e) {
  const t = [];
  let n = 0;
  const r = e.length;
  for (; n < r; ) {
    const i = e.charCodeAt(n++);
    if (i >= 55296 && i <= 56319 && n < r) {
      const u = e.charCodeAt(n++);
      (u & 64512) == 56320 ? t.push(((i & 1023) << 10) + (u & 1023) + 65536) : (t.push(i), n--);
    } else
      t.push(i);
  }
  return t;
}
const D3 = (e) => String.fromCodePoint(...e), A3 = function(e) {
  return e >= 48 && e < 58 ? 26 + (e - 48) : e >= 65 && e < 91 ? e - 65 : e >= 97 && e < 123 ? e - 97 : kn;
}, xc = function(e, t) {
  return e + 22 + 75 * (e < 26) - ((t != 0) << 5);
}, Gd = function(e, t, n) {
  let r = 0;
  for (e = n ? wn(e / w3) : e >> 1, e += wn(e / t); e > bo * Ui >> 1; r += kn)
    e = wn(e / bo);
  return wn(r + (bo + 1) * e / (e + k3));
}, Yd = function(e) {
  const t = [], n = e.length;
  let r = 0, i = qd, u = Ud, s = e.lastIndexOf(Wd);
  s < 0 && (s = 0);
  for (let o = 0; o < s; ++o)
    e.charCodeAt(o) >= 128 && Kn("not-basic"), t.push(e.charCodeAt(o));
  for (let o = s > 0 ? s + 1 : 0; o < n; ) {
    const a = r;
    for (let l = 1, f = kn; ; f += kn) {
      o >= n && Kn("invalid-input");
      const m = A3(e.charCodeAt(o++));
      m >= kn && Kn("invalid-input"), m > wn((Yr - r) / l) && Kn("overflow"), r += m * l;
      const p = f <= u ? za : f >= u + Ui ? Ui : f - u;
      if (m < p)
        break;
      const h = kn - p;
      l > wn(Yr / h) && Kn("overflow"), l *= h;
    }
    const c = t.length + 1;
    u = Gd(r - a, c, a == 0), wn(r / c) > Yr - i && Kn("overflow"), i += wn(r / c), r %= c, t.splice(r++, 0, i);
  }
  return String.fromCodePoint(...t);
}, Kd = function(e) {
  const t = [];
  e = Zd(e);
  const n = e.length;
  let r = qd, i = 0, u = Ud;
  for (const a of e)
    a < 128 && t.push(go(a));
  const s = t.length;
  let o = s;
  for (s && t.push(Wd); o < n; ) {
    let a = Yr;
    for (const l of e)
      l >= r && l < a && (a = l);
    const c = o + 1;
    a - r > wn((Yr - i) / c) && Kn("overflow"), i += (a - r) * c, r = a;
    for (const l of e)
      if (l < r && ++i > Yr && Kn("overflow"), l === r) {
        let f = i;
        for (let m = kn; ; m += kn) {
          const p = m <= u ? za : m >= u + Ui ? Ui : m - u;
          if (f < p)
            break;
          const h = f - p, E = kn - p;
          t.push(
            go(xc(p + h % E, 0))
          ), f = wn(h / E);
        }
        t.push(go(xc(f, 0))), u = Gd(i, c, o === s), i = 0, ++o;
      }
    ++i, ++r;
  }
  return t.join("");
}, F3 = function(e) {
  return $d(e, function(t) {
    return E3.test(t) ? Yd(t.slice(4).toLowerCase()) : t;
  });
}, M3 = function(e) {
  return $d(e, function(t) {
    return C3.test(t) ? "xn--" + Kd(t) : t;
  });
}, Jd = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  version: "2.3.1",
  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  ucs2: {
    decode: Zd,
    encode: D3
  },
  decode: Yd,
  encode: Kd,
  toASCII: M3,
  toUnicode: F3
}, N3 = {
  options: {
    // Enable HTML tags in source
    html: !1,
    // Use '/' to close single tags (<br />)
    xhtmlOut: !1,
    // Convert '\n' in paragraphs into <br>
    breaks: !1,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: !1,
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 100
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
}, I3 = {
  options: {
    // Enable HTML tags in source
    html: !1,
    // Use '/' to close single tags (<br />)
    xhtmlOut: !1,
    // Convert '\n' in paragraphs into <br>
    breaks: !1,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: !1,
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 20
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
}, L3 = {
  options: {
    // Enable HTML tags in source
    html: !0,
    // Use '/' to close single tags (<br />)
    xhtmlOut: !0,
    // Convert '\n' in paragraphs into <br>
    breaks: !1,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: !1,
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 20
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
}, z3 = {
  default: N3,
  zero: I3,
  commonmark: L3
}, P3 = /^(vbscript|javascript|file|data):/, R3 = /^data:image\/(gif|png|jpeg|webp);/;
function j3(e) {
  const t = e.trim().toLowerCase();
  return P3.test(t) ? R3.test(t) : !0;
}
const Xd = ["http:", "https:", "mailto:"];
function B3(e) {
  const t = Aa(e, !0);
  if (t.hostname && (!t.protocol || Xd.indexOf(t.protocol) >= 0))
    try {
      t.hostname = Jd.toASCII(t.hostname);
    } catch {
    }
  return eu(Da(t));
}
function V3(e) {
  const t = Aa(e, !0);
  if (t.hostname && (!t.protocol || Xd.indexOf(t.protocol) >= 0))
    try {
      t.hostname = Jd.toUnicode(t.hostname);
    } catch {
    }
  return ni(Da(t), ni.defaultChars + "%");
}
function Ht(e, t) {
  if (!(this instanceof Ht))
    return new Ht(e, t);
  t || Ma(e) || (t = e || {}, e = "default"), this.inline = new nu(), this.block = new As(), this.core = new Ia(), this.renderer = new ci(), this.linkify = new Wt(), this.validateLink = j3, this.normalizeLink = B3, this.normalizeLinkText = V3, this.utils = U2, this.helpers = Os({}, Z2), this.options = {}, this.configure(e), t && this.set(t);
}
Ht.prototype.set = function(e) {
  return Os(this.options, e), this;
};
Ht.prototype.configure = function(e) {
  const t = this;
  if (Ma(e)) {
    const n = e;
    if (e = z3[n], !e)
      throw new Error('Wrong `markdown-it` preset "' + n + '", check name');
  }
  if (!e)
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  return e.options && t.set(e.options), e.components && Object.keys(e.components).forEach(function(n) {
    e.components[n].rules && t[n].ruler.enableOnly(e.components[n].rules), e.components[n].rules2 && t[n].ruler2.enableOnly(e.components[n].rules2);
  }), this;
};
Ht.prototype.enable = function(e, t) {
  let n = [];
  Array.isArray(e) || (e = [e]), ["core", "block", "inline"].forEach(function(i) {
    n = n.concat(this[i].ruler.enable(e, !0));
  }, this), n = n.concat(this.inline.ruler2.enable(e, !0));
  const r = e.filter(function(i) {
    return n.indexOf(i) < 0;
  });
  if (r.length && !t)
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + r);
  return this;
};
Ht.prototype.disable = function(e, t) {
  let n = [];
  Array.isArray(e) || (e = [e]), ["core", "block", "inline"].forEach(function(i) {
    n = n.concat(this[i].ruler.disable(e, !0));
  }, this), n = n.concat(this.inline.ruler2.disable(e, !0));
  const r = e.filter(function(i) {
    return n.indexOf(i) < 0;
  });
  if (r.length && !t)
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + r);
  return this;
};
Ht.prototype.use = function(e) {
  const t = [this].concat(Array.prototype.slice.call(arguments, 1));
  return e.apply(e, t), this;
};
Ht.prototype.parse = function(e, t) {
  if (typeof e != "string")
    throw new Error("Input data should be a String");
  const n = new this.core.State(e, this, t);
  return this.core.process(n), n.tokens;
};
Ht.prototype.render = function(e, t) {
  return t = t || {}, this.renderer.render(this.parse(e, t), this.options, t);
};
Ht.prototype.parseInline = function(e, t) {
  const n = new this.core.State(e, this, t);
  return n.inlineMode = !0, this.core.process(n), n.tokens;
};
Ht.prototype.renderInline = function(e, t) {
  return t = t || {}, this.renderer.render(this.parseInline(e, t), this.options, t);
};
function kr(e) {
  if (!e) return "";
  if (typeof e == "string") return e;
  const t = document.querySelector("html").lang || "en";
  return e[t] || e.en || Object.values(e)[0] || "";
}
const yo = (e, t) => ["auto", "scroll"].includes(getComputedStyle(e, null).getPropertyValue(t)), H3 = (e) => yo(e, "overflow") || yo(e, "overflow-x") || yo(e, "overflow-y");
function Qd(e) {
  if (!(!e || e === document.body))
    return H3(e) ? e : Qd(e.parentNode);
}
function eh(e, t) {
  let n = t.diff(e).shiftTo("minutes").minutes;
  if (n <= 60)
    return `${n}min`;
  const r = Math.floor(n / 60);
  return n = n % 60, n ? `${r}h${n}min` : `${r}h`;
}
function th(e, t) {
  return new Intl.DateTimeFormat(t, { hour: "numeric", minute: "numeric", timeZone: e.zoneName }).formatToParts(e).filter((r) => r.type !== "dayPeriod").map((r) => r.value).join("");
}
function nh(e, t) {
  return new Intl.DateTimeFormat(t, { hour: "numeric", minute: "numeric", timeZone: e.zoneName }).formatToParts(e).filter((r) => r.type === "dayPeriod")[0].value;
}
function es(e, t, n, r) {
  return r ? {
    time: th(e.start.setZone(t), n),
    ampm: nh(e.start.setZone(t), n)
  } : {
    time: e.start.setZone(t).toLocaleString({ hour: "numeric", minute: "numeric" })
  };
}
const U3 = { class: "fav-button" }, q3 = {
  class: "star",
  viewBox: "0 0 24 24",
  ref: "star"
};
function W3(e, t, n, r, i, u) {
  const s = et("bunt-icon-button");
  return N(), H("div", U3, [
    Re(s, {
      class: "btn-fav-container",
      onClick: ei(u.handleClick, ["prevent", "stop"])
    }, {
      default: sr(() => [
        (N(), H("svg", q3, t[0] || (t[0] = [
          J("path", { d: "M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z" }, null, -1)
        ]), 512))
      ]),
      _: 1
    }, 8, ["onClick"])
  ]);
}
const $3 = "svg.star{height:20px;width:20px}svg.star path{fill:none;stroke:#ffa000;stroke-width:1px;vector-effect:non-scaling-stroke}svg.star.rotate-star{animation:rotate-star .4s}.faved svg.star{filter:drop-shadow(0 0 1px rgba(0,0,0,.17))}.faved svg.star path{fill:#ffa000}@-moz-keyframes rotate-star{0%{transform:rotate(0)}to{transform:rotate(72deg)}}@-webkit-keyframes rotate-star{0%{transform:rotate(0)}to{transform:rotate(72deg)}}@-o-keyframes rotate-star{0%{transform:rotate(0)}to{transform:rotate(72deg)}}@keyframes rotate-star{0%{transform:rotate(0)}to{transform:rotate(72deg)}}", Pn = (e, t) => {
  const n = e.__vccOpts || e;
  for (const [r, i] of t)
    n[r] = i;
  return n;
}, Z3 = {
  name: "FavButton",
  components: {},
  props: {},
  data() {
    return {
      spinning: !1
    };
  },
  computed: {},
  created() {
  },
  mounted() {
  },
  methods: {
    handleClick() {
      this.$emit("toggleFav"), this.$refs.star.classList.add("rotate-star"), setTimeout(() => {
        this.$refs.star.classList.remove("rotate-star");
      }, 400);
    }
  }
}, Pa = /* @__PURE__ */ Pn(Z3, [["render", W3], ["styles", [$3]]]), G3 = ["href", "target"], Y3 = { class: "time-box" }, K3 = {
  key: 0,
  class: "date"
}, J3 = { class: "time" }, X3 = {
  key: 1,
  class: "ampm"
}, Q3 = { class: "duration" }, e_ = {
  key: 0,
  class: "is-live"
}, t_ = { class: "info" }, n_ = { class: "title" }, r_ = {
  key: 0,
  class: "speakers"
}, i_ = { class: "avatars" }, u_ = ["src"], s_ = ["src"], o_ = ["src"], a_ = { class: "names" }, l_ = ["innerHTML"], c_ = { class: "bottom-info" }, f_ = {
  key: 0,
  class: "track"
}, d_ = {
  key: 1,
  class: "room"
}, h_ = { class: "session-icons" }, p_ = {
  key: 0,
  class: "do-not-record",
  viewBox: "0 0 116.59076 116.59076",
  width: "4116.59076mm",
  height: "116.59076mm",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
};
function m_(e, t, n, r, i, u) {
  const s = et("fav-button");
  return N(), H("a", {
    class: It(["c-linear-schedule-session", { faved: n.faved }]),
    style: yt(u.style),
    href: u.link,
    onClick: t[0] || (t[0] = (o) => u.onSessionLinkClick(o, n.session)),
    target: u.linkTarget
  }, [
    J("div", Y3, [
      J("div", {
        class: It(["start", { "has-ampm": n.hasAmPm }])
      }, [
        n.showDate ? (N(), H("div", K3, Ae(u.shortDate), 1)) : Me("", !0),
        J("div", J3, Ae(u.startTime.time), 1),
        u.startTime.ampm ? (N(), H("div", X3, Ae(u.startTime.ampm), 1)) : Me("", !0)
      ], 2),
      J("div", Q3, Ae(i.getPrettyDuration(n.session.start, n.session.end)), 1),
      t[1] || (t[1] = J("div", { class: "buffer" }, null, -1)),
      u.isLive ? (N(), H("div", e_, "live")) : Me("", !0)
    ]),
    J("div", t_, [
      J("div", n_, Ae(i.getLocalizedString(n.session.title)), 1),
      n.session.speakers ? (N(), H("div", r_, [
        J("div", i_, [
          (N(!0), H(Se, null, _t(n.session.speakers, (o) => (N(), H(Se, null, [
            o.avatar_thumbnail_tiny ? (N(), H("img", {
              key: 0,
              src: o.avatar_thumbnail_tiny
            }, null, 8, u_)) : o.avatar_thumbnail_default ? (N(), H("img", {
              key: 1,
              src: o.avatar_thumbnail_default
            }, null, 8, s_)) : o.avatar ? (N(), H("img", {
              key: 2,
              src: o.avatar
            }, null, 8, o_)) : Me("", !0)
          ], 64))), 256))
        ]),
        J("div", a_, Ae(n.session.speakers.map((o) => o.name).join(", ")), 1)
      ])) : Me("", !0),
      n.showAbstract ? (N(), H("div", {
        key: 1,
        class: "abstract",
        innerHTML: u.abstractText
      }, null, 8, l_)) : Me("", !0),
      J("div", c_, [
        n.session.track ? (N(), H("div", f_, Ae(i.getLocalizedString(n.session.track.name)), 1)) : Me("", !0),
        n.showRoom && n.session.room ? (N(), H("div", d_, Ae(i.getLocalizedString(n.session.room.name)), 1)) : Me("", !0)
      ])
    ]),
    J("div", h_, [
      Re(s, { onToggleFav: u.toggleFav }, null, 8, ["onToggleFav"]),
      n.session.do_not_record ? (N(), H("svg", p_, t[2] || (t[2] = [
        J("g", { transform: "translate(-9.3465481,-5.441411)" }, [
          J("rect", {
            style: { fill: "#000000", stroke: "none", "stroke-width": "11.2589", "stroke-linecap": "round", "stroke-dasharray": "none", "stroke-opacity": "1", "paint-order": "markers stroke fill" },
            width: "52.753284",
            height: "39.619537",
            x: "35.496307",
            y: "43.927021",
            rx: "5.5179553",
            ry: "7.573648"
          }),
          J("path", {
            style: { fill: "#000000", "fill-opacity": "1", stroke: "none", "stroke-width": "18.7997", "stroke-linecap": "round", "stroke-dasharray": "none", "stroke-opacity": "1", "paint-order": "markers stroke fill" },
            d: "M 99.787546,47.04792 V 80.425654 L 77.727407,63.736793 Z"
          }),
          J("path", {
            style: { fill: "none", stroke: "#b23e65", "stroke-width": "12", "stroke-linecap": "round", "stroke-dasharray": "none", "stroke-opacity": "1", "paint-order": "markers stroke fill" },
            d: "m 35.553146,95.825578 64.177559,-64.17757 m 16.294055,32.08879 A 48.382828,48.382828 0 0 1 67.641925,112.11961 48.382828,48.382828 0 0 1 19.259099,63.736798 48.382828,48.382828 0 0 1 67.641925,15.353968 48.382828,48.382828 0 0 1 116.02476,63.736798 Z"
          })
        ], -1)
      ]))) : Me("", !0)
    ])
  ], 14, G3);
}
const b_ = ".c-linear-schedule-session,.break{z-index:10;display:flex;min-width:300px;min-height:96px;margin:8px;overflow:hidden;color:#0d0f10;position:relative;font-size:14px}.c-linear-schedule-session .time-box,.break .time-box{width:69px;box-sizing:border-box;background-color:var(--track-color);padding:12px 16px 8px 12px;border-radius:6px 0 0 6px;display:flex;flex-direction:column;align-items:center}.c-linear-schedule-session .time-box .start,.break .time-box .start{color:#fff;font-size:16px;font-weight:600;margin-bottom:8px;display:flex;flex-direction:column;align-items:flex-end}.c-linear-schedule-session .time-box .start .date,.break .time-box .start .date{margin-bottom:4px;white-space:nowrap}.c-linear-schedule-session .time-box .start.has-ampm,.break .time-box .start.has-ampm{align-self:stretch}.c-linear-schedule-session .time-box .start .ampm,.break .time-box .start .ampm{font-weight:400;font-size:13px}.c-linear-schedule-session .time-box .duration,.break .time-box .duration{color:#ffffffb3}.c-linear-schedule-session .time-box .buffer,.break .time-box .buffer{flex:auto}.c-linear-schedule-session .time-box .is-live,.break .time-box .is-live{align-self:stretch;text-align:center;font-weight:600;padding:2px 4px;border-radius:4px;margin:0 -10px 0 -6px;background-color:#f44336;color:#fff;letter-spacing:.5px;text-transform:uppercase}.c-linear-schedule-session .info,.break .info{flex:auto;display:flex;flex-direction:column;padding:8px;border:1px solid rgba(0,0,0,.12);border-left:none;border-radius:0 6px 6px 0;background-color:#fff;min-width:0}.c-linear-schedule-session .info .title,.break .info .title{font-size:16px;font-weight:500;margin-bottom:4px;margin-right:20px}.c-linear-schedule-session .info .speakers,.break .info .speakers{color:#0000008a;display:flex}.c-linear-schedule-session .info .speakers .avatars,.break .info .speakers .avatars{flex:none}.c-linear-schedule-session .info .speakers .avatars>*:not(:first-child),.break .info .speakers .avatars>*:not(:first-child){margin-left:-20px}.c-linear-schedule-session .info .speakers .avatars img,.break .info .speakers .avatars img{background-color:#fff;border-radius:50%;height:24px;width:24px;margin:0 8px 0 0;object-fit:cover}.c-linear-schedule-session .info .speakers .names,.break .info .speakers .names{line-height:24px}.c-linear-schedule-session .info .abstract,.break .info .abstract{margin:8px 0 12px;display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden}.c-linear-schedule-session .info .bottom-info,.break .info .bottom-info{flex:auto;display:flex;align-items:flex-end}.c-linear-schedule-session .info .bottom-info .track,.break .info .bottom-info .track{flex:1;color:var(--track-color);white-space:nowrap;display:inline-block;max-width:100%;overflow:hidden;text-overflow:ellipsis;word-wrap:normal;margin-right:4px}.c-linear-schedule-session .info .bottom-info .room,.break .info .bottom-info .room{flex:1;text-align:right;color:#0000008a;white-space:nowrap;display:inline-block;max-width:100%;overflow:hidden;text-overflow:ellipsis;word-wrap:normal}.c-linear-schedule-session .do-not-record,.break .do-not-record{width:24px;height:24px}.c-linear-schedule-session .session-icons,.break .session-icons{position:absolute;top:2px;right:2px;display:flex}.c-linear-schedule-session .session-icons .do-not-record,.break .session-icons .do-not-record{padding:6px 6px 6px 0}.c-linear-schedule-session .session-icons .btn-fav-container,.break .session-icons .btn-fav-container{margin-top:2px;display:inline-flex;color:#000000de;background-color:transparent;padding:2px;width:32px;height:32px}body[modality=keyboard] .c-linear-schedule-session .session-icons .btn-fav-container:focus,body[modality=keyboard] .break .session-icons .btn-fav-container:focus,.c-linear-schedule-session .session-icons .btn-fav-container:hover:not(.disabled),.break .session-icons .btn-fav-container:hover:not(.disabled),.c-linear-schedule-session .session-icons .btn-fav-container.dropdown-open,.break .session-icons .btn-fav-container.dropdown-open{background-color:#0000001a}.c-linear-schedule-session .session-icons .btn-fav-container .bunt-icon,.break .session-icons .btn-fav-container .bunt-icon{color:#000000de}.c-linear-schedule-session .session-icons .btn-fav-container svg,.break .session-icons .btn-fav-container svg{fill:#000000de}.c-linear-schedule-session:hover .info,.break:hover .info{border:1px solid var(--track-color);border-left:none}.c-linear-schedule-session:hover .info .title,.break:hover .info .title{color:var(--pretalx-clr-primary)}@media (hover: none){.c-linear-schedule-session .session-icons .btn-fav-container{display:inline-flex}}", g_ = Ht({
  linkify: !0,
  breaks: !0
}), y_ = {
  props: {
    now: Object,
    session: Object,
    showAbstract: {
      type: Boolean,
      default: !0
    },
    showRoom: {
      type: Boolean,
      default: !0
    },
    showDate: {
      type: Boolean,
      default: !1
    },
    faved: {
      type: Boolean,
      default: !1
    },
    hasAmPm: {
      type: Boolean,
      default: !1
    },
    locale: String,
    timezone: String,
    onHomeServer: Boolean
  },
  inject: {
    eventUrl: { default: null },
    linkTarget: { default: "_self" },
    generateSessionLinkUrl: {
      default() {
        return ({ eventUrl: e, session: t }) => this.onHomeServer ? `${e}talk/${t.id}/` : `#session/${t.id}/`;
      }
    },
    onSessionLinkClick: {
      default() {
        return () => {
        };
      }
    }
  },
  components: {
    FavButton: Pa
  },
  data() {
    return {
      getPrettyDuration: eh,
      getLocalizedString: kr,
      getSessionTime: es
    };
  },
  computed: {
    link() {
      return this.generateSessionLinkUrl({ eventUrl: this.eventUrl, session: this.session });
    },
    style() {
      var e;
      return {
        "--track-color": ((e = this.session.track) == null ? void 0 : e.color) || "var(--pretalx-clr-primary)"
      };
    },
    startTime() {
      return es(this.session, this.timezone, this.locale, this.hasAmPm);
    },
    shortDate() {
      return this.session.start.setZone(this.timezone).toLocaleString({
        month: "short",
        day: "numeric"
      });
    },
    isLive() {
      return this.session.start < this.now && this.session.end > this.now;
    },
    abstractText() {
      try {
        return g_.renderInline(this.session.abstract);
      } catch {
        return this.session.abstract;
      }
    }
  },
  methods: {
    toggleFav() {
      console.log("toggling fav"), this.faved ? this.$emit("unfav", this.session.id) : this.$emit("fav", this.session.id);
    }
  }
}, Ms = /* @__PURE__ */ Pn(y_, [["render", m_], ["styles", [b_]]]), __ = { class: "c-linear-schedule" }, x_ = { class: "bucket" }, v_ = ["data-date"], k_ = {
  key: 0,
  class: "day"
}, w_ = { class: "time" }, E_ = {
  key: 1,
  class: "break"
}, C_ = { class: "title" };
function S_(e, t, n, r, i, u) {
  const s = et("session"), o = _f("scrollbar");
  return ef((N(), H("div", __, [
    (N(!0), H(Se, null, _t(u.sessionBuckets, ({ date: a, sessions: c }, l) => (N(), H("div", x_, [
      J("div", {
        class: "bucket-label",
        ref_for: !0,
        ref: u.getBucketName(a),
        "data-date": a.toISO()
      }, [
        l === 0 || a.startOf("day").diff(u.sessionBuckets[l - 1].date.startOf("day")).shiftTo("days").days > 0 ? (N(), H("div", k_, Ae(a.setZone(n.timezone).toLocaleString({ weekday: "long", day: "numeric", month: "long" })), 1)) : Me("", !0),
        J("div", w_, Ae(a.setZone(n.timezone).toLocaleString({ hour: "numeric", minute: "numeric" })), 1),
        (N(!0), H(Se, null, _t(c, (f) => (N(), H(Se, null, [
          u.isProperSession(f) ? (N(), ct(s, {
            key: 0,
            session: f,
            now: n.now,
            timezone: n.timezone,
            locale: n.locale,
            hasAmPm: n.hasAmPm,
            faved: f.id && n.favs.includes(f.id),
            onHomeServer: n.onHomeServer,
            onFav: (m) => e.$emit("fav", f.id),
            onUnfav: (m) => e.$emit("unfav", f.id)
          }, null, 8, ["session", "now", "timezone", "locale", "hasAmPm", "faved", "onHomeServer", "onFav", "onUnfav"])) : (N(), H("div", E_, [
            J("div", C_, Ae(i.getLocalizedString(f.title)), 1)
          ]))
        ], 64))), 256))
      ], 8, v_)
    ]))), 256))
  ])), [
    [
      o,
      ,
      void 0,
      { y: !0 }
    ]
  ]);
}
const T_ = ".c-linear-schedule{display:flex;flex-direction:column;min-height:0}.c-linear-schedule .bucket{padding-top:8px}.c-linear-schedule .bucket .bucket-label{font-size:14px;font-weight:500;color:#0000008a;padding-left:16px}.c-linear-schedule .bucket .bucket-label .day{font-weight:600}.c-linear-schedule .bucket .break{z-index:10;margin:8px;padding:8px;border-radius:4px;background-color:#eee;display:flex;justify-content:center;align-items:center}.c-linear-schedule .bucket .break .title{font-size:20px;font-weight:500;color:#0000008a}", O_ = {
  components: { Session: Ms },
  props: {
    sessions: Array,
    rooms: Array,
    locale: String,
    hasAmPm: Boolean,
    timezone: String,
    favs: {
      type: Array,
      default() {
        return [];
      }
    },
    currentDay: String,
    now: Object,
    scrollParent: Element,
    onHomeServer: Boolean
  },
  data() {
    return {
      getLocalizedString: kr,
      scrolledDay: null
    };
  },
  computed: {
    sessionBuckets() {
      const e = {};
      for (const t of this.sessions) {
        const n = this.getBucketName(t.start);
        e[n] || (e[n] = []), t.id ? e[n].push(t) : (t.break_id = `${t.start}${t.end}${t.title}`, e[n].filter((r) => r.break_id === t.break_id).length === 0 && e[n].push(t));
      }
      return Object.entries(e).map(([t, n]) => ({
        date: n[0].start,
        // sort by room for stable sort across time buckets
        sessions: n.sort((r, i) => this.rooms.findIndex((u) => u.id === r.room.id) - this.rooms.findIndex((u) => u.id === i.room.id))
      }));
    }
  },
  watch: {
    currentDay: "changeDay"
  },
  async mounted() {
    var s, o;
    await this.$nextTick(), this.observer = new IntersectionObserver(this.onIntersect, {
      root: this.scrollParent,
      rootMargin: "-45% 0px"
    });
    let e;
    for (const [a, c] of Object.entries(this.$refs)) {
      if (!a.startsWith("bucket")) continue;
      const l = de.fromISO(c[0].dataset.date, { zone: this.timezone });
      e && e.toISODate() === l.toISODate() || (e = l, this.observer.observe(c[0]));
    }
    let t = !1;
    const n = window.location.hash.slice(1);
    if (n && n.length === 10 && de.fromISO(n, { zone: this.timezone }) && (t = !0), t) return;
    const r = this.sessionBuckets.findIndex((a) => this.now < a.date);
    if (r < 0) return;
    const i = this.sessionBuckets[Math.max(0, r - 1)], u = ((o = (s = this.$refs[this.getBucketName(i.date)]) == null ? void 0 : s[0]) == null ? void 0 : o.offsetTop) - 90;
    this.scrollParent ? this.scrollParent.scrollTop = u : window.scroll({ top: u + this.getOffsetTop() });
  },
  methods: {
    isProperSession(e) {
      return !!e.id;
    },
    getBucketName(e) {
      return `bucket-${e.toFormat("yyyy-LL-dd-HH-mm")}`;
    },
    getOffsetTop() {
      return this.$parent.$el.getBoundingClientRect().top + window.scrollY;
    },
    changeDay(e) {
      var i, u;
      if (((i = this.scrolledDay) == null ? void 0 : i.toISODate()) === e) return;
      const t = this.sessionBuckets.find((s) => e === s.date.toISODate());
      if (!t) return;
      const n = (u = this.$refs[this.getBucketName(t.date)]) == null ? void 0 : u[0];
      if (!n) return;
      const r = n.offsetTop + this.getOffsetTop() - 8;
      this.scrollParent ? this.scrollParent.scrollTop = r : window.scroll({ top: r });
    },
    onIntersect(e) {
      const t = e[0], n = de.fromISO(t.target.dataset.date, { zone: this.timezone }).startOf("day");
      t.isIntersecting ? (this.scrolledDay = n, this.$emit("changeDay", this.scrolledDay)) : t.rootBounds && t.boundingClientRect.y - t.rootBounds.y > 0 && (this.scrolledDay = n.minus({ days: 1 }), this.$emit("changeDay", this.scrolledDay));
    }
  }
}, D_ = /* @__PURE__ */ Pn(O_, [["render", S_], ["styles", [T_]]]), A_ = { class: "c-grid-schedule" }, F_ = ["data-slice"], M_ = { class: "time-box" }, N_ = {
  key: 0,
  class: "start has-ampm"
}, I_ = { class: "time" }, L_ = { class: "ampm" }, z_ = {
  key: 1,
  class: "start"
}, P_ = { class: "time" }, R_ = { class: "duration" }, j_ = { class: "info" }, B_ = { class: "title" };
function V_(e, t, n, r, i, u) {
  const s = et("bunt-button"), o = et("session");
  return N(), H("div", A_, [
    J("div", {
      class: "grid",
      style: yt(u.gridStyle)
    }, [
      (N(!0), H(Se, null, _t(u.visibleTimeslices, (a) => (N(), H(Se, null, [
        J("div", {
          class: It(["timeslice", u.getSliceClasses(a)]),
          ref_for: !0,
          ref: a.name,
          "data-slice": a.date.toISO(),
          style: yt(u.getSliceStyle(a))
        }, Ae(u.getSliceLabel(a)), 15, F_),
        J("div", {
          class: It(["timeline", u.getSliceClasses(a)]),
          style: yt(u.getSliceStyle(a))
        }, null, 6)
      ], 64))), 256)),
      u.nowSlice ? (N(), H("div", {
        key: 0,
        class: It(["now", { "on-daybreak": u.nowSlice.onDaybreak }]),
        ref: "now",
        style: yt({ "grid-area": `${u.nowSlice.slice.name} / 1 / auto / auto`, "--offset": u.nowSlice.offset })
      }, t[0] || (t[0] = [
        J("svg", { viewBox: "0 0 10 10" }, [
          J("path", { d: "M 0 0 L 10 5 L 0 10 z" })
        ], -1)
      ]), 6)) : Me("", !0),
      t[3] || (t[3] = J("div", {
        class: "room",
        style: { "grid-area": "1 / 1 / auto / auto" }
      }, null, -1)),
      (N(!0), H(Se, null, _t(n.rooms, (a, c) => (N(), H("div", {
        class: "room",
        style: yt({ "grid-area": `1 / ${c + 2} / auto / auto` })
      }, [
        En(Ae(i.getLocalizedString(a.name)), 1),
        i.getLocalizedString(a.description) ? (N(), ct(s, {
          key: 0,
          class: "room-description",
          tooltip: i.getLocalizedString(a.description),
          "tooltip-placement": "bottom-end"
        }, {
          default: sr(() => t[1] || (t[1] = [
            En("?")
          ])),
          _: 2
        }, 1032, ["tooltip"])) : Me("", !0)
      ], 4))), 256)),
      u.hasSessionsWithoutRoom ? (N(), H("div", {
        key: 1,
        class: "room",
        style: yt({ "grid-area": `1 / ${n.rooms.length + 2} / auto / -1` })
      }, "no location", 4)) : Me("", !0),
      (N(!0), H(Se, null, _t(n.sessions, (a) => (N(), H(Se, null, [
        u.isProperSession(a) ? (N(), ct(o, {
          key: 0,
          session: a,
          now: n.now,
          locale: n.locale,
          timezone: n.timezone,
          style: yt(u.getSessionStyle(a)),
          showAbstract: !1,
          showRoom: !1,
          faved: n.favs.includes(a.id),
          hasAmPm: n.hasAmPm,
          onHomeServer: n.onHomeServer,
          onFav: (c) => e.$emit("fav", a.id),
          onUnfav: (c) => e.$emit("unfav", a.id)
        }, null, 8, ["session", "now", "locale", "timezone", "style", "faved", "hasAmPm", "onHomeServer", "onFav", "onUnfav"])) : (N(), H("div", {
          key: 1,
          class: "break",
          style: yt(u.getSessionStyle(a))
        }, [
          J("div", M_, [
            n.hasAmPm ? (N(), H("div", N_, [
              J("div", I_, Ae(i.timeWithoutAmPm(a.start.setZone(n.timezone), n.locale)), 1),
              J("div", L_, Ae(i.timeAmPm(a.start.setZone(n.timezone), n.locale)), 1)
            ])) : (N(), H("div", z_, [
              J("div", P_, Ae(a.start.setZone(n.timezone).toLocaleString({ hour: "numeric", minute: "numeric" })), 1)
            ])),
            J("div", R_, Ae(i.getPrettyDuration(a.start, a.end)), 1),
            t[2] || (t[2] = J("div", { class: "buffer" }, null, -1))
          ]),
          J("div", j_, [
            J("div", B_, Ae(i.getLocalizedString(a.title)), 1)
          ])
        ], 4))
      ], 64))), 256))
    ], 4)
  ]);
}
const H_ = '.c-grid-schedule{flex:auto;background-color:#fafafa}.c-grid-schedule .grid{display:grid;grid-template-columns:78px repeat(var(--total-rooms),1fr) auto;position:relative;min-width:min-content}.c-grid-schedule .grid>.room{position:sticky;top:calc(var(--pretalx-sticky-date-offset) + var(--pretalx-sticky-top-offset, 0px));display:flex;justify-content:center;align-items:center;font-size:18px;background-color:#fff;border-bottom:1px solid rgba(0,0,0,.12);z-index:20}.c-grid-schedule .grid>.room .room-description{border:2px solid #bdbdbd;border-radius:100%;height:20px;width:20px;padding:0;font-weight:700;min-width:0;color:#9e9e9e;background-color:#fff;margin-left:8px}.c-grid-schedule .grid>.room .room-description:hover{background-color:#d9d9d9}.c-grid-schedule .grid>.room .room-description.autofocus:focus,body[modality=keyboard] .c-grid-schedule .grid>.room .room-description:focus{background-color:#d9d9d9;outline-color:#bfbfbf}.c-grid-schedule .grid>.room .room-description.autofocus:focus,body[modality=keyboard] .c-grid-schedule .grid>.room .room-description:focus{outline-width:2px;outline-offset:2px}.c-grid-schedule .grid>.room .room-description .bunt-ripple-ink .ripple.held{opacity:.7}.c-grid-schedule .grid>.room .room-description.error{background-color:#f44336}.c-grid-schedule .grid>.room .room-description.error:hover{background-color:#f01d0d}.c-grid-schedule .grid>.room .room-description.error.autofocus:focus,body[modality=keyboard] .c-grid-schedule .grid>.room .room-description.error:focus{background-color:#f01d0d;outline-color:#d4190c}.c-grid-schedule .grid>.room .room-description.success{background-color:#4caf50}.c-grid-schedule .grid>.room .room-description.success:hover{background-color:#419544}.c-grid-schedule .grid>.room .room-description.success.autofocus:focus,body[modality=keyboard] .c-grid-schedule .grid>.room .room-description.success:focus{background-color:#419544;outline-color:#39833c}.c-grid-schedule .grid>.room .room-description .bunt-progress-circular svg circle{stroke:#9e9e9e}.c-grid-schedule .grid>.room .room-description .bunt-tooltip{height:auto;width:200px;white-space:normal}.c-grid-schedule .grid .break .time-box{background-color:#9e9e9e}.c-grid-schedule .grid .break .time-box .start{color:#fff}.c-grid-schedule .grid .break .time-box .duration{color:#ffffffb3}.c-grid-schedule .grid .break .info{background-color:#eee;border:none;justify-content:center;align-items:center}.c-grid-schedule .grid .break .info .title{font-size:16px;font-weight:500;color:#0000008a;align:center}.c-grid-schedule .timeslice{color:#0000008a;padding:8px 10px 0 16px;white-space:nowrap;position:sticky;left:0;text-align:center;background-color:#fafafa;border-top:1px solid rgba(0,0,0,.12);z-index:20}.c-grid-schedule .timeslice.datebreak{font-weight:600;border-top:3px solid rgba(0,0,0,.12);white-space:pre}.c-grid-schedule .timeslice.gap:before{content:"";display:block;width:6px;height:calc(100% - 42px);position:absolute;top:30px;left:50%;background-image:radial-gradient(circle closest-side,#9e9e9e calc(100% - .5px),transparent 100%);background-position:0 0;background-size:5px 15px;background-repeat:repeat-y}.c-grid-schedule .timeline{height:1px;background-color:#0000001f;position:absolute;width:100%}.c-grid-schedule .timeline.datebreak{height:3px}.c-grid-schedule .now{z-index:20;position:sticky;left:2px}.c-grid-schedule .now:before{content:"";display:block;height:2px;background-color:#f44336;position:absolute;top:calc(var(--offset) * 100%);width:100%}.c-grid-schedule .now.on-daybreak:before{background:repeating-linear-gradient(to right,transparent,transparent 5px,#f44336 5px,#f44336 10px)}.c-grid-schedule .now svg{position:absolute;top:calc(var(--offset) * 100% - 11px);height:24px;width:24px;fill:#f44336}.c-grid-schedule .bunt-scrollbar-rail-wrapper-x,.c-grid-schedule .bunt-scrollbar-rail-wrapper-y{z-index:30}', ku = function(e) {
  return `slice-${e.toFormat("LL-dd-HH-mm")}`;
}, U_ = {
  components: { Session: Ms },
  props: {
    sessions: Array,
    rooms: Array,
    favs: {
      type: Array,
      default() {
        return [];
      }
    },
    currentDay: String,
    now: Object,
    timezone: String,
    locale: String,
    hasAmPm: Boolean,
    scrollParent: Element,
    onHomeServer: Boolean
  },
  data() {
    return {
      getLocalizedString: kr,
      getPrettyDuration: eh,
      timeWithoutAmPm: th,
      timeAmPm: nh
    };
  },
  computed: {
    hasSessionsWithoutRoom() {
      return this.sessions.some((e) => !e.room);
    },
    timeslices() {
      const t = [], n = {}, r = function(a, { hasSession: c = !1, hasBreak: l = !1, hasStart: f = !1, hasEnd: m = !1 } = {}) {
        const p = ku(a);
        let h = n[p];
        h ? (h.hasSession = h.hasSession || c, h.hasBreak = h.hasBreak || l, h.hasStart = h.hasStart || f, h.hasEnd = h.hasEnd || m) : (h = {
          date: a,
          name: p,
          hasSession: c,
          hasBreak: l,
          hasStart: f,
          hasEnd: m,
          datebreak: a.equals(a.startOf("day"))
        }, t.push(h), n[p] = h);
      }, i = function(a, c, { hasSession: l, hasBreak: f } = {}) {
        let m = c.diff(a).shiftTo("minutes").minutes;
        const p = 30 - a.minute % 30, h = [];
        p && (h.push(a.plus({ minutes: p })), m -= p);
        const E = c.minute % 30;
        for (let L = 1; L <= m / 30; L++)
          h.push(a.plus({ minutes: p + 30 * L }));
        E && h.push(c.minus({ minutes: E }));
        const C = h.pop();
        h.forEach((L) => r(L, { hasSession: l, hasBreak: f })), r(C);
      };
      for (const a of this.sessions) {
        const c = t[t.length - 1];
        c ? a.start > c.date && i(c.date, a.start) : r(a.start.startOf("day"));
        const l = this.isProperSession(a);
        r(a.start, { hasSession: l, hasBreak: !l, hasStart: !0 }), r(a.end, { hasEnd: !0 }), i(a.start, a.end, { hasSession: l, hasBreak: !l });
      }
      const u = function(a) {
        if (a)
          return a.date.minute !== 0 && a.date.minute !== 30;
      }, s = function(a, c) {
        if (!a) return;
        if (a.hasSession || a.datebreak || a.hasStart || a.hasEnd) return !0;
        const l = t[c - 1], f = t[c + 1];
        return u(a) || (l != null && l.hasSession || l != null && l.hasBreak || l != null && l.hasEnd) && u(l) || (f != null && f.hasSession || f != null && f.hasBreak) && u(f) || (!(f != null && f.hasSession) || !(f != null && f.hasBreak)) && (a.hasSession || a.hasBreak) && u(f) ? !0 : (l != null && l.hasBreak && a.hasBreak, !1);
      };
      t.sort((a, c) => a.date.diff(c.date));
      const o = [];
      for (const [a, c] of t.entries()) {
        if (s(c, a)) {
          o.push(c);
          continue;
        }
        const l = t[a - 1];
        s(l, a - 1) && !l.datebreak && (l.gap = !0);
      }
      return o.forEach((a, c) => {
        a.gap && c < o.length - 1 && o[c + 1].date.diff(a.date).shiftTo("minutes").minutes <= 30 && (a.gap = !1);
      }), o[o.length - 1].gap && o.pop(), o;
    },
    visibleTimeslices() {
      return this.timeslices.filter((e) => e.date.minute % 30 === 0);
    },
    gridStyle() {
      let e = "[header] 52px ";
      return e += this.timeslices.map((t, n) => {
        const r = this.timeslices[n + 1];
        let i = 60;
        return t.gap ? i = 100 : t.datebreak ? i = 60 : r && (i = Math.min(60, r.date.diff(t.date).shiftTo("minutes").minutes * 2)), `[${t.name}] minmax(${i}px, auto)`;
      }).join(" "), {
        "--total-rooms": this.rooms.length,
        "grid-template-rows": e
      };
    },
    nowSlice() {
      let e;
      for (const t of this.timeslices) {
        if (this.now < t.date) break;
        e = t;
      }
      if (e) {
        const t = this.timeslices[this.timeslices.indexOf(e) + 1];
        return t ? t.date.diff(e.date).shiftTo("minutes").minutes > 30 ? {
          slice: t,
          offset: 0,
          onDaybreak: !0
        } : {
          slice: e,
          offset: this.now.diff(e.date).shiftTo("minutes").minutes / t.date.diff(e.date).shiftTo("minutes").minutes
        } : null;
      }
      return null;
    }
  },
  watch: {
    currentDay: "changeDay"
  },
  async mounted() {
    this.observer = new IntersectionObserver(this.onIntersect, {
      root: this.scrollParent,
      rootMargin: "-45% 0px"
    });
    for (const [r, i] of Object.entries(this.$refs))
      !r.startsWith("slice") || !r.endsWith("00-00") || this.observer.observe(i[0]);
    await this.$nextTick();
    let e = !1;
    const t = window.location.hash.slice(1);
    if (t && t.length === 10 && de.fromISO(t, { zone: this.timezone }) && (e = !0), e || !this.$refs.now) return;
    const n = this.$refs.now.offsetTop + this.getOffsetTop();
    this.scrollParent ? this.scrollParent.scrollTop = n : window.scroll({ top: n });
  },
  methods: {
    isProperSession(e) {
      return !!e.id;
    },
    getSessionStyle(e) {
      const t = this.rooms.indexOf(e.room);
      return {
        "grid-row": `${ku(e.start)} / ${ku(e.end)}`,
        "grid-column": t > -1 ? t + 2 : null
      };
    },
    getOffsetTop() {
      return window.scrollY + this.$el.getBoundingClientRect().top - 100;
    },
    getScrolledDay() {
      var e;
      for (const t of this.timeslices) {
        const n = (e = this.$refs[t.name]) == null ? void 0 : e[0];
        if (!n) continue;
        const r = n.getBoundingClientRect(), i = 100;
        if (r.top + i < window.innerHeight && r.bottom - i > 0)
          return t.date;
      }
    },
    getSliceClasses(e) {
      return {
        datebreak: e.datebreak,
        gap: e.gap
      };
    },
    getSliceStyle(e) {
      if (e.datebreak) {
        let t = this.timeslices.findIndex((n) => n.date.startOf("day") > e.date.startOf("day"));
        return t < 0 && (t = this.timeslices.length - 1), { "grid-area": `${e.name} / 1 / ${this.timeslices[t].name} / auto` };
      }
      return { "grid-area": `${e.name} / 1 / auto / auto` };
    },
    getSliceLabel(e) {
      if (e.datebreak) {
        const t = e.date;
        return t.toLocaleString({ weekday: "short" }) + `
` + t.toLocaleString({ day: "numeric", month: "short" });
      }
      return e.date.setZone(this.timezone).toLocaleString({ hour: "numeric", minute: "numeric" });
    },
    changeDay(e) {
      var r, i;
      if (((r = this.getScrolledDay()) == null ? void 0 : r.toISODate()) === e) return;
      const t = (i = this.$refs[ku(de.fromISO(e))]) == null ? void 0 : i[0];
      if (!t) return;
      const n = t.offsetTop + this.getOffsetTop();
      this.scrollParent ? this.scrollParent.scrollTop = n : window.scroll({ top: n });
    },
    onIntersect(e) {
      const t = e.sort((r, i) => i.ts - r.ts).find((r) => r.isIntersecting);
      if (!t) return;
      const n = de.fromISO(t.target.dataset.slice).startOf("day");
      n.toISODate() !== this.currentDay && this.$emit("changeDay", n);
    }
  }
}, q_ = /* @__PURE__ */ Pn(U_, [["render", V_], ["styles", [H_]]]), W_ = { class: "c-grid-schedule-wrapper" };
function $_(e, t, n, r, i, u) {
  const s = et("grid-schedule");
  return N(), H("div", W_, [
    (N(!0), H(Se, null, _t(u.gridGroups, (o) => (N(), ct(s, {
      key: o.days.join("-"),
      sessions: o.sessions,
      rooms: o.rooms,
      currentDay: n.currentDay,
      now: n.now,
      hasAmPm: n.hasAmPm,
      timezone: n.timezone,
      locale: n.locale,
      scrollParent: n.scrollParent,
      favs: n.favs,
      onHomeServer: n.onHomeServer,
      onChangeDay: t[0] || (t[0] = (a) => e.$emit("changeDay", a)),
      onFav: t[1] || (t[1] = (a) => e.$emit("fav", a)),
      onUnfav: t[2] || (t[2] = (a) => e.$emit("unfav", a))
    }, null, 8, ["sessions", "rooms", "currentDay", "now", "hasAmPm", "timezone", "locale", "scrollParent", "favs", "onHomeServer"]))), 128))
  ]);
}
const Z_ = {
  components: { GridSchedule: q_ },
  props: {
    sessions: Array,
    rooms: Array,
    favs: {
      type: Array,
      default() {
        return [];
      }
    },
    days: Array,
    currentDay: String,
    now: Object,
    timezone: String,
    locale: String,
    hasAmPm: Boolean,
    scrollParent: Element,
    onHomeServer: Boolean
  },
  computed: {
    gridGroups() {
      const e = /* @__PURE__ */ new Map();
      for (const i of this.sessions) {
        const u = i.start.setZone(this.timezone).startOf("day"), s = i.end.setZone(this.timezone).startOf("day");
        for (let o = u; o <= s; o = o.plus({ days: 1 })) {
          const a = o.toISODate();
          e.has(a) || e.set(a, []), e.get(a).push(i);
        }
      }
      const t = Array.from(e.keys()).map((i) => ({
        days: [i],
        sessions: new Set(e.get(i)),
        rooms: new Set(e.get(i).map((u) => u.room))
      }));
      (/* @__PURE__ */ new Map()).set(t[0].days[0], t[0]);
      const r = [];
      for (const i of t) {
        const u = r[r.length - 1];
        if (!u) {
          r.push(i);
          continue;
        }
        const s = i.sessions.intersection(u.sessions).size > 0, o = i.rooms.symmetricDifference(u.rooms).size === 0;
        s || o ? (u.days.push(...i.days), u.sessions = /* @__PURE__ */ new Set([...u.sessions, ...i.sessions]), u.rooms = /* @__PURE__ */ new Set([...u.rooms, ...i.rooms])) : r.push(i);
      }
      for (const i of r)
        i.rooms = this.rooms.filter((u) => i.rooms.has(u)), i.sessions = Array.from(i.sessions);
      return r;
    }
  }
}, G_ = /* @__PURE__ */ Pn(Z_, [["render", $_]]), Y_ = { class: "settings" }, K_ = {
  key: 3,
  class: "timezone-label timezone-item bunt-tab-header-item"
};
function J_(e, t, n, r, i, u) {
  const s = et("bunt-button"), o = et("bunt-select");
  return N(), H("div", Y_, [
    n.tracks.length ? (N(), ct(s, {
      key: 0,
      class: "filter-tracks",
      onClick: t[0] || (t[0] = (a) => e.$emit("openFilter"))
    }, {
      default: sr(() => [
        t[4] || (t[4] = J("svg", {
          id: "filter",
          viewBox: "0 0 752 752"
        }, [
          J("path", { d: "m401.57 264.71h-174.75c-6.6289 0-11.84 5.2109-11.84 11.84 0 6.6289 5.2109 11.84 11.84 11.84h174.75c5.2109 17.523 21.312 30.309 40.727 30.309 18.941 0 35.52-12.785 40.254-30.309h43.098c6.6289 0 11.84-5.2109 11.84-11.84 0-6.6289-5.2109-11.84-11.84-11.84h-43.098c-5.2109-17.523-21.312-30.309-40.254-30.309-19.414 0-35.516 12.785-40.727 30.309zm58.723 11.84c0 10.418-8.5234 18.469-18.469 18.469s-18.469-8.0508-18.469-18.469 8.5234-18.469 18.469-18.469c9.4727-0.003906 18.469 8.0469 18.469 18.469z" }),
          J("path", { d: "m259.5 359.43h-32.676c-6.6289 0-11.84 5.2109-11.84 11.84s5.2109 11.84 11.84 11.84h32.676c5.2109 17.523 21.312 30.309 40.727 30.309 18.941 0 35.52-12.785 40.254-30.309h185.17c6.6289 0 11.84-5.2109 11.84-11.84s-5.2109-11.84-11.84-11.84h-185.17c-5.2109-17.523-21.312-30.309-40.254-30.309-19.418 0-35.52 12.785-40.73 30.309zm58.723 11.84c0 10.418-8.5234 18.469-18.469 18.469-9.9453 0-18.469-8.0508-18.469-18.469s8.5234-18.469 18.469-18.469c9.9453 0 18.469 8.0508 18.469 18.469z" }),
          J("path", { d: "m344.75 463.61h-117.92c-6.6289 0-11.84 5.2109-11.84 11.84s5.2109 11.84 11.84 11.84h117.92c5.2109 17.523 21.312 30.309 40.727 30.309 18.941 0 35.52-12.785 40.254-30.309h99.926c6.6289 0 11.84-5.2109 11.84-11.84s-5.2109-11.84-11.84-11.84h-99.926c-5.2109-17.523-21.312-30.309-40.254-30.309-19.418 0-35.52 12.785-40.727 30.309zm58.723 11.84c0 10.418-8.5234 18.469-18.469 18.469s-18.469-8.0508-18.469-18.469 8.5234-18.469 18.469-18.469 18.469 8.0508 18.469 18.469z" })
        ], -1)),
        t[5] || (t[5] = En("Filter")),
        n.filteredTracksCount ? (N(), H(Se, { key: 0 }, [
          En("(" + Ae(n.filteredTracksCount) + ")", 1)
        ], 64)) : Me("", !0)
      ]),
      _: 1
    })) : Me("", !0),
    n.favsCount ? (N(), ct(s, {
      key: 1,
      class: It(["fav-toggle", n.onlyFavs ? ["active"] : []]),
      onClick: t[1] || (t[1] = (a) => e.$emit("toggleFavs"))
    }, {
      default: sr(() => [
        t[6] || (t[6] = J("svg", {
          id: "star",
          viewBox: "0 0 24 24"
        }, [
          J("polygon", {
            style: { fill: "#FFA000", stroke: "#FFA000" },
            points: "14.43,10 12,2 9.57,10 2,10 8.18,14.41 5.83,22 12,17.31 18.18,22 15.83,14.41 22,10"
          })
        ], -1)),
        En(Ae(n.favsCount), 1)
      ]),
      _: 1
    }, 8, ["class"])) : Me("", !0),
    n.inEventTimezone ? (N(), H("div", K_, Ae(n.scheduleTimezone), 1)) : (N(), ct(o, {
      key: 2,
      class: "timezone-item",
      name: "timezone",
      options: u.timezoneOptions,
      modelValue: u.timezoneModel,
      "onUpdate:modelValue": t[2] || (t[2] = (a) => u.timezoneModel = a),
      onBlur: t[3] || (t[3] = (a) => e.$emit("saveTimezone"))
    }, null, 8, ["options", "modelValue"]))
  ]);
}
const X_ = ".settings{align-self:flex-start;display:flex;align-items:center;z-index:100;width:var(--schedule-max-width)}.settings .fav-toggle{margin-right:8px;display:flex}.settings .fav-toggle.active{border:#ffa000 2px solid}.settings .fav-toggle .bunt-button-text{display:flex;align-items:center}.settings .fav-toggle svg{width:20px;height:20px;margin-right:6px}.settings .filter-tracks{margin:0 8px;display:flex}.settings .filter-tracks .bunt-button-text{display:flex;align-items:center;padding-right:8px}.settings .filter-tracks svg{width:36px;height:36px;margin-right:6px}.settings .bunt-select{max-width:300px;padding-right:8px}.settings .timezone-label{cursor:default;color:#0000008a}.settings .timezone-item{margin-left:auto}", Q_ = {
  name: "ScheduleSettings",
  props: {
    tracks: {
      type: Array,
      default: () => []
    },
    filteredTracksCount: {
      type: Number,
      default: 0
    },
    favsCount: {
      type: Number,
      default: 0
    },
    onlyFavs: {
      type: Boolean,
      default: !1
    },
    inEventTimezone: {
      type: Boolean,
      default: !0
    },
    currentTimezone: String,
    scheduleTimezone: String,
    userTimezone: String
  },
  emits: ["openFilter", "toggleFavs", "saveTimezone", "update:currentTimezone"],
  computed: {
    timezoneOptions() {
      return [
        { id: this.scheduleTimezone, label: this.scheduleTimezone },
        { id: this.userTimezone, label: this.userTimezone }
      ];
    },
    timezoneModel: {
      get() {
        return this.currentTimezone;
      },
      set(e) {
        this.$emit("update:currentTimezone", e);
      }
    }
  }
}, ex = /* @__PURE__ */ Pn(Q_, [["render", J_], ["styles", [X_]]]), tx = { class: "card-content" }, nx = { class: "facts" }, rx = { class: "time" }, ix = {
  key: 0,
  class: "ampm"
}, ux = {
  key: 0,
  class: "room"
}, sx = { class: "text-content" }, ox = ["innerHTML"], ax = { key: 0 }, lx = ["innerHTML"], cx = { class: "answers" }, fx = {
  key: 0,
  class: "icon-group"
}, dx = ["href"], hx = ["src", "alt"], px = { key: 1 }, mx = { class: "question" }, bx = {
  key: 0,
  class: "answer"
}, gx = ["href"], yx = { key: 1 }, _x = {
  key: 1,
  class: "answer"
}, xx = ["innerHTML"], vx = {
  key: 3,
  class: "answer"
}, kx = {
  key: 0,
  class: "speakers"
}, wx = ["onClick", "href"], Ex = { class: "img-wrapper" }, Cx = ["src", "alt"], Sx = {
  key: 1,
  class: "avatar-placeholder"
}, Tx = { class: "inner-card-content" }, Ox = ["innerHTML"], Dx = { class: "speaker-details" }, Ax = { class: "speaker-content card-content" }, Fx = { class: "text-content" }, Mx = ["innerHTML"], Nx = { class: "img-wrapper" }, Ix = ["src", "alt"], Lx = {
  key: 1,
  class: "avatar-placeholder"
}, zx = {
  key: 0,
  class: "answers"
}, Px = {
  key: 0,
  class: "icon-group"
}, Rx = ["href"], jx = ["src", "alt"], Bx = { key: 1 }, Vx = {
  key: 0,
  class: "question"
}, Hx = ["href"], Ux = { class: "question" }, qx = {
  key: 0,
  class: "answer"
}, Wx = ["href"], $x = { key: 1 }, Zx = {
  key: 1,
  class: "answer"
}, Gx = ["innerHTML"], Yx = {
  key: 3,
  class: "answer"
}, Kx = { class: "speaker-sessions" };
function Jx(e, t, n, r, i, u) {
  var c, l, f, m, p, h, E;
  const s = et("fav-button"), o = et("bunt-progress-circular"), a = et("session");
  return N(), H("dialog", {
    class: "pretalx-modal",
    id: "session-modal",
    ref: "modal",
    onClick: t[3] || (t[3] = ei((C) => u.close(), ["stop"]))
  }, [
    J("div", {
      class: "dialog-inner",
      onClick: t[2] || (t[2] = ei(() => {
      }, ["stop"]))
    }, [
      J("button", {
        class: "close-button",
        onClick: t[0] || (t[0] = (C) => u.close())
      }, "✕"),
      n.modalContent && n.modalContent.contentType === "session" ? (N(), H(Se, { key: 0 }, [
        J("h3", null, [
          En(Ae(n.modalContent.contentObject.title), 1),
          J("div", {
            class: It(["button-container", n.modalContent.contentObject.faved ? "faved" : ""])
          }, [
            Re(s, {
              onToggleFav: t[1] || (t[1] = (C) => e.$emit("toggleFav", n.modalContent.contentObject.id))
            })
          ], 2)
        ]),
        J("div", tx, [
          J("div", nx, [
            J("div", rx, [
              J("span", null, Ae(n.modalContent.contentObject.start.toLocaleString({ weekday: "long", day: "numeric", month: "long" })) + ", " + Ae(i.getSessionTime(n.modalContent.contentObject, n.currentTimezone, n.locale, n.hasAmPm).time), 1),
              i.getSessionTime(n.modalContent.contentObject, n.currentTimezone, n.locale, n.hasAmPm).ampm ? (N(), H("span", ix, Ae(i.getSessionTime(n.modalContent.contentObject, n.currentTimezone, n.locale, n.hasAmPm).ampm), 1)) : Me("", !0)
            ]),
            n.modalContent.contentObject.room ? (N(), H("div", ux, Ae(i.getLocalizedString(n.modalContent.contentObject.room.name)), 1)) : Me("", !0),
            n.modalContent.contentObject.track ? (N(), H("div", {
              key: 1,
              class: "track",
              style: yt({ color: n.modalContent.contentObject.track.color })
            }, Ae(i.getLocalizedString(n.modalContent.contentObject.track.name)), 5)) : Me("", !0)
          ]),
          J("div", sx, [
            n.modalContent.contentObject.abstract ? (N(), H("div", {
              key: 0,
              class: "abstract",
              innerHTML: i.markdownIt.render(n.modalContent.contentObject.abstract)
            }, null, 8, ox)) : Me("", !0),
            n.modalContent.contentObject.isLoading ? (N(), ct(o, {
              key: 1,
              size: "big",
              page: !0
            })) : (N(), H(Se, { key: 2 }, [
              ((c = n.modalContent.contentObject.abstract) == null ? void 0 : c.length) > 0 && ((f = (l = n.modalContent.contentObject.apiContent) == null ? void 0 : l.description) == null ? void 0 : f.length) > 0 ? (N(), H("hr", ax)) : Me("", !0),
              ((p = (m = n.modalContent.contentObject.apiContent) == null ? void 0 : m.description) == null ? void 0 : p.length) > 0 ? (N(), H("div", {
                key: 1,
                class: "description",
                innerHTML: i.markdownIt.render(n.modalContent.contentObject.apiContent.description)
              }, null, 8, lx)) : Me("", !0),
              u.shortAnswers.length > 0 || u.iconAnswers.length > 0 ? (N(), H(Se, { key: 2 }, [
                t[5] || (t[5] = J("hr", null, null, -1)),
                J("div", cx, [
                  u.iconAnswers.length > 0 ? (N(), H("div", fx, [
                    (N(!0), H(Se, null, _t(u.iconAnswers, (C) => (N(), H("div", {
                      class: "icon-link",
                      key: C.id
                    }, [
                      J("a", {
                        href: C.answer,
                        target: "_blank",
                        rel: "noopener noreferrer"
                      }, [
                        C.question.icon && u.remoteApiUrl ? (N(), H("img", {
                          key: 0,
                          src: `${u.remoteApiUrl}questions/${C.question.id}/icon/`,
                          alt: i.getLocalizedString(C.question.question),
                          width: "16",
                          height: "16"
                        }, null, 8, hx)) : (N(), H("span", px, Ae(i.getLocalizedString(C.question.question)), 1))
                      ], 8, dx)
                    ]))), 128))
                  ])) : Me("", !0),
                  (N(!0), H(Se, null, _t(u.shortAnswers, (C) => (N(), H("div", {
                    class: "inline-answer",
                    key: C.id
                  }, [
                    J("span", mx, [
                      J("strong", null, Ae(i.getLocalizedString(C.question.question)) + ":", 1)
                    ]),
                    C.question.variant === "file" ? (N(), H("span", bx, [
                      t[4] || (t[4] = J("i", { class: "fa fa-file-o" }, null, -1)),
                      C.answer_file ? (N(), H("a", {
                        key: 0,
                        href: C.answer_file.url
                      }, Ae(C.answer_file), 9, gx)) : (N(), H("span", yx, "No file provided"))
                    ])) : C.question.variant === "boolean" ? (N(), H("span", _x, Ae(C.answer ? "Yes" : "No"), 1)) : C.answer ? (N(), H("span", {
                      key: 2,
                      class: "answer",
                      innerHTML: i.markdownIt.render(C.answer)
                    }, null, 8, xx)) : (N(), H("span", vx, "No response"))
                  ]))), 128))
                ])
              ], 64)) : Me("", !0)
            ], 64))
          ])
        ]),
        n.modalContent.contentObject.speakers ? (N(), H("div", kx, [
          (N(!0), H(Se, null, _t(n.modalContent.contentObject.speakers, (C) => {
            var L, T;
            return N(), H("a", {
              class: "speaker inner-card",
              onClick: (b) => u.handleSpeakerClick(C, b),
              href: `#speaker/${C.code}`,
              key: C.code
            }, [
              J("div", Ex, [
                C.avatar ? (N(), H("img", {
                  key: 0,
                  src: C.avatar,
                  alt: C.name
                }, null, 8, Cx)) : (N(), H("div", Sx, t[6] || (t[6] = [
                  J("svg", { viewBox: "0 0 24 24" }, [
                    J("path", {
                      fill: "currentColor",
                      d: "M12,1A5.8,5.8 0 0,1 17.8,6.8A5.8,5.8 0 0,1 12,12.6A5.8,5.8 0 0,1 6.2,6.8A5.8,5.8 0 0,1 12,1M12,15C18.63,15 24,17.67 24,21V23H0V21C0,17.67 5.37,15 12,15Z"
                    })
                  ], -1)
                ])))
              ]),
              J("div", Tx, [
                J("span", null, Ae(C.name), 1),
                ((T = (L = C.apiContent) == null ? void 0 : L.biography) == null ? void 0 : T.length) > 0 ? (N(), H("p", {
                  key: 0,
                  class: "biography",
                  innerHTML: i.markdownIt.render(C.apiContent.biography)
                }, null, 8, Ox)) : Me("", !0)
              ])
            ], 8, wx);
          }), 128))
        ])) : Me("", !0)
      ], 64)) : Me("", !0),
      n.modalContent && n.modalContent.contentType === "speaker" ? (N(), H(Se, { key: 1 }, [
        J("div", Dx, [
          J("h3", null, Ae(n.modalContent.contentObject.name), 1),
          J("div", Ax, [
            J("div", Fx, [
              n.modalContent.contentObject.isLoading ? (N(), ct(o, {
                key: 0,
                size: "big",
                page: !0
              })) : (N(), H(Se, { key: 1 }, [
                ((E = (h = n.modalContent.contentObject.apiContent) == null ? void 0 : h.biography) == null ? void 0 : E.length) > 0 ? (N(), H("div", {
                  key: 0,
                  class: "biography",
                  innerHTML: i.markdownIt.render(n.modalContent.contentObject.apiContent.biography)
                }, null, 8, Mx)) : Me("", !0)
              ], 64))
            ]),
            J("div", {
              class: It(["speaker-avatar-container", { "outline-container": u.shortAnswers.length > 0 || u.iconAnswers.length > 0 }])
            }, [
              J("div", Nx, [
                n.modalContent.contentObject.avatar ? (N(), H("img", {
                  key: 0,
                  src: n.modalContent.contentObject.avatar,
                  alt: n.modalContent.contentObject.name
                }, null, 8, Ix)) : (N(), H("div", Lx, t[7] || (t[7] = [
                  J("svg", { viewBox: "0 0 24 24" }, [
                    J("path", {
                      fill: "currentColor",
                      d: "M12,1A5.8,5.8 0 0,1 17.8,6.8A5.8,5.8 0 0,1 12,12.6A5.8,5.8 0 0,1 6.2,6.8A5.8,5.8 0 0,1 12,1M12,15C18.63,15 24,17.67 24,21V23H0V21C0,17.67 5.37,15 12,15Z"
                    })
                  ], -1)
                ])))
              ]),
              u.shortAnswers.length > 0 || u.iconAnswers.length > 0 ? (N(), H("div", zx, [
                t[9] || (t[9] = J("hr", null, null, -1)),
                u.iconAnswers.length > 0 ? (N(), H("div", Px, [
                  (N(!0), H(Se, null, _t(u.iconAnswers, (C) => (N(), H("div", {
                    class: "icon-link",
                    key: C.id
                  }, [
                    J("a", {
                      href: C.answer,
                      target: "_blank",
                      rel: "noopener noreferrer"
                    }, [
                      C.question.icon && u.remoteApiUrl ? (N(), H("img", {
                        key: 0,
                        src: `${u.remoteApiUrl}questions/${C.question.id}/icon/`,
                        alt: i.getLocalizedString(C.question.question),
                        width: "16",
                        height: "16"
                      }, null, 8, jx)) : (N(), H("span", Bx, Ae(i.getLocalizedString(C.question.question)), 1))
                    ], 8, Rx)
                  ]))), 128))
                ])) : Me("", !0),
                (N(!0), H(Se, null, _t(u.shortAnswers, (C) => (N(), H("div", {
                  class: "inline-answer",
                  key: C.id
                }, [
                  C.question.variant === "url" && C.answer ? (N(), H("strong", Vx, [
                    J("a", {
                      href: C.answer,
                      target: "_blank",
                      rel: "noopener noreferrer"
                    }, Ae(i.getLocalizedString(C.question.question)), 9, Hx)
                  ])) : (N(), H(Se, { key: 1 }, [
                    J("span", Ux, [
                      J("strong", null, Ae(i.getLocalizedString(C.question.question)) + ":", 1)
                    ]),
                    C.question.variant === "file" ? (N(), H("span", qx, [
                      t[8] || (t[8] = J("i", { class: "fa fa-file-o" }, null, -1)),
                      C.answer_file ? (N(), H("a", {
                        key: 0,
                        href: C.answer_file.url
                      }, Ae(C.answer_file), 9, Wx)) : (N(), H("span", $x, "No file provided"))
                    ])) : C.question.variant === "boolean" ? (N(), H("span", Zx, Ae(C.answer ? "Yes" : "No"), 1)) : C.answer ? (N(), H("span", {
                      key: 2,
                      class: "answer",
                      innerHTML: i.markdownIt.render(C.answer)
                    }, null, 8, Gx)) : (N(), H("span", Yx, "No response"))
                  ], 64))
                ]))), 128))
              ])) : Me("", !0)
            ], 2)
          ])
        ]),
        J("div", Kx, [
          (N(!0), H(Se, null, _t(n.modalContent.contentObject.sessions, (C) => (N(), ct(a, {
            session: C,
            showDate: !0,
            now: n.now,
            timezone: n.currentTimezone,
            locale: n.locale,
            hasAmPm: n.hasAmPm,
            faved: C.faved,
            onHomeServer: n.onHomeServer,
            onFav: (L) => e.$emit("fav", C.id),
            onUnfav: (L) => e.$emit("unfav", C.id)
          }, null, 8, ["session", "now", "timezone", "locale", "hasAmPm", "faved", "onHomeServer", "onFav", "onUnfav"]))), 256))
        ])
      ], 64)) : Me("", !0)
    ])
  ], 512);
}
const Xx = '.pretalx-modal{padding:0;border-radius:8px;border:0;box-shadow:0 -2px 4px #0000000f,0 1px 3px #0000001f,0 8px 24px #00000026,0 16px 32px #00000017;width:calc(100vw - 32px);max-width:848px;max-height:calc(100vh - 64px);overflow-y:auto;font-size:16px}.pretalx-modal .dialog-inner{padding:16px 24px;margin:0}.pretalx-modal .close-button{position:absolute;top:0;right:4px;background:none;border:none;cursor:pointer;padding:8px;color:#757575;font-size:22px;font-weight:700}.pretalx-modal .close-button:hover{color:#212121}.pretalx-modal h3{margin:8px 0;display:flex;align-items:center}.pretalx-modal .ampm{margin-left:4px}.pretalx-modal .facts{display:flex;flex-wrap:wrap;color:#757575;margin-bottom:8px;border-bottom:1px solid #e0e0e0}.pretalx-modal .facts>*{margin-right:4px;margin-bottom:8px}.pretalx-modal .facts>*:not(:last-child):after{content:","}.pretalx-modal .card-content{display:flex;flex-direction:column}.pretalx-modal .text-content{margin-bottom:8px}.pretalx-modal .text-content .abstract{font-weight:700}.pretalx-modal .text-content p{font-size:16px}.pretalx-modal .text-content hr{color:#ced4da;height:0;border:0;border-top:1px solid #e0e0e0;margin:16px 0}.pretalx-modal .answers .icon-group{display:flex;flex-wrap:wrap;gap:8px;margin-top:2px;margin-bottom:0}.pretalx-modal .answers .icon-group .icon-link{display:inline-flex;align-items:center;margin-right:8px}.pretalx-modal .answers .icon-group .icon-link:last-child{margin-right:0}.pretalx-modal .answers .icon-group .icon-link a{display:flex;align-items:center;text-decoration:none;color:var(--pretalx-clr-primary)}.pretalx-modal .answers .icon-group .icon-link a:hover{text-decoration:underline}.pretalx-modal .answers .icon-group .icon-link a img{margin-right:4px}.pretalx-modal .answers .inline-answer{display:block;margin-bottom:8px}.pretalx-modal .answers .inline-answer .question{color:var(--pretalx-clr-text);margin-right:4px}.pretalx-modal .answers .inline-answer .question strong{font-weight:600}.pretalx-modal .answers .inline-answer .answer{color:var(--pretalx-clr-text)}.pretalx-modal .answers .inline-answer .answer p{margin:0;display:inline}.pretalx-modal .answers .inline-answer .answer .fa{margin-right:4px}.pretalx-modal .answers .inline-answer .answer a{color:var(--pretalx-clr-primary);text-decoration:none}.pretalx-modal .answers .inline-answer .answer a:hover{text-decoration:underline}.pretalx-modal .inner-card{display:flex;margin-bottom:12px;cursor:pointer;border-radius:6px;border:1px solid #ced4da;min-height:96px;align-items:flex-start;padding:8px;text-decoration:none;color:var(--pretalx-clr-primary)}.pretalx-modal .inner-card .inner-card-content{margin-top:8px;margin-left:8px}.pretalx-modal .inner-card .inner-card-content p{color:var(--pretalx-clr-text);font-size:14px}.pretalx-modal .inner-card .img-wrapper,.pretalx-modal .inner-card .img-wrapper img,.pretalx-modal .inner-card .img-wrapper .avatar-placeholder{width:100px;height:100px}.pretalx-modal .img-wrapper{padding:4px 16px 4px 4px;width:140px;height:140px}.pretalx-modal .img-wrapper img,.pretalx-modal .img-wrapper .avatar-placeholder{width:140px;height:140px;border-radius:50%;box-shadow:#0000001f 0 1px 3px,#0000003d 0 1px 2px}.pretalx-modal .img-wrapper img{object-fit:cover}.pretalx-modal .img-wrapper .avatar-placeholder{background:#0000001a;display:flex;align-items:center;justify-content:center}.pretalx-modal .img-wrapper .avatar-placeholder svg{width:60%;height:60%;color:#0000004d}.pretalx-modal .speaker-details h3{margin-bottom:0}.pretalx-modal .speaker-details .speaker-content{display:flex;flex-direction:row;align-items:flex-start;justify-content:space-between;margin-bottom:16px}.pretalx-modal .speaker-details .speaker-content .biography{margin-top:8px}.pretalx-modal .speaker-details .speaker-avatar-container.outline-container{border:1px solid var(--pretalx-clr-primary);box-shadow:#0000003d 0 1px 2px;border-radius:6px;padding:12px;margin-right:8px;display:flex;flex-direction:column;align-items:center}.pretalx-modal .speaker-details .speaker-avatar-container.outline-container .img-wrapper{padding:0 0 8px}.pretalx-modal .speaker-details .speaker-avatar-container .answers hr{color:#ced4da;height:0;border:0;border-top:1px solid #e0e0e0;margin:8px 0}.pretalx-modal .speaker-details .speaker-avatar-container .answers .icon-group{justify-content:center}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer{margin-top:8px}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer .question{color:var(--pretalx-clr-text);margin-right:4px}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer .question strong{font-weight:600}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer .answer{color:var(--pretalx-clr-text)}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer .answer p{margin:0;display:inline}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer .answer .fa{margin-right:4px}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer .answer a{color:var(--pretalx-clr-primary);text-decoration:none}.pretalx-modal .speaker-details .speaker-avatar-container .answers .inline-answer .answer a:hover{text-decoration:underline}', Qx = Ht({
  linkify: !1,
  breaks: !0
}), e6 = {
  name: "SessionModal",
  components: { FavButton: Pa, Session: Ms },
  inject: {
    remoteApiUrl: { default: "" }
  },
  props: {
    modalContent: Object,
    currentTimezone: String,
    locale: String,
    hasAmPm: Boolean,
    now: Object,
    onHomeServer: Boolean
  },
  emits: ["toggleFav", "showSpeaker", "fav", "unfav"],
  data() {
    return {
      markdownIt: Qx,
      getLocalizedString: kr,
      getSessionTime: es
    };
  },
  computed: {
    shortAnswers() {
      const e = this.modalContent.contentObject.apiContent;
      return !e || !e.answers || !e.answers.length ? [] : e.answers.filter((t) => t.question.variant !== "text" && !(t.question.variant === "url" && t.question.icon));
    },
    iconAnswers() {
      const e = this.modalContent.contentObject.apiContent;
      return !e || !e.answers || !e.answers.length ? [] : e.answers.filter((t) => t.question.variant === "url" && t.question.icon);
    }
  },
  methods: {
    showModal() {
      var e;
      (e = this.$refs.modal) == null || e.showModal();
    },
    close() {
      var e;
      (e = this.$refs.modal) == null || e.close();
    },
    handleSpeakerClick(e, t) {
      this.$emit("showSpeaker", e, t);
    }
  }
}, t6 = /* @__PURE__ */ Pn(e6, [["render", Jx], ["styles", [Xx]]]), n6 = {
  key: 0,
  class: "track-description"
};
function r6(e, t, n, r, i, u) {
  const s = et("bunt-checkbox");
  return N(), H("dialog", {
    class: "pretalx-modal",
    id: "filter-modal",
    ref: "modal",
    onClick: t[3] || (t[3] = ei((o) => u.close(), ["stop"]))
  }, [
    J("div", {
      class: "dialog-inner",
      onClick: t[2] || (t[2] = ei(() => {
      }, ["stop"]))
    }, [
      J("button", {
        class: "close-button",
        onClick: t[0] || (t[0] = (o) => u.close())
      }, "✕"),
      t[4] || (t[4] = J("h3", null, "Tracks", -1)),
      (N(!0), H(Se, null, _t(n.tracks, (o) => (N(), H("div", {
        class: "checkbox-line",
        key: o.value,
        style: yt({ "--track-color": o.color })
      }, [
        Re(s, {
          type: "checkbox",
          label: o.label,
          name: o.value + o.label,
          modelValue: o.selected,
          "onUpdate:modelValue": (a) => o.selected = a,
          value: o.value,
          onInput: t[1] || (t[1] = (a) => e.$emit("trackToggled"))
        }, null, 8, ["label", "name", "modelValue", "onUpdate:modelValue", "value"]),
        i.getLocalizedString(o.description).length ? (N(), H("div", n6, Ae(i.getLocalizedString(o.description)), 1)) : Me("", !0)
      ], 4))), 128))
    ])
  ], 512);
}
const i6 = "#filter-modal .checkbox-line{margin:16px 8px}#filter-modal .checkbox-line .bunt-checkbox.checked .bunt-checkbox-box{background-color:var(--track-color);border-color:var(--track-color)}#filter-modal .checkbox-line .track-description{color:#757575;margin-left:32px}", u6 = {
  name: "FilterModal",
  props: {
    tracks: {
      type: Array,
      default: () => []
    }
  },
  emits: ["trackToggled"],
  data() {
    return {
      getLocalizedString: kr
    };
  },
  methods: {
    showModal() {
      var e;
      (e = this.$refs.modal) == null || e.showModal();
    },
    close() {
      var e;
      (e = this.$refs.modal) == null || e.close();
    }
  }
}, s6 = /* @__PURE__ */ Pn(u6, [["render", r6], ["styles", [i6]]]), o6 = {
  key: 0,
  class: "schedule-error"
}, a6 = {
  key: 3,
  class: "error-messages"
}, l6 = ["onClick"], c6 = { class: "message" }, f6 = {
  id: "bunt-teleport-target",
  ref: "teleportTarget"
}, d6 = {
  key: 4,
  class: "powered-by",
  href: "https://pretalx.com",
  target: "_blank"
};
function h6(e, t, n, r, i, u) {
  const s = et("schedule-settings"), o = et("bunt-tab"), a = et("bunt-tabs"), c = et("grid-schedule-wrapper"), l = et("linear-schedule"), f = et("bunt-progress-circular"), m = et("filter-modal"), p = et("session-modal");
  return N(), H("div", {
    class: It(["pretalx-schedule", u.showGrid ? ["grid-schedule"] : ["list-schedule"]]),
    style: yt({ "--scrollparent-width": i.scrollParentWidth + "px", "--schedule-max-width": u.scheduleMaxWidth + "px", "--pretalx-sticky-date-offset": u.days && u.days.length > 1 ? "48px" : "0px" })
  }, [
    i.scheduleError ? (N(), H("div", o6, t[14] || (t[14] = [
      J("div", { class: "error-message" }, "An error occurred while loading the schedule. Please try again later.", -1)
    ]))) : i.schedule && u.sessions.length ? (N(), H(Se, { key: 1 }, [
      Re(s, {
        tracks: i.schedule.tracks,
        filteredTracksCount: u.filteredTracks.length,
        favsCount: i.favs.length,
        onlyFavs: i.onlyFavs,
        inEventTimezone: u.inEventTimezone,
        currentTimezone: i.currentTimezone,
        "onUpdate:currentTimezone": t[0] || (t[0] = (h) => i.currentTimezone = h),
        scheduleTimezone: i.schedule.timezone,
        userTimezone: i.userTimezone,
        onOpenFilter: t[1] || (t[1] = (h) => {
          var E;
          return (E = e.$refs.filterModal) == null ? void 0 : E.showModal();
        }),
        onToggleFavs: t[2] || (t[2] = (h) => {
          i.onlyFavs = !i.onlyFavs, i.onlyFavs && u.resetFilteredTracks();
        }),
        onSaveTimezone: u.saveTimezone
      }, null, 8, ["tracks", "filteredTracksCount", "favsCount", "onlyFavs", "inEventTimezone", "currentTimezone", "scheduleTimezone", "userTimezone", "onSaveTimezone"]),
      u.days && u.days.length > 1 ? (N(), ct(a, {
        key: 0,
        class: It(["days", u.showGrid ? ["grid-tabs"] : ["list-tabs"]]),
        modelValue: i.currentDay,
        "onUpdate:modelValue": t[3] || (t[3] = (h) => i.currentDay = h),
        ref: "tabs"
      }, {
        default: sr(() => [
          (N(!0), H(Se, null, _t(u.days, (h) => (N(), ct(o, {
            id: h.toISODate(),
            header: h.toLocaleString(u.dateFormat),
            onSelected: (E) => u.changeDay(h)
          }, null, 8, ["id", "header", "onSelected"]))), 256))
        ]),
        _: 1
      }, 8, ["modelValue", "class"])) : Me("", !0),
      u.showGrid ? (N(), ct(c, {
        key: 1,
        sessions: u.sessions,
        rooms: u.rooms,
        days: u.days,
        currentDay: i.currentDay,
        now: i.now,
        hasAmPm: u.hasAmPm,
        timezone: i.currentTimezone,
        locale: n.locale,
        scrollParent: e.scrollParent,
        favs: i.favs,
        onHomeServer: i.onHomeServer,
        onChangeDay: t[4] || (t[4] = (h) => u.setCurrentDay(h)),
        onFav: t[5] || (t[5] = (h) => u.fav(h)),
        onUnfav: t[6] || (t[6] = (h) => u.unfav(h))
      }, null, 8, ["sessions", "rooms", "days", "currentDay", "now", "hasAmPm", "timezone", "locale", "scrollParent", "favs", "onHomeServer"])) : (N(), ct(l, {
        key: 2,
        sessions: u.sessions,
        rooms: u.rooms,
        currentDay: i.currentDay,
        now: i.now,
        hasAmPm: u.hasAmPm,
        timezone: i.currentTimezone,
        locale: n.locale,
        scrollParent: e.scrollParent,
        favs: i.favs,
        onHomeServer: i.onHomeServer,
        onChangeDay: t[7] || (t[7] = (h) => u.setCurrentDay(h)),
        onFav: t[8] || (t[8] = (h) => u.fav(h)),
        onUnfav: t[9] || (t[9] = (h) => u.unfav(h))
      }, null, 8, ["sessions", "rooms", "currentDay", "now", "hasAmPm", "timezone", "locale", "scrollParent", "favs", "onHomeServer"]))
    ], 64)) : (N(), ct(f, {
      key: 2,
      size: "huge",
      page: !0
    })),
    i.errorMessages.length ? (N(), H("div", a6, [
      (N(!0), H(Se, null, _t(i.errorMessages, (h) => (N(), H("div", {
        class: "error-message",
        key: h
      }, [
        J("div", {
          class: "btn btn-danger",
          onClick: (E) => i.errorMessages = i.errorMessages.filter((C) => C !== h)
        }, "x", 8, l6),
        J("div", c6, Ae(h), 1)
      ]))), 128))
    ])) : Me("", !0),
    J("div", f6, null, 512),
    Re(m, {
      ref: "filterModal",
      tracks: i.allTracks,
      onTrackToggled: t[10] || (t[10] = (h) => i.onlyFavs = !1)
    }, null, 8, ["tracks"]),
    Re(p, {
      ref: "sessionModal",
      modalContent: i.modalContent,
      currentTimezone: i.currentTimezone,
      locale: n.locale,
      hasAmPm: u.hasAmPm,
      now: i.now,
      onHomeServer: i.onHomeServer,
      onToggleFav: t[11] || (t[11] = (h) => {
        var E;
        return i.favs.includes((E = i.modalContent) == null ? void 0 : E.contentObject.id) ? u.unfav(i.modalContent.contentObject.id) : u.fav(i.modalContent.contentObject.id);
      }),
      onShowSpeaker: u.showSpeakerDetails,
      onFav: t[12] || (t[12] = (h) => u.fav(h)),
      onUnfav: t[13] || (t[13] = (h) => u.unfav(h))
    }, null, 8, ["modalContent", "currentTimezone", "locale", "hasAmPm", "now", "onHomeServer", "onShowSpeaker"]),
    i.onHomeServer ? Me("", !0) : (N(), H("a", d6, t[15] || (t[15] = [
      En("powered by"),
      J("span", {
        class: "pretalx",
        href: "https://pretalx.com",
        target: "_blank"
      }, "pretalx", -1)
    ])))
  ], 6);
}
const p6 = 'html{font-size:14px;font-size:87.5%}body{font-family:Roboto,Helvetica Neue,HelveticaNeue,Helvetica,Arial,sans-serif;color:#000000de;-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;font-size-adjust:auto}b{font-weight:700}i{font-style:italic}strong{font-weight:700}em{font-style:italic}h1{font-size:33.6px;font-size:2.4rem;text-rendering:optimizelegibility;font-weight:700;margin:.75em 0;line-height:1.6em}h2{font-size:25.2px;font-size:1.8rem;text-rendering:optimizelegibility;font-weight:700;margin:.75em 0;line-height:1.6em}h3{font-size:21px;font-size:1.5rem;text-rendering:optimizelegibility;font-weight:700;margin:.75em 0;line-height:1.6em}h4{font-size:18.2px;font-size:1.3rem;text-rendering:optimizelegibility;font-weight:700;margin:.75em 0;line-height:1.6em}h5{font-size:14px;font-size:1rem;text-rendering:optimizelegibility;font-weight:700;margin:.75em 0;line-height:1.6em}h6{font-size:12.6px;font-size:.9rem;text-rendering:optimizelegibility;font-weight:700;margin:.75em 0;line-height:1.6em;text-transform:uppercase}ul{margin:5px 15px;margin:.32rem .94rem;padding-left:1rem}ul li{list-style-type:disc;padding:2px 0;padding:.125rem}ol{margin:5px 18px;margin:.32rem 1.125rem;padding-left:1rem}ol li{list-style-type:decimal;padding:2px 0;padding:.125rem}::-moz-selection{background:#2196f3;color:#fff}::selection{background:#2196f3;color:#fff}p{font-size:1rem;margin:.75em 0;line-height:1.6em}small{font-size:55%;opacity:.6;font-weight:400}a[href]:not([class]){color:#2196f3;text-decoration:none}a[href]:not([class]):hover{color:#0c81df}a[href]:not([class]):visited{opacity:.8}blockquote{border-left:4px solid #2196f3;margin:1em 0;padding-left:1.5em}blockquote>p{font-weight:300;font-size:127%;font-size:1.27rem;line-height:127%;line-height:1.27rem;margin-top:0}blockquote>cite,blockquote>footer,blockquote>figcaption{color:#888}blockquote>cite:before,blockquote>footer:before,blockquote>figcaption:before{content:"—"}.hyphenation{-ms-word-break:break-all;word-break:break-all;word-break:break-word;-webkit-hyphens:auto;hyphens:auto;-webkit-hyphenate-before:2;-webkit-hyphenate-after:3;hyphenate-lines:3}.bunt-ripple-ink{display:block;overflow:hidden;border-radius:inherit;position:absolute;top:0;left:0;right:0;bottom:0;-webkit-mask-image:-webkit-radial-gradient(circle,#fff,#000)}.ripple{position:absolute;pointer-events:none;-webkit-user-select:none;user-select:none;border-radius:50%;background-color:currentColor;background-clip:padding-box;transition:transform .4s ease-out,opacity .4s ease-out;opacity:.1;transform:scale(1)}.ripple-ink-enter-from{opacity:.2;transform:scale(0)}.ripple-ink-leave-active{opacity:0;transition:transform .1s ease-out,opacity .1s ease-out}.bunt-icon{font-size:24px;width:24px;height:24px;line-height:24px;display:inline-block;cursor:inherit}.bunt-button,.bunt-link-button{font-family:Roboto,Helvetica Neue,HelveticaNeue,Helvetica,Arial,sans-serif;font-size:14px;text-transform:uppercase;font-weight:500;line-height:36px;vertical-align:middle;flex-shrink:0;outline:none;border:none;position:relative;display:inline-flex;align-items:center;justify-content:center;cursor:default;border-radius:4px;padding:0 16px;min-width:80px;height:36px;white-space:nowrap}.bunt-button::-moz-focus-inner,.bunt-link-button::-moz-focus-inner{border:0}.bunt-button.autofocus:focus,.bunt-link-button.autofocus:focus,body[modality=keyboard] .bunt-button:focus,body[modality=keyboard] .bunt-link-button:focus{outline-style:solid}.bunt-button.disabled .bunt-button-content,.bunt-link-button.disabled .bunt-button-content{opacity:.6}.bunt-button:not(.disabled),.bunt-link-button:not(.disabled){cursor:pointer}.bunt-button .bunt-progress-circular,.bunt-link-button .bunt-progress-circular{position:absolute;top:50%;left:50%}.bunt-button .bunt-progress-circular.active,.bunt-link-button .bunt-progress-circular.active{animation:button-container-rotate 1568ms linear infinite}@-moz-keyframes button-container-rotate{0%{transform:translate(-50%,-50%) rotate(0)}to{transform:translate(-50%,-50%) rotate(360deg)}}@-webkit-keyframes button-container-rotate{0%{transform:translate(-50%,-50%) rotate(0)}to{transform:translate(-50%,-50%) rotate(360deg)}}@-o-keyframes button-container-rotate{0%{transform:translate(-50%,-50%) rotate(0)}to{transform:translate(-50%,-50%) rotate(360deg)}}@keyframes button-container-rotate{0%{transform:translate(-50%,-50%) rotate(0)}to{transform:translate(-50%,-50%) rotate(360deg)}}.bunt-button .bunt-icon.error,.bunt-link-button .bunt-icon.error,.bunt-button .bunt-icon.success,.bunt-link-button .bunt-icon.success{position:absolute}.bunt-button.error .bunt-tooltip,.bunt-link-button.error .bunt-tooltip{background-color:#f44336}.bunt-button-content{display:flex}.bunt-button-content.invisible{visibility:hidden}.bunt-icon{height:36px;line-height:36px;font-size:20px}.bunt-button-raised{box-shadow:0 0 2px #0000001f,0 2px 2px #0003;transition:box-shadow .1s}.bunt-button-raised.autofocus:focus,body[modality=keyboard] .bunt-button-raised:focus{outline:none;box-shadow:0 0 5px #00000038,0 3px 6px #0000004d}.bunt-checkbox{position:relative;display:flex;align-items:center;flex-shrink:0}.bunt-checkbox input{position:absolute;top:0;left:0;height:1px;width:1px;opacity:0;cursor:pointer}.bunt-checkbox label{font-size:14px;line-height:24px;cursor:pointer;display:flex;align-items:center}.bunt-checkbox .bunt-checkbox-box{height:20px;width:20px;border-radius:2px;border:2px solid rgba(0,0,0,.54);margin-right:8px;position:relative;transition:all .2s ease-out}.bunt-checkbox .bunt-checkbox-box:after{width:6px;height:13px;position:absolute;top:0;left:6px;border:2px solid #fff;border-top:0;border-left:0;opacity:0;transform:rotate(45deg) scale3D(.15,.15,1);transition:all .3s cubic-bezier(.55,0,.55,.2);content:" "}.bunt-checkbox.checked .bunt-checkbox-box{background-color:#2196f3;border-color:#2196f3}.bunt-checkbox.checked .bunt-checkbox-box:after{opacity:1;transform:rotate(45deg) scaleZ(1);transition:all .4s cubic-bezier(.25,.8,.25,1)}.bunt-checkbox.disabled label{cursor:not-allowed;color:#0000008a}.bunt-checkbox.disabled .bunt-checkbox-box{border-color:#bdbdbd}.bunt-checkbox.disabled.checked .bunt-checkbox-box{background-color:#bdbdbd}.bunt-radio{cursor:pointer;position:relative;display:flex;flex-shrink:0;padding-top:16px}.bunt-radio input{position:absolute;cursor:inherit;pointer-events:all;opacity:0;width:100%;height:100%;z-index:2;left:0;box-sizing:border-box;padding:0;margin:0}.bunt-radio label{font-size:14px;line-height:20px}.bunt-radio .bunt-radio-circle{height:20px;width:20px;border-radius:50%;border:2px solid rgba(0,0,0,.54);margin-right:8px;position:relative;transition:all .2s ease-out;box-sizing:border-box}.bunt-radio .bunt-radio-circle:after{width:10px;height:10px;position:absolute;top:3px;left:3px;background-color:#2196f3;transition:all .4s cubic-bezier(.25,.8,.25,1);border-radius:50%;opacity:0;content:" "}.bunt-radio.checked .bunt-radio-circle{border-color:#2196f3}.bunt-radio.checked .bunt-radio-circle:after{opacity:1}.bunt-icon-button{line-height:36px;vertical-align:middle;flex-shrink:0;background:none;outline:none;border:none;position:relative;display:inline-flex;align-items:center;justify-content:center;cursor:default;border-radius:50%;padding:0;height:36px;width:36px;background-color:transparent}.bunt-icon-button::-moz-focus-inner{border:0}.bunt-icon-button.autofocus:focus,body[modality=keyboard] .bunt-icon-button:focus{outline-style:solid}.bunt-icon-button.disabled .bunt-icon,.bunt-icon-button.disabled svg{opacity:.6}.bunt-icon-button:not(.disabled){cursor:pointer}.bunt-icon-button.autofocus:focus,body[modality=keyboard] .bunt-icon-button:focus{outline-width:2px;outline-offset:0}.bunt-icon-button .bunt-icon{height:36px;line-height:36px;font-size:20px;width:auto}.bunt-icon-button svg{height:20px}.bunt-input{display:flex;flex-direction:column;height:56px;padding-top:16px;flex-shrink:0}.bunt-input .label-input-container{position:relative;display:flex;align-items:center}.bunt-input .icon{font-size:22px;color:#0000008a;padding:0 0 0 8px}.bunt-input input{box-sizing:border-box;height:37px;width:100%;border:none;outline:none;font-family:Roboto,Helvetica Neue,HelveticaNeue,Helvetica,Arial,sans-serif;font-size:16px;font-weight:400;flex:auto;padding:8px 8px 8px 12px;background-color:transparent;border-radius:4px}.bunt-input label{position:absolute;top:8px;left:12px;font-size:16px;font-weight:400;line-height:21px;pointer-events:none;color:#0000008a;transition:transform .25s,width .25s;transform-origin:left top}.bunt-input ::placeholder{color:#0000008a}.bunt-input .error-icon{font-size:22px;color:#f44336;padding-right:8px}.bunt-input .outline{position:absolute;top:0;left:0;height:100%;width:100%;stroke:#00000061;stroke-width:1px;fill:none;pointer-events:none;stroke-dasharray:calc(var(--label-gap) / 2 + 4) 0 100000;transition:stroke .15s cubic-bezier(.4,0,.2,1),stroke-width .15s cubic-bezier(.4,0,.2,1),stroke-dasharray .15s cubic-bezier(.4,0,.2,1)}.bunt-input .hint{font-size:13px;padding-top:0;padding-left:16px;color:#0000008a;line-height:18px}.bunt-input .hint p{margin:0}.bunt-input.with-icon input{padding-left:4px}.bunt-input.focused .outline{stroke:#2196f3;stroke-width:2px}.bunt-input.focused label{color:#2196f3}.bunt-input.floating-label .outline,.bunt-input.focused .outline{stroke-dasharray:3 var(--label-gap) 10000}.bunt-input.floating-label label,.bunt-input.focused label{transform:translateY(-15px) scale(.75)}.bunt-input.disabled{cursor:not-allowed}.bunt-input.disabled input{cursor:not-allowed;background-color:#00000014;color:#00000061}.bunt-input.disabled .outline{stroke-dasharray:10}.bunt-input.disabled.floating-label .outline,.bunt-input.disabled.focused .outline{stroke-dasharray:3 var(--label-gap) 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10}.bunt-input.invalid .hint,.bunt-input.invalid label{color:#f44336}.bunt-input.invalid .outline{stroke:#f44336;stroke-width:2px}.bunt-input-outline-container{display:flex;flex-direction:column;padding-top:16px;flex-shrink:0;position:relative}.bunt-input-outline-container>label{position:absolute;top:8px;left:12px;font-size:16px;font-weight:400;line-height:21px;pointer-events:none;color:#0000008a;transform-origin:left top;transform:translateY(-15px) scale(.75)}.bunt-input-outline-container>.outline{position:absolute;top:0;left:0;height:100%;width:100%;stroke:#00000061;stroke-width:1px;fill:none;pointer-events:none;stroke-dasharray:3 var(--label-gap) 10000;transition:stroke .15s cubic-bezier(.4,0,.2,1),stroke-width .15s cubic-bezier(.4,0,.2,1),stroke-dasharray .15s cubic-bezier(.4,0,.2,1)}.bunt-input-outline-container.focused>.outline{stroke:#2196f3;stroke-width:2px}.bunt-input-outline-container.focused>label{color:#2196f3}a.bunt-link-button{display:inline-flex;background-color:#eee;text-decoration:none;color:#000000de}.bunt-drop-element{position:absolute;display:none;z-index:$z-index-dropdown;max-width:100%;max-height:100%;transition:opacity .2s ease;opacity:0}.bunt-drop-element,.bunt-drop-element:after,.bunt-drop-element:before,.bunt-drop-element *,.bunt-drop-element *:after,.bunt-drop-element *:before{box-sizing:border-box}.bunt-drop-element.bunt-drop-open{display:block}.bunt-drop-element.bunt-drop-after-open{opacity:1}.bunt-progress-circular{display:inline-block;position:relative;width:48px;height:48px}.bunt-progress-circular.tiny{width:14px;height:14px}.bunt-progress-circular.tiny circle{stroke-width:8}.bunt-progress-circular.small{width:24px;height:24px}.bunt-progress-circular.small circle{stroke-width:7}.bunt-progress-circular.big{width:64px;height:64px}.bunt-progress-circular.big circle{stroke-width:4}.bunt-progress-circular.huge{width:128px;height:128px}.bunt-progress-circular.huge circle{stroke-width:3}.bunt-progress-circular.progress-center{display:block;margin:auto}.bunt-progress-circular.progress-page{display:block;margin:7rem auto}.bunt-progress-circular svg{animation:bunt-progress-circular-rotate 1568ms linear infinite;position:relative;height:100%;width:100%}.bunt-progress-circular svg circle{fill:none;stroke:#2196f3;stroke-width:5px;stroke-miterlimit:10;stroke-dasharray:1,200;stroke-dashoffset:0;stroke-linecap:square;animation:bunt-progress-circular-dash 1333ms ease-in-out infinite}@-moz-keyframes bunt-progress-circular-rotate{to{transform:rotate(360deg)}}@-webkit-keyframes bunt-progress-circular-rotate{to{transform:rotate(360deg)}}@-o-keyframes bunt-progress-circular-rotate{to{transform:rotate(360deg)}}@keyframes bunt-progress-circular-rotate{to{transform:rotate(360deg)}}@-moz-keyframes bunt-progress-circular-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@-webkit-keyframes bunt-progress-circular-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@-o-keyframes bunt-progress-circular-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes bunt-progress-circular-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}.bunt-select{position:relative}.bunt-select .open-indicator{position:absolute;right:4px;color:#0000008a;font-size:28px;line-height:20px;top:8px;transition:all .25s ease-in-out;cursor:pointer}.bunt-select.open .open-indicator{transform-origin:center;transform:rotate(180deg)}.bunt-select .bunt-input input{padding-right:20px}.bunt-select-dropdown-menu{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;background-color:#fff;transition:box-shadow .3s;border-top:none;border-radius:0 0 2px 2px;z-index:100;display:flex;flex-direction:column}.bunt-select-dropdown-menu .scrollable-menu{display:flex;flex-direction:column;flex:auto;min-height:0}.bunt-select-dropdown-menu ul{margin:0;padding:0}.bunt-select-dropdown-menu li{list-style-type:none;height:32px;padding:0 8px;line-height:32px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.bunt-select-dropdown-menu li.highlight{background-color:#2196f3}.bunt-switch{cursor:pointer;position:relative;display:flex;height:20px;margin-bottom:8px;flex-shrink:0}.bunt-switch input{position:absolute;cursor:inherit;pointer-events:all;opacity:0;width:100%;height:100%;z-index:2;left:0;box-sizing:border-box;padding:0;margin:0}.bunt-switch label{font-size:14px;line-height:14px}.bunt-switch .bunt-switch-track{height:14px;width:36px;border-radius:30px;background-color:#00000061;margin-right:8px;position:relative;transition:all .4s ease-out}.bunt-switch .bunt-switch-thumb{height:20px;width:20px;background-color:#fafafa;border-radius:50%;position:absolute;left:0;top:50%;transform:translate3d(-1px,-50%,0);transition:all .3s ease;box-shadow:0 1px 1px #00000024,0 1px 3px #0000001f,0 2px 1px -1px #0003}.bunt-switch.checked .bunt-switch-track{background-color:#2196f380}.bunt-switch.checked .bunt-switch-thumb{background-color:#2196f3;transform:translate3d(75%,-50%,0);box-shadow:0 2px 2px #00000024,0 1px 5px #0000001f,0 3px 1px -2px #0003}.bunt-tabs{width:100%;margin-bottom:24px}.bunt-tabs-header{position:relative;width:100%}.bunt-tabs-header .bunt-tab-header-item .bunt-ripple-ink .ripple.held{opacity:.7}.bunt-tabs-header-items{position:relative;display:flex;list-style:none;margin:0;padding:0}.bunt-tab-header-item{font-family:Roboto,Helvetica Neue,HelveticaNeue,Helvetica,Arial,sans-serif;position:relative;display:flex;height:48px;padding:0 12px;text-transform:uppercase;align-items:center;justify-content:center;cursor:pointer;min-width:80px;outline:none}.bunt-tab-header-item.type-icon-and-text{display:flex;flex-direction:column;height:72px}.bunt-tab-header-item.type-icon-and-text .bunt-tab-header-item-icon{margin-bottom:4px}.bunt-tab-header-item.disabled{opacity:.4;cursor:default}.bunt-tabs-indicator{position:absolute;height:2px;bottom:0;left:0;right:0;transform:scale(0);transform-origin:left center;transition:transform}.bunt-tabs-indicator.align-bottom{top:0;bottom:auto}.bunt-tabs-indicator.expand{transition-duration:75ms;transition-timing-function:cubic-bezier(.4,0,1,1)}.bunt-tabs-indicator.contract{transition-duration:.09s;transition-timing-function:cubic-bezier(0,0,.2,1)}.bunt-tooltip{left:0;top:0;will-change:transform,opacity;background-color:#0000008a;color:#fff;height:24px;white-space:nowrap;line-height:24px;padding:0 8px;font-size:14px;font-weight:400;text-transform:none;border-radius:2px;pointer-events:none;-webkit-user-select:none;user-select:none;-moz-user-select:none;z-index:90000}.bunt-dialog-container{position:fixed;top:0;bottom:0;left:0;right:0;z-index:90001;display:flex;justify-content:center;align-items:center}.bunt-dialog-container .bunt-dialog{z-index:90003;width:50vw;border-radius:2px;box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;background-color:#fff;transition:box-shadow .3s}.bunt-dialog-container .bunt-backdrop{z-index:90002;position:absolute;top:0;bottom:0;left:0;right:0;background-color:#0000008a}.bunt-scrollbar{position:relative;box-sizing:border-box;overflow:scroll;scrollbar-width:none}.bunt-scrollbar:hover .bunt-scrollbar-thumb{opacity:.4}.bunt-scrollbar::-webkit-scrollbar{display:none}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-x,.bunt-scrollbar .bunt-scrollbar-rail-wrapper-y{position:sticky;-webkit-user-select:none;user-select:none;margin:0!important}.bunt-scrollbar .bunt-scrollbar-rail-x,.bunt-scrollbar .bunt-scrollbar-rail-y{position:absolute;-webkit-user-select:none;user-select:none}.bunt-scrollbar .bunt-scrollbar-thumb{position:absolute;background-color:#546e7a;opacity:.2;border-radius:6px;transition:height .3s cubic-bezier(.4,0,.2,1),width .3s cubic-bezier(.4,0,.2,1),opacity .3s cubic-bezier(.4,0,.2,1)}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-x{top:100%;bottom:0;left:0;width:0;height:0}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-x .bunt-scrollbar-rail-x{height:15px;bottom:0}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-x .bunt-scrollbar-rail-x .bunt-scrollbar-thumb{bottom:2px;height:6px}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-x .bunt-scrollbar-rail-x:hover .bunt-scrollbar-thumb,.bunt-scrollbar .bunt-scrollbar-rail-wrapper-x .bunt-scrollbar-rail-x.active .bunt-scrollbar-thumb{height:12px;opacity:.8}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-y{bottom:100%;left:100%;right:0;height:0;width:0}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-y .bunt-scrollbar-rail-y{width:15px;right:0;top:0}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-y .bunt-scrollbar-rail-y .bunt-scrollbar-thumb{right:2px;width:6px}.bunt-scrollbar .bunt-scrollbar-rail-wrapper-y .bunt-scrollbar-rail-y:hover .bunt-scrollbar-thumb,.bunt-scrollbar .bunt-scrollbar-rail-wrapper-y .bunt-scrollbar-rail-y.active .bunt-scrollbar-thumb{width:12px;opacity:.8}a{color:var(--pretalx-clr-primary);text-decoration:none}html,body{margin:0;--pretalx-clr-primary: #673ab7}.bunt-scrollbar{min-height:0}.schedule-error{color:$clr-error;font-size:18px;text-align:center;padding:32px}.schedule-error .error-message{margin-top:16px}.pretalx-schedule,dialog.pretalx-modal{color:#0d0f10}.pretalx-schedule{display:flex;flex-direction:column;min-height:0;height:100%;font-size:14px;--pretalx-clr-text: #0d0f10}.pretalx-schedule.grid-schedule{min-width:min-content;max-width:var(--schedule-max-width);margin:0 auto}.pretalx-schedule.list-schedule{min-width:0}.pretalx-schedule .days{background-color:#fff;overflow-x:auto;position:sticky;top:var(--pretalx-sticky-top-offset, 0px);left:0;margin-bottom:0;flex:none;min-width:0;max-width:var(--schedule-max-width);height:48px;z-index:30}.pretalx-schedule .days .bunt-tabs-header{background-color:transparent}.pretalx-schedule .days .bunt-tabs-header .bunt-tabs-header-items,.pretalx-schedule .days .bunt-tabs-header .bunt-tabs-header-items .bunt-tab-header-item-icon{color:#0000008a}body[modality=keyboard] .pretalx-schedule .days .bunt-tabs-header .bunt-tab-header-item:focus{outline:1px solid var(--pretalx-clr-primary)}.pretalx-schedule .days .bunt-tabs-header .bunt-tab-header-item.active,.pretalx-schedule .days .bunt-tabs-header .bunt-tab-header-item.active .bunt-tab-header-item-icon{color:var(--pretalx-clr-primary)}.pretalx-schedule .days .bunt-tabs-indicator{background-color:var(--pretalx-clr-primary)}.pretalx-schedule .days .bunt-tabs-header{min-width:min-content}.pretalx-schedule .days .bunt-tabs-header-items{justify-content:center;min-width:min-content}.pretalx-schedule .days .bunt-tabs-header-items .bunt-tab-header-item{min-width:min-content}.pretalx-schedule .days .bunt-tabs-header-items .bunt-tab-header-item-text{white-space:nowrap}.error-messages{position:fixed;width:250px;bottom:0;right:0;padding:12px;z-index:1000}.error-messages .error-message{padding:8px;color:#f44336;background-color:#fff;border:2px solid #f44336;border-radius:6px;box-shadow:0 2px 4px #0003;margin-top:8px;position:relative}.error-messages .error-message .btn{border:1px solid #f44336;border-radius:2px;box-shadow:1px 1px 2px #0003;width:18px;height:18px;position:absolute;top:4px;right:4px;display:flex;justify-content:center;align-items:center;cursor:pointer}.error-messages .error-message .message{margin-right:22px}.powered-by{text-align:center;color:#757575;font-size:12px;margin-top:16px;margin-bottom:16px}.powered-by .pretalx{transition:all .1s ease-in;font-weight:700;margin-left:4px;color:#757575}.powered-by:hover .pretalx{color:#3aa57c}', m6 = Ht({
  linkify: !1,
  breaks: !0
}), b6 = {
  name: "PretalxSchedule",
  components: { FavButton: Pa, LinearSchedule: D_, GridScheduleWrapper: G_, Session: Ms, ScheduleSettings: ex, SessionModal: t6, FilterModal: s6 },
  props: {
    eventUrl: String,
    locale: String,
    format: {
      type: String,
      default: "grid"
    },
    version: {
      type: String,
      default: ""
    },
    // List the dates that should be displayed, as comma-separated ISO strings
    dateFilter: {
      type: String,
      default: ""
    }
  },
  provide() {
    return {
      eventUrl: this.eventUrl,
      remoteApiUrl: Hu(() => this.remoteApiUrl),
      buntTeleportTarget: Hu(() => this.$refs.teleportTarget),
      onSessionLinkClick: (e, t) => {
        this.onHomeServer || (e.preventDefault(), this.showSessionDetails(t, e));
      }
    };
  },
  data() {
    var e;
    return {
      getLocalizedString: kr,
      getSessionTime: es,
      markdownIt: m6,
      scrollParentWidth: 1 / 0,
      schedule: null,
      userTimezone: null,
      now: de.now(),
      currentDay: null,
      currentTimezone: null,
      favs: [],
      allTracks: [],
      onlyFavs: !1,
      scheduleError: !1,
      onHomeServer: !1,
      loggedIn: !1,
      apiUrl: null,
      translationMessages: {},
      errorMessages: [],
      displayDates: ((e = this.dateFilter) == null ? void 0 : e.split(",").filter((t) => t.length === 10)) || [],
      modalContent: null
    };
  },
  computed: {
    scheduleMaxWidth() {
      return this.schedule ? Math.min(this.scrollParentWidth, 78 + this.schedule.rooms.length * 650) : this.scrollParentWidth;
    },
    showGrid() {
      return this.scrollParentWidth > 710 && this.format !== "list";
    },
    roomsLookup() {
      return this.schedule ? this.schedule.rooms.reduce((e, t) => (e[t.id] = t, e), {}) : {};
    },
    tracksLookup() {
      return this.schedule ? this.schedule.tracks.reduce((e, t) => (e[t.id] = t, e), {}) : {};
    },
    filteredTracks() {
      return this.allTracks.filter((e) => e.selected);
    },
    speakersLookup() {
      return this.schedule ? this.schedule.speakers.reduce((e, t) => (e[t.code] = t, e), {}) : {};
    },
    sessions() {
      var t;
      if (!this.schedule || !this.currentTimezone) return;
      const e = [];
      for (const n of this.schedule.talks.filter((r) => r.start)) {
        if (this.onlyFavs && !this.favs.includes(n.code) || this.filteredTracks && this.filteredTracks.length && !this.filteredTracks.find((i) => i.id === n.track)) continue;
        const r = de.fromISO(n.start);
        this.displayDates.length && !this.displayDates.includes(r.setZone(this.schedule.timezone).toISODate()) || e.push({
          id: n.code,
          title: n.title,
          abstract: n.abstract,
          do_not_record: n.do_not_record,
          start: r,
          end: de.fromISO(n.end),
          speakers: (t = n.speakers) == null ? void 0 : t.map((i) => this.speakersLookup[i]),
          track: this.tracksLookup[n.track],
          room: this.roomsLookup[n.room]
        });
      }
      return e.sort((n, r) => n.start.diff(r.start)), e;
    },
    rooms() {
      return this.schedule.rooms.filter((e) => this.sessions.some((t) => t.room === e));
    },
    days() {
      if (!this.sessions) return;
      let e = [];
      for (const t of this.sessions) {
        const n = t.start.setZone(this.currentTimezone).startOf("day");
        e.find((r) => r.ts === n.ts) || e.push(n);
      }
      return e.sort((t, n) => t.diff(n)), e;
    },
    inEventTimezone() {
      var e, t;
      return (t = (e = this.schedule) == null ? void 0 : e.talks) != null && t.length ? de.local().offset === de.local({ zone: this.schedule.timezone }).offset : !1;
    },
    dateFormat() {
      const e = { day: "numeric", month: "short" };
      return this.showGrid && (this.days && (!this.days.length || this.days.length <= 7) ? e.weekday = "long" : e.weekday = "short"), (this.days && this.days.length <= 5 || this.showGrid && this.schedule && this.schedule.rooms.length > 2) && (e.month = "long"), e;
    },
    hasAmPm() {
      return new Intl.DateTimeFormat(this.locale, { hour: "numeric" }).resolvedOptions().hour12;
    },
    eventSlug() {
      let e = "";
      return this.eventUrl.startsWith("http") ? e = new URL(this.eventUrl) : e = new URL("http://example.org/" + this.eventUrl), e.pathname.replace(/\//g, "");
    },
    remoteApiUrl() {
      if (!this.eventUrl) return "";
      const e = new URL(this.eventUrl);
      return `${e.protocol}//${e.host}/api/events/${this.eventSlug}/`;
    }
  },
  async created() {
    const e = window.location.hash.slice(1);
    Je.defaultLocale = this.locale, this.userTimezone = de.local().zoneName;
    let t = "";
    this.version && (t = `v/${this.version}/`);
    const n = `${this.eventUrl}schedule/${t}widgets/schedule.json`, r = `${this.eventUrl}schedule/${t}widget/v2.json`;
    try {
      this.schedule = await (await fetch(n)).json();
    } catch {
      try {
        this.schedule = await (await fetch(r)).json();
      } catch {
        this.scheduleError = !0;
        return;
      }
    }
    if (!this.schedule.talks.length) {
      this.scheduleError = !0;
      return;
    }
    if (this.currentTimezone = localStorage.getItem(`${this.eventSlug}_timezone`), this.currentTimezone = [this.schedule.timezone, this.userTimezone].includes(this.currentTimezone) ? this.currentTimezone : this.schedule.timezone, this.currentDay = this.days[0].toISODate(), this.now = de.local({ zone: this.currentTimezone }), setInterval(() => this.now = de.local({ zone: this.currentTimezone }), 3e4), this.scrollParentResizeObserver || (await this.$nextTick(), this.onWindowResize()), this.schedule.tracks.forEach((i) => {
      i.value = i.id, i.label = kr(i.name), this.allTracks.push(i);
    }), this.apiUrl = window.location.origin + "/api/events/" + this.eventSlug + "/", this.favs = this.pruneFavs(await this.loadFavs(), this.schedule), e && e.length === 10) {
      const i = de.fromISO(e, { zone: this.currentTimezone }), u = this.days.filter((s) => s.setZone(this.timezone).toISODate() === i.toISODate());
      u.length && (this.currentDay = u[0].toISODate());
    }
  },
  async mounted() {
    var e;
    await new Promise((t) => {
      const n = () => {
        if (this.$el.parentElement || this.$el.getRootNode().host) return t();
        setTimeout(n, 100);
      };
      n();
    }), this.scrollParent = Qd(this.$el.parentElement || this.$el.getRootNode().host), this.scrollParent ? (this.scrollParentResizeObserver = new ResizeObserver(this.onScrollParentResize), this.scrollParentResizeObserver.observe(this.scrollParent), this.scrollParentWidth = this.scrollParent.offsetWidth) : (window.addEventListener("resize", this.onWindowResize), this.onWindowResize()), typeof PRETALX_MESSAGES < "u" && (this.translationMessages = PRETALX_MESSAGES, this.onHomeServer = !0, ((e = document.querySelector("#pretalx-messages")) == null ? void 0 : e.dataset.loggedIn) === "true" && (this.loggedIn = !0));
  },
  destroyed() {
  },
  methods: {
    setCurrentDay(e) {
      const t = this.days.filter((n) => n.toISODate() === e.toISODate());
      t.length && (this.currentDay = t[0].toISODate());
    },
    changeDay(e) {
      e.startOf("day").toISODate() !== this.currentDay && (this.currentDay = e.startOf("day").toISODate(), window.location.hash = e.toISODate());
    },
    onWindowResize() {
      this.scrollParentWidth = document.body.offsetWidth;
    },
    saveTimezone() {
      localStorage.setItem(`${this.eventSlug}_timezone`, this.currentTimezone);
    },
    onScrollParentResize(e) {
      this.scrollParentWidth = e[0].contentRect.width;
    },
    async remoteApiRequest(e, t, n) {
      const r = new URL(this.eventUrl), i = `${r.protocol}//${r.host}/api/events/${this.eventSlug}/`;
      return this.apiRequest(e, t, n, i);
    },
    async apiRequest(e, t, n, r) {
      const u = `${r || this.apiUrl}${e}`, s = new Headers();
      this.onHomeServer && s.append("Content-Type", "application/json"), (t === "POST" || t === "DELETE") && s.append("X-CSRFToken", document.cookie.split("pretalx_csrftoken=").pop().split(";").shift());
      const o = await fetch(u, {
        method: t,
        headers: s,
        body: JSON.stringify(n),
        credentials: this.onHomeServer ? "same-origin" : "omit"
      });
      if (!o.ok)
        throw new Error(`HTTP error! status: ${o.status}`);
      return o.json();
    },
    async loadFavs() {
      const e = localStorage.getItem(`${this.eventSlug}_favs`);
      let t = [];
      if (e)
        try {
          t = JSON.parse(e) || [];
        } catch {
          localStorage.setItem(`${this.eventSlug}_favs`, "[]");
        }
      if (this.loggedIn)
        try {
          t = await this.apiRequest("submissions/favourites/", "GET").then((n) => (t.filter((i) => !n.includes(i)).forEach((i) => this.apiRequest(`submissions/${i}/favourite/`, "POST").catch()), n)).catch((n) => {
            this.pushErrorMessage(this.translationMessages.favs_not_saved);
          });
        } catch {
          this.pushErrorMessage(this.translationMessages.favs_not_saved);
        }
      return t || [];
    },
    pushErrorMessage(e) {
      !e || !e.length || this.errorMessages.includes(e) || this.errorMessages.push(e);
    },
    pruneFavs(e, t) {
      const r = (t.talks || []).map((i) => i.code);
      return e.filter((i) => r.includes(i));
    },
    saveFavs() {
      localStorage.setItem(`${this.eventSlug}_favs`, JSON.stringify(this.favs));
    },
    fav(e) {
      this.favs.includes(e) || (this.favs.push(e), this.saveFavs()), this.loggedIn ? this.apiRequest(`submissions/${e}/favourite/`, "POST").catch((t) => {
        this.pushErrorMessage(this.translationMessages.favs_not_saved);
      }) : this.pushErrorMessage(this.translationMessages.favs_not_logged_in);
    },
    unfav(e) {
      this.favs = this.favs.filter((t) => t !== e), this.saveFavs(), this.loggedIn ? this.apiRequest(`submissions/${e}/favourite/`, "DELETE").catch((t) => {
        this.pushErrorMessage(this.translationMessages.favs_not_saved);
      }) : this.pushErrorMessage(this.translationMessages.favs_not_logged_in), this.favs.length || (this.onlyFavs = !1);
    },
    async fetchSpeakerApiContentIfNeeded(e) {
      const t = this.speakersLookup[e];
      if (!t) {
        console.warn(`Speaker with code ${e} not found in speakersLookup.`);
        return;
      }
      if (!(t.apiContent || t.isLoadingApiContent)) {
        t.isLoadingApiContent = !0;
        try {
          const n = await this.remoteApiRequest(`speakers/${e}/?expand=answers.question`, "GET");
          t.apiContent = n;
        } catch (n) {
          console.error(`Failed to fetch API content for speaker ${e}:`, n);
        } finally {
          t.isLoadingApiContent = !1;
        }
      }
    },
    async showSpeakerDetails(e, t) {
      var i;
      t.preventDefault();
      const n = this.speakersLookup[e.code];
      if (!n) {
        console.warn(`Speaker ${e.code} not found for details view.`);
        return;
      }
      const r = this.sessions.filter(
        (u) => {
          var s;
          return (s = u.speakers) == null ? void 0 : s.some((o) => o.code === e.code);
        }
      );
      this.modalContent = {
        contentType: "speaker",
        contentObject: {
          ...n,
          sessions: r.map((u) => ({ ...u, faved: this.favs.includes(u.id) })),
          isLoading: !n.apiContent
        }
      }, (i = this.$refs.sessionModal) == null || i.showModal(), await this.fetchSpeakerApiContentIfNeeded(e.code), this.modalContent && this.modalContent.contentType === "speaker" && this.modalContent.contentObject.code === e.code && (this.modalContent = {
        contentType: "speaker",
        contentObject: {
          ...this.speakersLookup[e.code],
          // Use the potentially updated speakerObj
          sessions: r.map((u) => ({ ...u, faved: this.favs.includes(u.id) })),
          isLoading: !1
          // Fetch attempt is done, modal's own spinner can be turned off.
          // Content visibility (biography) depends on speakerObj.apiContent.
        }
      });
    },
    async showSessionDetails(e, t) {
      var r;
      t.preventDefault();
      const n = this.schedule.talks.find((i) => i.code === e.id);
      if (this.modalContent = {
        contentType: "session",
        contentObject: {
          ...e,
          apiContent: n.apiContent,
          isLoading: !n.apiContent,
          faved: this.favs.includes(e.id)
        }
      }, (r = this.$refs.sessionModal) == null || r.showModal(), !n.apiContent)
        try {
          this.modalContent && this.modalContent.contentType === "session" && this.modalContent.contentObject.id === e.id && (this.modalContent.contentObject.isLoading = !0), n.apiContent = await this.remoteApiRequest(`submissions/${e.id}/?expand=answers.question`, "GET"), this.modalContent && this.modalContent.contentType === "session" && this.modalContent.contentObject.id === e.id && (this.modalContent = {
            contentType: "session",
            contentObject: {
              ...e,
              apiContent: n.apiContent,
              isLoading: !1,
              faved: this.favs.includes(e.id)
            }
          });
        } catch (i) {
          console.error("Failed to fetch session details:", i), this.modalContent && this.modalContent.contentType === "session" && this.modalContent.contentObject.id === e.id && (this.modalContent.contentObject.isLoading = !1);
        }
      if (e.speakers && e.speakers.length > 0) {
        const i = e.speakers.map(
          (u) => this.fetchSpeakerApiContentIfNeeded(u.code)
        );
        Promise.allSettled(i);
      }
    },
    resetFilteredTracks() {
      this.allTracks.forEach((e) => e.selected = !1);
    }
  }
}, g6 = /* @__PURE__ */ Pn(b6, [["render", h6], ["styles", [p6]]]), y6 = /* @__PURE__ */ ya(g6, {
  configureApp(e) {
    e.use(eb);
  }
});
customElements.define("pretalx-schedule", y6);
