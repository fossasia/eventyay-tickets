name: eventyay-next

services:
  web:
    image: eventyay/eventyay-next:enext
    container_name: eventyay-next-web
    command: gunicorn eventyay.config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./data/static:/home/app/web/eventyay/static.dist
      - ./data/data:/data
    ports:
      - 8000:8000
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  worker:
    container_name: eventyay-next-worker
    command: celery -A eventyay.celery_app worker -l info
    env_file:
      - ./.env
    depends_on:
      - redis

  db:
    image: postgres:15
    container_name: eventyay-next-db
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:latest
    container_name: eventyay-next-redis
    restart: unless-stopped
    volumes:
      - rd:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  watchtower:
    image: containrrr/watchtower
    container_name: eventyay-next-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      WATCHTOWER_NOTIFICATIONS: 'shoutrrr'
      WATCHTOWER_NOTIFICATIONS_HOSTNAME: eventyay-next
      WATCHTOWER_POLL_INTERVAL: 600
      WATCHTOWER_NOTIFICATION_URL: ${WATCHTOWER_NOTIFICATION_URL}
    command: watchtower eventyay-next-web --cleanup

volumes:
  rd:

