name: eventyay

services:
  web:
    image: eventyay/eventyay-next:enext
    container_name: eventyay-next-web
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn eventyay.config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/static
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:15
    container_name: eventyay-next-db
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod
  #nginx:
  #  build: ./nginx
  #  volumes:
  #    - static_volume:/home/app/web/eventyay/staticfiles
  #  ports:
  #    - 1337:80
  #  depends_on:
  #    - web
  nginx:
    image: nginx:stable
    container_name: eventyay-next-nginx
    volumes:
      - static_volume:/home/app/web/eventyay/staticfiles
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 1337:80
    depends_on:
      - web
  watchtower:
    image: containrrr/watchtower
    container_name: eventyay-next-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      WATCHTOWER_NOTIFICATIONS: 'shoutrrr'
      WATCHTOWER_NOTIFICATIONS_HOSTNAME: eventyay-next
      WATCHTOWER_POLL_INTERVAL: 600
      WATCHTOWER_NOTIFICATION_URL: ${WATCHTOWER_NOTIFICATION_URL}
    command: watchtower eventyay-next-web --cleanup


volumes:
  postgres_data_prod:
  static_volume:
